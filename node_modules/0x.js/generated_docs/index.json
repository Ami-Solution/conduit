{
	"id": 0,
	"name": "0x.js",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1577,
			"name": "\"src/0x\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/0x.ts",
			"children": [
				{
					"id": 1578,
					"name": "ZeroEx",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The ZeroEx class is the single entry-point into the 0x.js library. It contains all of the library's functionality\nand all calls to the library should be made through a ZeroEx instance."
					},
					"children": [
						{
							"id": 1607,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Instantiates a new ZeroEx instance that provides the public interface to the 0x.js library.",
								"returns": "An instance of the 0x.js ZeroEx class.\n"
							},
							"signatures": [
								{
									"id": 1608,
									"name": "new ZeroEx",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Instantiates a new ZeroEx instance that provides the public interface to the 0x.js library.",
										"returns": "An instance of the 0x.js ZeroEx class.\n"
									},
									"parameters": [
										{
											"id": 1609,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The Web3.js Provider instance you would like the 0x.js library to use for interacting with\n                     the Ethereum network."
											},
											"type": {
												"type": "reference",
												"name": "Web3Provider",
												"id": 637
											}
										},
										{
											"id": 1610,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The configuration object. Look up the type for the description."
											},
											"type": {
												"type": "reference",
												"name": "ZeroExConfig",
												"id": 514
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ZeroEx",
										"id": 1578
									}
								}
							],
							"sources": [
								{
									"fileName": "src/0x.ts",
									"line": 165,
									"character": 5
								}
							]
						},
						{
							"id": 1583,
							"name": "etherToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "An instance of the EtherTokenWrapper class containing methods for interacting with the\nwrapped ETH ERC20 token smart contract."
							},
							"sources": [
								{
									"fileName": "src/0x.ts",
									"line": 66,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "EtherTokenWrapper",
								"id": 1040
							}
						},
						{
							"id": 1580,
							"name": "exchange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "An instance of the ExchangeWrapper class containing methods for interacting with the 0x Exchange smart contract."
							},
							"sources": [
								{
									"fileName": "src/0x.ts",
									"line": 52,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "ExchangeWrapper",
								"id": 1223
							}
						},
						{
							"id": 1585,
							"name": "orderStateWatcher",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "An instance of the OrderStateWatcher class containing methods for watching a set of orders for relevant\nblockchain state changes."
							},
							"sources": [
								{
									"fileName": "src/0x.ts",
									"line": 76,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "OrderStateWatcher",
								"id": 1531
							}
						},
						{
							"id": 1584,
							"name": "proxy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "An instance of the TokenTransferProxyWrapper class containing methods for interacting with the\ntokenTransferProxy smart contract."
							},
							"sources": [
								{
									"fileName": "src/0x.ts",
									"line": 71,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "TokenTransferProxyWrapper",
								"id": 874
							}
						},
						{
							"id": 1582,
							"name": "token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "An instance of the TokenWrapper class containing methods for interacting with any ERC20 token smart contract."
							},
							"sources": [
								{
									"fileName": "src/0x.ts",
									"line": 61,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "TokenWrapper",
								"id": 923
							}
						},
						{
							"id": 1581,
							"name": "tokenRegistry",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "An instance of the TokenRegistryWrapper class containing methods for interacting with the 0x\nTokenRegistry smart contract."
							},
							"sources": [
								{
									"fileName": "src/0x.ts",
									"line": 57,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "TokenRegistryWrapper",
								"id": 1365
							}
						},
						{
							"id": 1579,
							"name": "NULL_ADDRESS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "When creating an order without a specified taker or feeRecipient you must supply the Solidity\naddress null type (as opposed to Javascripts `null`, `undefined` or empty string). We expose\nthis constant for your convenience."
							},
							"sources": [
								{
									"fileName": "src/0x.ts",
									"line": 47,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " constants.NULL_ADDRESS"
						},
						{
							"id": 1621,
							"name": "awaitTransactionMinedAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1622,
									"name": "awaitTransactionMinedAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Waits for a transaction to be mined and returns the transaction receipt.",
										"returns": "Transaction receipt with decoded log args.\n"
									},
									"parameters": [
										{
											"id": 1623,
											"name": "txHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction hash"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1624,
											"name": "pollingIntervalMs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "How often (in ms) should we check if the transaction is mined."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1000"
										},
										{
											"id": 1625,
											"name": "timeoutMs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "How long (in ms) to poll for transaction mined until aborting."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TransactionReceiptWithDecodedLogs",
												"id": 542
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/0x.ts",
									"line": 283,
									"character": 43
								}
							]
						},
						{
							"id": 1615,
							"name": "getAvailableAddressesAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1616,
									"name": "getAvailableAddressesAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get user Ethereum addresses available through the supplied web3 provider available for sending transactions.",
										"returns": "An array of available user Ethereum addresses.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/0x.ts",
									"line": 222,
									"character": 43
								}
							]
						},
						{
							"id": 1611,
							"name": "setProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1612,
									"name": "setProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets a new web3 provider for 0x.js. Updating the provider will stop all\nsubscriptions so you will need to re-subscribe to all events relevant to your app after this call."
									},
									"parameters": [
										{
											"id": 1613,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The Web3Provider you would like the 0x.js library to use from now on."
											},
											"type": {
												"type": "reference",
												"name": "Web3Provider",
												"id": 637
											}
										},
										{
											"id": 1614,
											"name": "networkId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The id of the network your provider is connected to\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/0x.ts",
									"line": 210,
									"character": 22
								}
							]
						},
						{
							"id": 1617,
							"name": "signOrderHashAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1618,
									"name": "signOrderHashAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Signs an orderHash and returns it's elliptic curve signature.\nThis method currently supports TestRPC, Geth and Parity above and below V1.6.6",
										"returns": "An object containing the Elliptic curve signature parameters generated by signing the orderHash.\n"
									},
									"parameters": [
										{
											"id": 1619,
											"name": "orderHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Hex encoded orderHash to sign."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1620,
											"name": "signerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded Ethereum address you wish to sign it with. This address\n         must be available via the Web3.Provider supplied to 0x.js."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ECSignature",
												"id": 26
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/0x.ts",
									"line": 234,
									"character": 35
								}
							]
						},
						{
							"id": 1591,
							"name": "generatePseudoRandomSalt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1592,
									"name": "generatePseudoRandomSalt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Generates a pseudo-random 256-bit salt.\nThe salt can be included in an 0x order, ensuring that the order generates a unique orderHash\nand will not collide with other outstanding orders that are identical in all other parameters.",
										"returns": "A pseudo-random 256-bit number that can be used as a salt.\n"
									},
									"type": {
										"type": "reference",
										"name": "BigNumber"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/0x.ts",
									"line": 101,
									"character": 42
								}
							]
						},
						{
							"id": 1604,
							"name": "getOrderHashHex",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1605,
									"name": "getOrderHashHex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Computes the orderHash for a supplied order.",
										"returns": "The resulting orderHash from hashing the supplied order.\n"
									},
									"parameters": [
										{
											"id": 1606,
											"name": "order",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An object that conforms to the Order or SignedOrder interface definitions."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Order",
														"id": 441
													},
													{
														"type": "reference",
														"name": "SignedOrder",
														"id": 454
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/0x.ts",
									"line": 161,
									"character": 33
								}
							]
						},
						{
							"id": 1593,
							"name": "isValidOrderHash",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1594,
									"name": "isValidOrderHash",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks if the supplied hex encoded order hash is valid.\nNote: Valid means it has the expected format, not that an order with the orderHash exists.\nUse this method when processing orderHashes submitted as user input.",
										"returns": "Whether the supplied orderHash has the expected format.\n"
									},
									"parameters": [
										{
											"id": 1595,
											"name": "orderHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Hex encoded orderHash."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/0x.ts",
									"line": 116,
									"character": 34
								}
							]
						},
						{
							"id": 1586,
							"name": "isValidSignature",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1587,
									"name": "isValidSignature",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Verifies that the elliptic curve signature `signature` was generated\nby signing `data` with the private key corresponding to the `signerAddress` address.",
										"returns": "Whether the signature is valid for the supplied signerAddress and data.\n"
									},
									"parameters": [
										{
											"id": 1588,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded data signed by the supplied signature."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1589,
											"name": "signature",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An object containing the elliptic curve signature parameters."
											},
											"type": {
												"type": "reference",
												"name": "ECSignature",
												"id": 26
											}
										},
										{
											"id": 1590,
											"name": "signerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded address that signed the data, producing the supplied signature."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/0x.ts",
									"line": 87,
									"character": 34
								}
							]
						},
						{
							"id": 1600,
							"name": "toBaseUnitAmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1601,
									"name": "toBaseUnitAmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A baseUnit is defined as the smallest denomination of a token. An amount expressed in baseUnits\nis the amount expressed in the smallest denomination.\nE.g: 1 unit of a token with 18 decimal places is expressed in baseUnits as 1000000000000000000",
										"returns": "The amount in baseUnits.\n"
									},
									"parameters": [
										{
											"id": 1602,
											"name": "amount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The amount of units that you would like converted to baseUnits."
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1603,
											"name": "decimals",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The number of decimal places the unit amount has."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "BigNumber"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/0x.ts",
									"line": 148,
									"character": 34
								}
							]
						},
						{
							"id": 1596,
							"name": "toUnitAmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1597,
									"name": "toUnitAmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A unit amount is defined as the amount of a token above the specified decimal places (integer part).\nE.g: If a currency has 18 decimal places, 1e18 or one quintillion of the currency is equivalent\nto 1 unit.",
										"returns": "The amount in units.\n"
									},
									"parameters": [
										{
											"id": 1598,
											"name": "amount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The amount in baseUnits that you would like converted to units."
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1599,
											"name": "decimals",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The number of decimal places the unit amount has."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "BigNumber"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/0x.ts",
									"line": 132,
									"character": 30
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1607
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1583,
								1580,
								1585,
								1584,
								1582,
								1581,
								1579
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1621,
								1615,
								1611,
								1617,
								1591,
								1604,
								1593,
								1586,
								1600,
								1596
							]
						}
					],
					"sources": [
						{
							"fileName": "src/0x.ts",
							"line": 41,
							"character": 19
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1578
					]
				}
			],
			"sources": [
				{
					"fileName": "src/0x.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 645,
			"name": "\"src/artifacts\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/artifacts.ts",
			"children": [
				{
					"id": 646,
					"name": "artifacts",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 650,
							"name": "EtherTokenArtifact",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/artifacts.ts",
									"line": 13,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "Artifact",
								"id": 554
							},
							"defaultValue": " EtherTokenArtifact as any as Artifact"
						},
						{
							"id": 649,
							"name": "ExchangeArtifact",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/artifacts.ts",
									"line": 12,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "Artifact",
								"id": 554
							},
							"defaultValue": " ExchangeArtifact as any as Artifact"
						},
						{
							"id": 648,
							"name": "TokenArtifact",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/artifacts.ts",
									"line": 11,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "Artifact",
								"id": 554
							},
							"defaultValue": " TokenArtifact as any as Artifact"
						},
						{
							"id": 651,
							"name": "TokenRegistryArtifact",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/artifacts.ts",
									"line": 14,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"name": "Artifact",
								"id": 554
							},
							"defaultValue": " TokenRegistryArtifact as any as Artifact"
						},
						{
							"id": 652,
							"name": "TokenTransferProxyArtifact",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/artifacts.ts",
									"line": 15,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"name": "Artifact",
								"id": 554
							},
							"defaultValue": " TokenTransferProxyArtifact as any as Artifact"
						},
						{
							"id": 647,
							"name": "ZRXArtifact",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/artifacts.ts",
									"line": 10,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Artifact",
								"id": 554
							},
							"defaultValue": " ZRXArtifact as any as Artifact"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								650,
								649,
								648,
								651,
								652,
								647
							]
						}
					],
					"sources": [
						{
							"fileName": "src/artifacts.ts",
							"line": 9,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						646
					]
				}
			],
			"sources": [
				{
					"fileName": "src/artifacts.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 653,
			"name": "\"src/bignumber_config\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/bignumber_config.ts",
			"children": [
				{
					"id": 654,
					"name": "bigNumberConfigs",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 655,
							"name": "configure",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 656,
									"name": "configure",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/bignumber_config.ts",
									"line": 4,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								655
							]
						}
					],
					"sources": [
						{
							"fileName": "src/bignumber_config.ts",
							"line": 3,
							"character": 29
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						654
					]
				}
			],
			"sources": [
				{
					"fileName": "src/bignumber_config.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 670,
			"name": "\"src/contract\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/contract.ts",
			"children": [
				{
					"id": 671,
					"name": "Contract",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 674,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 675,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 676,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 677,
									"name": "new Contract",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 678,
											"name": "web3ContractInstance",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractInstance"
											}
										},
										{
											"id": 679,
											"name": "defaults",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Partial",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TxData"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Contract",
										"id": 671
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract.ts",
									"line": 20,
									"character": 24
								}
							]
						},
						{
							"id": 673,
							"name": "abi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "src/contract.ts",
									"line": 14,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3.ContractAbi"
							}
						},
						{
							"id": 672,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "src/contract.ts",
									"line": 13,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								676
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								673,
								672
							]
						}
					],
					"sources": [
						{
							"fileName": "src/contract.ts",
							"line": 12,
							"character": 21
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "ContractInstance"
						}
					]
				},
				{
					"id": 680,
					"name": "GAS_MARGIN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "src/contract.ts",
							"line": 10,
							"character": 16
						}
					],
					"type": {
						"type": "unknown",
						"name": "120000"
					},
					"defaultValue": "120000"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						671
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						680
					]
				}
			],
			"sources": [
				{
					"fileName": "src/contract.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 831,
			"name": "\"src/contract_wrappers/contract_wrapper\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/contract_wrappers/contract_wrapper.ts",
			"children": [
				{
					"id": 832,
					"name": "ContractWrapper",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 834,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 835,
									"name": "new ContractWrapper",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 836,
											"name": "web3Wrapper",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3Wrapper",
												"id": 691
											}
										},
										{
											"id": 837,
											"name": "abiDecoder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "AbiDecoder",
												"id": 771
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ContractWrapper",
										"id": 832
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 32,
									"character": 61
								}
							]
						},
						{
							"id": 833,
							"name": "_web3Wrapper",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 25,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3Wrapper",
								"id": 691
							}
						},
						{
							"id": 869,
							"name": "_getContractAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 870,
									"name": "_getContractAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 871,
											"name": "artifact",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Artifact",
												"id": 554
											}
										},
										{
											"id": 872,
											"name": "addressIfExists",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 99,
									"character": 33
								}
							]
						},
						{
							"id": 852,
							"name": "_getLogsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 853,
									"name": "_getLogsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 854,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEventArgs",
												"id": 624
											}
										}
									],
									"parameters": [
										{
											"id": 855,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 856,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEvents",
												"id": 627
											}
										},
										{
											"id": 857,
											"name": "subscriptionOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SubscriptionOpts",
												"id": 494
											}
										},
										{
											"id": 858,
											"name": "indexFilterValues",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IndexedFilterValues",
												"id": 488
											}
										},
										{
											"id": 859,
											"name": "abi",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3.ContractAbi"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Array",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LogWithDecodedArgs",
														"id": 530,
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "ArgsType",
																"constraint": {
																	"type": "reference",
																	"name": "ContractEventArgs",
																	"id": 624
																}
															}
														]
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 77,
									"character": 33
								}
							]
						},
						{
							"id": 864,
							"name": "_instantiateContractIfExistsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 865,
									"name": "_instantiateContractIfExistsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 866,
											"name": "ContractType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractInstance"
											}
										}
									],
									"parameters": [
										{
											"id": 867,
											"name": "artifact",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Artifact",
												"id": 554
											}
										},
										{
											"id": 868,
											"name": "addressIfExists",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "ContractType",
												"constraint": {
													"type": "reference",
													"name": "ContractInstance"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 93,
									"character": 53
								}
							]
						},
						{
							"id": 844,
							"name": "_subscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 845,
									"name": "_subscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 846,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEventArgs",
												"id": 624
											}
										}
									],
									"parameters": [
										{
											"id": 847,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 848,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEvents",
												"id": 627
											}
										},
										{
											"id": 849,
											"name": "indexFilterValues",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IndexedFilterValues",
												"id": 488
											}
										},
										{
											"id": 850,
											"name": "abi",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3.ContractAbi"
											}
										},
										{
											"id": 851,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "EventCallback",
												"id": 612,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "ArgsType",
														"constraint": {
															"type": "reference",
															"name": "ContractEventArgs",
															"id": 624
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 65,
									"character": 24
								}
							]
						},
						{
							"id": 860,
							"name": "_tryToDecodeLogOrNoop",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 861,
									"name": "_tryToDecodeLogOrNoop",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 862,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEventArgs",
												"id": 624
											}
										}
									],
									"parameters": [
										{
											"id": 863,
											"name": "log",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LogEntry"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "LogWithDecodedArgs",
												"id": 530,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "ArgsType",
														"constraint": {
															"type": "reference",
															"name": "ContractEventArgs",
															"id": 624
														}
													}
												]
											},
											{
												"type": "reference",
												"name": "RawLog",
												"id": 621
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 85,
									"character": 35
								}
							]
						},
						{
							"id": 840,
							"name": "_unsubscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 841,
									"name": "_unsubscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 842,
											"name": "filterToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 843,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 51,
									"character": 26
								}
							]
						},
						{
							"id": 838,
							"name": "unsubscribeAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 839,
									"name": "unsubscribeAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Cancels all existing subscriptions"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 45,
									"character": 25
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								834
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								833
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								869,
								852,
								864,
								844,
								860,
								840,
								838
							]
						}
					],
					"sources": [
						{
							"fileName": "src/contract_wrappers/contract_wrapper.ts",
							"line": 24,
							"character": 28
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "TokenTransferProxyWrapper",
							"id": 874
						},
						{
							"type": "reference",
							"name": "TokenWrapper",
							"id": 923
						},
						{
							"type": "reference",
							"name": "EtherTokenWrapper",
							"id": 1040
						},
						{
							"type": "reference",
							"name": "ExchangeWrapper",
							"id": 1223
						},
						{
							"type": "reference",
							"name": "TokenRegistryWrapper",
							"id": 1365
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						832
					]
				}
			],
			"sources": [
				{
					"fileName": "src/contract_wrappers/contract_wrapper.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1039,
			"name": "\"src/contract_wrappers/ether_token_wrapper\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/contract_wrappers/ether_token_wrapper.ts",
			"children": [
				{
					"id": 1040,
					"name": "EtherTokenWrapper",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This class includes all the functionality related to interacting with a wrapped Ether ERC20 token contract.\nThe caller can convert ETH into the equivalent number of wrapped ETH ERC20 tokens and back."
					},
					"children": [
						{
							"id": 1041,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1042,
									"name": "new EtherTokenWrapper",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1043,
											"name": "web3Wrapper",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3Wrapper",
												"id": 691
											}
										},
										{
											"id": 1044,
											"name": "tokenWrapper",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TokenWrapper",
												"id": 923
											}
										},
										{
											"id": 1045,
											"name": "contractAddressIfExists",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "EtherTokenWrapper",
										"id": 1040
									},
									"overwrites": {
										"type": "reference",
										"name": "ContractWrapper.__constructor",
										"id": 834
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/ether_token_wrapper.ts",
									"line": 19,
									"character": 46
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ContractWrapper.__constructor",
								"id": 834
							}
						},
						{
							"id": 1058,
							"name": "_web3Wrapper",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 25,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3Wrapper",
								"id": 691
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._web3Wrapper",
								"id": 833
							}
						},
						{
							"id": 1090,
							"name": "_getContractAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1091,
									"name": "_getContractAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1092,
											"name": "artifact",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Artifact",
												"id": 554
											}
										},
										{
											"id": 1093,
											"name": "addressIfExists",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._getContractAddress",
										"id": 869
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 99,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._getContractAddress",
								"id": 869
							}
						},
						{
							"id": 1073,
							"name": "_getLogsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1074,
									"name": "_getLogsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1075,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEventArgs",
												"id": 624
											}
										}
									],
									"parameters": [
										{
											"id": 1076,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1077,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEvents",
												"id": 627
											}
										},
										{
											"id": 1078,
											"name": "subscriptionOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SubscriptionOpts",
												"id": 494
											}
										},
										{
											"id": 1079,
											"name": "indexFilterValues",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IndexedFilterValues",
												"id": 488
											}
										},
										{
											"id": 1080,
											"name": "abi",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3.ContractAbi"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Array",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LogWithDecodedArgs",
														"id": 530,
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "ArgsType",
																"constraint": {
																	"type": "reference",
																	"name": "ContractEventArgs",
																	"id": 624
																}
															}
														]
													}
												]
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._getLogsAsync",
										"id": 852
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 77,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._getLogsAsync",
								"id": 852
							}
						},
						{
							"id": 1085,
							"name": "_instantiateContractIfExistsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1086,
									"name": "_instantiateContractIfExistsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1087,
											"name": "ContractType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractInstance"
											}
										}
									],
									"parameters": [
										{
											"id": 1088,
											"name": "artifact",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Artifact",
												"id": 554
											}
										},
										{
											"id": 1089,
											"name": "addressIfExists",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "ContractType",
												"constraint": {
													"type": "reference",
													"name": "ContractInstance"
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._instantiateContractIfExistsAsync",
										"id": 864
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 93,
									"character": 53
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._instantiateContractIfExistsAsync",
								"id": 864
							}
						},
						{
							"id": 1065,
							"name": "_subscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1066,
									"name": "_subscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1067,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEventArgs",
												"id": 624
											}
										}
									],
									"parameters": [
										{
											"id": 1068,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1069,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEvents",
												"id": 627
											}
										},
										{
											"id": 1070,
											"name": "indexFilterValues",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IndexedFilterValues",
												"id": 488
											}
										},
										{
											"id": 1071,
											"name": "abi",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3.ContractAbi"
											}
										},
										{
											"id": 1072,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "EventCallback",
												"id": 612,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "ArgsType",
														"constraint": {
															"type": "reference",
															"name": "ContractEventArgs",
															"id": 624
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._subscribe",
										"id": 844
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 65,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._subscribe",
								"id": 844
							}
						},
						{
							"id": 1081,
							"name": "_tryToDecodeLogOrNoop",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1082,
									"name": "_tryToDecodeLogOrNoop",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1083,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEventArgs",
												"id": 624
											}
										}
									],
									"parameters": [
										{
											"id": 1084,
											"name": "log",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LogEntry"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "LogWithDecodedArgs",
												"id": 530,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "ArgsType",
														"constraint": {
															"type": "reference",
															"name": "ContractEventArgs",
															"id": 624
														}
													}
												]
											},
											{
												"type": "reference",
												"name": "RawLog",
												"id": 621
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._tryToDecodeLogOrNoop",
										"id": 860
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 85,
									"character": 35
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._tryToDecodeLogOrNoop",
								"id": 860
							}
						},
						{
							"id": 1061,
							"name": "_unsubscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1062,
									"name": "_unsubscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1063,
											"name": "filterToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1064,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._unsubscribe",
										"id": 840
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 51,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._unsubscribe",
								"id": 840
							}
						},
						{
							"id": 1046,
							"name": "depositAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1047,
									"name": "depositAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deposit ETH into the Wrapped ETH smart contract and issues the equivalent number of wrapped ETH tokens\nto the depositor address. These wrapped ETH tokens can be used in 0x trades and are redeemable for 1-to-1\nfor ETH.",
										"returns": "Transaction hash.\n"
									},
									"parameters": [
										{
											"id": 1048,
											"name": "amountInWei",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of ETH in Wei the caller wishes to deposit."
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1049,
											"name": "depositor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded user Ethereum address that would like to make the deposit."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1050,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction parameters."
											},
											"type": {
												"type": "reference",
												"name": "TransactionOpts",
												"id": 567
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/ether_token_wrapper.ts",
									"line": 34,
									"character": 29
								}
							]
						},
						{
							"id": 1056,
							"name": "getContractAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1057,
									"name": "getContractAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the Wrapped Ether token contract address",
										"returns": "The Wrapped Ether token contract address\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/ether_token_wrapper.ts",
									"line": 82,
									"character": 29
								}
							]
						},
						{
							"id": 1059,
							"name": "unsubscribeAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1060,
									"name": "unsubscribeAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Cancels all existing subscriptions"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper.unsubscribeAll",
										"id": 838
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 45,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper.unsubscribeAll",
								"id": 838
							}
						},
						{
							"id": 1051,
							"name": "withdrawAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1052,
									"name": "withdrawAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Withdraw ETH to the withdrawer's address from the wrapped ETH smart contract in exchange for the\nequivalent number of wrapped ETH tokens.",
										"returns": "Transaction hash.\n"
									},
									"parameters": [
										{
											"id": 1053,
											"name": "amountInWei",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of ETH in Wei the caller wishes to withdraw."
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1054,
											"name": "withdrawer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded user Ethereum address that would like to make the withdrawl."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1055,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction parameters."
											},
											"type": {
												"type": "reference",
												"name": "TransactionOpts",
												"id": 567
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/ether_token_wrapper.ts",
									"line": 60,
									"character": 30
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1041
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1058
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1090,
								1073,
								1085,
								1065,
								1081,
								1061,
								1046,
								1056,
								1059,
								1051
							]
						}
					],
					"sources": [
						{
							"fileName": "src/contract_wrappers/ether_token_wrapper.ts",
							"line": 16,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ContractWrapper",
							"id": 832
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1040
					]
				}
			],
			"sources": [
				{
					"fileName": "src/contract_wrappers/ether_token_wrapper.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1219,
			"name": "\"src/contract_wrappers/exchange_wrapper\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/contract_wrappers/exchange_wrapper.ts",
			"children": [
				{
					"id": 1223,
					"name": "ExchangeWrapper",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This class includes all the functionality related to calling methods and subscribing to\nevents of the 0x Exchange smart contract."
					},
					"children": [
						{
							"id": 1224,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1225,
									"name": "new ExchangeWrapper",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1226,
											"name": "web3Wrapper",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3Wrapper",
												"id": 691
											}
										},
										{
											"id": 1227,
											"name": "abiDecoder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AbiDecoder",
												"id": 771
											}
										},
										{
											"id": 1228,
											"name": "tokenWrapper",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TokenWrapper",
												"id": 923
											}
										},
										{
											"id": 1229,
											"name": "contractAddressIfExists",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ExchangeWrapper",
										"id": 1223
									},
									"overwrites": {
										"type": "reference",
										"name": "ContractWrapper.__constructor",
										"id": 834
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/exchange_wrapper.ts",
									"line": 86,
									"character": 5
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ContractWrapper.__constructor",
								"id": 834
							}
						},
						{
							"id": 1327,
							"name": "_web3Wrapper",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 25,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3Wrapper",
								"id": 691
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._web3Wrapper",
								"id": 833
							}
						},
						{
							"id": 1359,
							"name": "_getContractAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1360,
									"name": "_getContractAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1361,
											"name": "artifact",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Artifact",
												"id": 554
											}
										},
										{
											"id": 1362,
											"name": "addressIfExists",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._getContractAddress",
										"id": 869
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 99,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._getContractAddress",
								"id": 869
							}
						},
						{
							"id": 1342,
							"name": "_getLogsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1343,
									"name": "_getLogsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1344,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEventArgs",
												"id": 624
											}
										}
									],
									"parameters": [
										{
											"id": 1345,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1346,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEvents",
												"id": 627
											}
										},
										{
											"id": 1347,
											"name": "subscriptionOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SubscriptionOpts",
												"id": 494
											}
										},
										{
											"id": 1348,
											"name": "indexFilterValues",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IndexedFilterValues",
												"id": 488
											}
										},
										{
											"id": 1349,
											"name": "abi",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3.ContractAbi"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Array",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LogWithDecodedArgs",
														"id": 530,
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "ArgsType",
																"constraint": {
																	"type": "reference",
																	"name": "ContractEventArgs",
																	"id": 624
																}
															}
														]
													}
												]
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._getLogsAsync",
										"id": 852
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 77,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._getLogsAsync",
								"id": 852
							}
						},
						{
							"id": 1354,
							"name": "_instantiateContractIfExistsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1355,
									"name": "_instantiateContractIfExistsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1356,
											"name": "ContractType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractInstance"
											}
										}
									],
									"parameters": [
										{
											"id": 1357,
											"name": "artifact",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Artifact",
												"id": 554
											}
										},
										{
											"id": 1358,
											"name": "addressIfExists",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "ContractType",
												"constraint": {
													"type": "reference",
													"name": "ContractInstance"
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._instantiateContractIfExistsAsync",
										"id": 864
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 93,
									"character": 53
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._instantiateContractIfExistsAsync",
								"id": 864
							}
						},
						{
							"id": 1334,
							"name": "_subscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1335,
									"name": "_subscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1336,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEventArgs",
												"id": 624
											}
										}
									],
									"parameters": [
										{
											"id": 1337,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1338,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEvents",
												"id": 627
											}
										},
										{
											"id": 1339,
											"name": "indexFilterValues",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IndexedFilterValues",
												"id": 488
											}
										},
										{
											"id": 1340,
											"name": "abi",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3.ContractAbi"
											}
										},
										{
											"id": 1341,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "EventCallback",
												"id": 612,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "ArgsType",
														"constraint": {
															"type": "reference",
															"name": "ContractEventArgs",
															"id": 624
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._subscribe",
										"id": 844
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 65,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._subscribe",
								"id": 844
							}
						},
						{
							"id": 1350,
							"name": "_tryToDecodeLogOrNoop",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1351,
									"name": "_tryToDecodeLogOrNoop",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1352,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEventArgs",
												"id": 624
											}
										}
									],
									"parameters": [
										{
											"id": 1353,
											"name": "log",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LogEntry"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "LogWithDecodedArgs",
												"id": 530,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "ArgsType",
														"constraint": {
															"type": "reference",
															"name": "ContractEventArgs",
															"id": 624
														}
													}
												]
											},
											{
												"type": "reference",
												"name": "RawLog",
												"id": 621
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._tryToDecodeLogOrNoop",
										"id": 860
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 85,
									"character": 35
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._tryToDecodeLogOrNoop",
								"id": 860
							}
						},
						{
							"id": 1330,
							"name": "_unsubscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1331,
									"name": "_unsubscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1332,
											"name": "filterToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1333,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._unsubscribe",
										"id": 840
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 51,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._unsubscribe",
								"id": 840
							}
						},
						{
							"id": 1278,
							"name": "batchCancelOrdersAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1279,
									"name": "batchCancelOrdersAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Batch version of cancelOrderAsync. Atomically cancels multiple orders in a single transaction.\nAll orders must be from the same maker.",
										"returns": "Transaction hash.\n"
									},
									"parameters": [
										{
											"id": 1280,
											"name": "orderCancellationRequests",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An array of objects that conform to the OrderCancellationRequest\n                                     interface."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "OrderCancellationRequest",
													"id": 497
												}
											}
										},
										{
											"id": 1281,
											"name": "orderTransactionOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OrderTransactionOpts",
												"id": 570
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/exchange_wrapper.ts",
									"line": 533,
									"character": 39
								}
							]
						},
						{
							"id": 1268,
							"name": "batchFillOrKillAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1269,
									"name": "batchFillOrKillAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Batch version of fillOrKill. Allows a taker to specify a batch of orders that will either be atomically\nfilled (each to the specified fillAmount) or aborted.",
										"returns": "Transaction hash.\n"
									},
									"parameters": [
										{
											"id": 1270,
											"name": "orderFillRequests",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An array of objects that conform to the OrderFillRequest interface."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "OrderFillRequest",
													"id": 500
												}
											}
										},
										{
											"id": 1271,
											"name": "takerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The user Ethereum address who would like to fill there orders.\n                                     Must be available via the supplied Web3.Provider passed to 0x.js."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1272,
											"name": "orderTransactionOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Optional arguments this method accepts."
											},
											"type": {
												"type": "reference",
												"name": "OrderTransactionOpts",
												"id": 570
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/exchange_wrapper.ts",
									"line": 424,
									"character": 37
								}
							]
						},
						{
							"id": 1256,
							"name": "batchFillOrdersAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1257,
									"name": "batchFillOrdersAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Batch version of fillOrderAsync.\nExecutes multiple fills atomically in a single transaction.\nIf shouldThrowOnInsufficientBalanceOrAllowance is set to false, it will continue filling subsequent orders even\nwhen earlier ones fail.\nWhen shouldThrowOnInsufficientBalanceOrAllowance is set to true, if any fill fails, the entire batch fails.",
										"returns": "Transaction hash.\n"
									},
									"parameters": [
										{
											"id": 1258,
											"name": "orderFillRequests",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An array of objects that conform to the\n                                                         OrderFillRequest interface."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "OrderFillRequest",
													"id": 500
												}
											}
										},
										{
											"id": 1259,
											"name": "shouldThrowOnInsufficientBalanceOrAllowance",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Whether or not you wish for the contract call to throw\n                                                         if upon execution any of the tokens cannot be\n                                                         transferred. If set to false, the call will continue to\n                                                         fill subsequent signedOrders even when some\n                                                         cannot be filled."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1260,
											"name": "takerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The user Ethereum address who would like to fill\n                                                         these orders. Must be available via the supplied\n                                                         Web3.Provider passed to 0x.js."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1261,
											"name": "orderTransactionOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Optional arguments this method accepts."
											},
											"type": {
												"type": "reference",
												"name": "OrderTransactionOpts",
												"id": 570
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/exchange_wrapper.ts",
									"line": 306,
									"character": 37
								}
							]
						},
						{
							"id": 1273,
							"name": "cancelOrderAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1274,
									"name": "cancelOrderAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Cancel a given fill amount of an order. Cancellations are cumulative.",
										"returns": "Transaction hash.\n"
									},
									"parameters": [
										{
											"id": 1275,
											"name": "order",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An object that conforms to the Order or SignedOrder interface.\n                                 The order you would like to cancel."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Order",
														"id": 441
													},
													{
														"type": "reference",
														"name": "SignedOrder",
														"id": 454
													}
												]
											}
										},
										{
											"id": 1276,
											"name": "cancelTakerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The amount (specified in taker tokens) that you would like to cancel."
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1277,
											"name": "orderTransactionOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OrderTransactionOpts",
												"id": 570
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/exchange_wrapper.ts",
									"line": 492,
									"character": 33
								}
							]
						},
						{
							"id": 1262,
							"name": "fillOrKillOrderAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1263,
									"name": "fillOrKillOrderAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attempts to fill a specific amount of an order. If the entire amount specified cannot be filled,\nthe fill order is abandoned.",
										"returns": "Transaction hash.\n"
									},
									"parameters": [
										{
											"id": 1264,
											"name": "signedOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An object that conforms to the SignedOrder interface. The\n                                 signedOrder you wish to fill."
											},
											"type": {
												"type": "reference",
												"name": "SignedOrder",
												"id": 454
											}
										},
										{
											"id": 1265,
											"name": "fillTakerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The total amount of the takerTokens you would like to fill."
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1266,
											"name": "takerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The user Ethereum address who would like to fill this order.\n                                 Must be available via the supplied Web3.Provider passed to 0x.js."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1267,
											"name": "orderTransactionOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Optional arguments this method accepts."
											},
											"type": {
												"type": "reference",
												"name": "OrderTransactionOpts",
												"id": 570
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/exchange_wrapper.ts",
									"line": 379,
									"character": 37
								}
							]
						},
						{
							"id": 1242,
							"name": "fillOrderAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1243,
									"name": "fillOrderAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fills a signed order with an amount denominated in baseUnits of the taker token.\nSince the order in which transactions are included in the next block is indeterminate, race-conditions\ncould arise where a users balance or allowance changes before the fillOrder executes. Because of this,\nwe allow you to specify `shouldThrowOnInsufficientBalanceOrAllowance`.\nIf false, the smart contract will not throw if the parties\ndo not have sufficient balances/allowances, preserving gas costs. Setting it to true forgoes this check\nand causes the smart contract to throw (using all the gas supplied) instead.",
										"returns": "Transaction hash.\n"
									},
									"parameters": [
										{
											"id": 1244,
											"name": "signedOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An object that conforms to the SignedOrder interface."
											},
											"type": {
												"type": "reference",
												"name": "SignedOrder",
												"id": 454
											}
										},
										{
											"id": 1245,
											"name": "fillTakerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The amount of the order (in taker tokens baseUnits) that\n                                                     you wish to fill."
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1246,
											"name": "shouldThrowOnInsufficientBalanceOrAllowance",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Whether or not you wish for the contract call to throw\n                                                     if upon execution the tokens cannot be transferred."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1247,
											"name": "takerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The user Ethereum address who would like to fill this order.\n                                                     Must be available via the supplied Web3.Provider\n                                                     passed to 0x.js."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1248,
											"name": "orderTransactionOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Optional arguments this method accepts."
											},
											"type": {
												"type": "reference",
												"name": "OrderTransactionOpts",
												"id": 570
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/exchange_wrapper.ts",
									"line": 169,
									"character": 31
								}
							]
						},
						{
							"id": 1249,
							"name": "fillOrdersUpToAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1250,
									"name": "fillOrdersUpToAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sequentially and atomically fills signedOrders up to the specified takerTokenFillAmount.\nIf the fill amount is reached - it succeeds and does not fill the rest of the orders.\nIf fill amount is not reached - it fills as much of the fill amount as possible and succeeds.",
										"returns": "Transaction hash.\n"
									},
									"parameters": [
										{
											"id": 1251,
											"name": "signedOrders",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The array of signedOrders that you would like to fill until\n                                                     takerTokenFillAmount is reached."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "SignedOrder",
													"id": 454
												}
											}
										},
										{
											"id": 1252,
											"name": "fillTakerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The total amount of the takerTokens you would like to fill."
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1253,
											"name": "shouldThrowOnInsufficientBalanceOrAllowance",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Whether or not you wish for the contract call to throw if\n                                                     upon execution any of the tokens cannot be transferred.\n                                                     If set to false, the call will continue to fill subsequent\n                                                     signedOrders even when some cannot be filled."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1254,
											"name": "takerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The user Ethereum address who would like to fill these\n                                                     orders. Must be available via the supplied Web3.Provider\n                                                     passed to 0x.js."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1255,
											"name": "orderTransactionOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Optional arguments this method accepts."
											},
											"type": {
												"type": "reference",
												"name": "OrderTransactionOpts",
												"id": 570
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/exchange_wrapper.ts",
									"line": 225,
									"character": 36
								}
							]
						},
						{
							"id": 1238,
							"name": "getCancelledTakerAmountAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1239,
									"name": "getCancelledTakerAmountAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieve the takerAmount of an order that has been cancelled.",
										"returns": "The amount of the order (in taker tokens) that has been cancelled.\n"
									},
									"parameters": [
										{
											"id": 1240,
											"name": "orderHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded orderHash for which you would like to retrieve the\n                      cancelled takerAmount."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1241,
											"name": "methodOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optional arguments this method accepts."
											},
											"type": {
												"type": "reference",
												"name": "MethodOpts",
												"id": 565
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/exchange_wrapper.ts",
									"line": 139,
									"character": 45
								}
							]
						},
						{
							"id": 1297,
							"name": "getContractAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1298,
									"name": "getContractAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the Ethereum address of the Exchange contract deployed on the network\nthat the user-passed web3 provider is connected to.",
										"returns": "The Ethereum address of the Exchange contract being used.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/exchange_wrapper.ts",
									"line": 638,
									"character": 29
								}
							]
						},
						{
							"id": 1234,
							"name": "getFilledTakerAmountAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1235,
									"name": "getFilledTakerAmountAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieve the takerAmount of an order that has already been filled.",
										"returns": "The amount of the order (in taker tokens) that has already been filled.\n"
									},
									"parameters": [
										{
											"id": 1236,
											"name": "orderHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded orderHash for which you would like to retrieve the filled takerAmount."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1237,
											"name": "methodOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optional arguments this method accepts."
											},
											"type": {
												"type": "reference",
												"name": "MethodOpts",
												"id": 565
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/exchange_wrapper.ts",
									"line": 122,
									"character": 42
								}
							]
						},
						{
							"id": 1291,
							"name": "getLogsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1292,
									"name": "getLogsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets historical logs without creating a subscription",
										"returns": "Array of logs that match the parameters\n"
									},
									"typeParameter": [
										{
											"id": 1293,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ExchangeContractEventArgs",
												"id": 622
											}
										}
									],
									"parameters": [
										{
											"id": 1294,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The exchange contract event you would like to subscribe to."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "stringLiteral",
														"value": "LogFill"
													},
													{
														"type": "stringLiteral",
														"value": "LogCancel"
													},
													{
														"type": "stringLiteral",
														"value": "LogError"
													}
												]
											}
										},
										{
											"id": 1295,
											"name": "subscriptionOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Subscriptions options that let you configure the subscription."
											},
											"type": {
												"type": "reference",
												"name": "SubscriptionOpts",
												"id": 494
											}
										},
										{
											"id": 1296,
											"name": "indexFilterValues",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An object where the keys are indexed args returned by the event and\n                             the value is the value you are interested in. E.g `{_from: aUserAddressHex}`"
											},
											"type": {
												"type": "reference",
												"name": "IndexedFilterValues",
												"id": 488
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Array",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LogWithDecodedArgs",
														"id": 530,
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "ArgsType",
																"constraint": {
																	"type": "reference",
																	"name": "ExchangeContractEventArgs",
																	"id": 622
																}
															}
														]
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/exchange_wrapper.ts",
									"line": 621,
									"character": 29
								}
							]
						},
						{
							"id": 1230,
							"name": "getUnavailableTakerAmountAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1231,
									"name": "getUnavailableTakerAmountAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the unavailable takerAmount of an order. Unavailable amount is defined as the total\namount that has been filled or cancelled. The remaining takerAmount can be calculated by\nsubtracting the unavailable amount from the total order takerAmount.",
										"returns": "The amount of the order (in taker tokens) that has either been filled or cancelled.\n"
									},
									"parameters": [
										{
											"id": 1232,
											"name": "orderHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded orderHash for which you would like to retrieve the\n                                 unavailable takerAmount."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1233,
											"name": "methodOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optional arguments this method accepts."
											},
											"type": {
												"type": "reference",
												"name": "MethodOpts",
												"id": 565
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/exchange_wrapper.ts",
									"line": 103,
									"character": 47
								}
							]
						},
						{
							"id": 1325,
							"name": "getZRXTokenAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1326,
									"name": "getZRXTokenAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the ZRX token address used by the exchange contract.",
										"returns": "Address of ZRX token\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/exchange_wrapper.ts",
									"line": 755,
									"character": 29
								}
							]
						},
						{
							"id": 1317,
							"name": "isRoundingErrorAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1318,
									"name": "isRoundingErrorAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks if rounding error will be > 0.1% when computing makerTokenAmount by doing:\n`(fillTakerTokenAmount * makerTokenAmount) / takerTokenAmount`.\n0x Protocol does not accept any trades that result in large rounding errors. This means that tokens with few or\nno decimals can only be filled in quantities and ratios that avoid large rounding errors."
									},
									"parameters": [
										{
											"id": 1319,
											"name": "fillTakerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The amount of the order (in taker tokens baseUnits) that you wish to fill."
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1320,
											"name": "takerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The order size on the taker side"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1321,
											"name": "makerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The order size on the maker side\n"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/exchange_wrapper.ts",
									"line": 724,
									"character": 37
								}
							]
						},
						{
							"id": 1282,
							"name": "subscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1283,
									"name": "subscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Subscribe to an event type emitted by the Exchange contract.",
										"returns": "Subscription token used later to unsubscribe\n"
									},
									"typeParameter": [
										{
											"id": 1284,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ExchangeContractEventArgs",
												"id": 622
											}
										}
									],
									"parameters": [
										{
											"id": 1285,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The exchange contract event you would like to subscribe to."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "stringLiteral",
														"value": "LogFill"
													},
													{
														"type": "stringLiteral",
														"value": "LogCancel"
													},
													{
														"type": "stringLiteral",
														"value": "LogError"
													}
												]
											}
										},
										{
											"id": 1286,
											"name": "indexFilterValues",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An object where the keys are indexed args returned by the event and\n                             the value is the value you are interested in. E.g `{maker: aUserAddressHex}`"
											},
											"type": {
												"type": "reference",
												"name": "IndexedFilterValues",
												"id": 488
											}
										},
										{
											"id": 1287,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Callback that gets called when a log is added/removed"
											},
											"type": {
												"type": "reference",
												"name": "EventCallback",
												"id": 612,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "ArgsType",
														"constraint": {
															"type": "reference",
															"name": "ExchangeContractEventArgs",
															"id": 622
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/exchange_wrapper.ts",
									"line": 594,
									"character": 20
								}
							]
						},
						{
							"id": 1322,
							"name": "throwLogErrorsAsErrors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1323,
									"name": "throwLogErrorsAsErrors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks if logs contain LogError, which is emmited by Exchange contract on transaction failure."
									},
									"parameters": [
										{
											"id": 1324,
											"name": "logs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction logs as returned by `zeroEx.awaitTransactionMinedAsync`\n"
											},
											"type": {
												"type": "reference",
												"name": "Array",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "LogWithDecodedArgs",
																"id": 530,
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "DecodedLogArgs",
																		"id": 527
																	}
																]
															},
															{
																"type": "reference",
																"name": "LogEntry"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/exchange_wrapper.ts",
									"line": 740,
									"character": 33
								}
							]
						},
						{
							"id": 1288,
							"name": "unsubscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1289,
									"name": "unsubscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Cancel a subscription"
									},
									"parameters": [
										{
											"id": 1290,
											"name": "subscriptionToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Subscription token returned by `subscribe()`\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/exchange_wrapper.ts",
									"line": 610,
									"character": 22
								}
							]
						},
						{
							"id": 1328,
							"name": "unsubscribeAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1329,
									"name": "unsubscribeAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Cancels all existing subscriptions"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper.unsubscribeAll",
										"id": 838
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 45,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper.unsubscribeAll",
								"id": 838
							}
						},
						{
							"id": 1308,
							"name": "validateCancelOrderThrowIfInvalidAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1309,
									"name": "validateCancelOrderThrowIfInvalidAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks if cancelling a given order will succeed and throws an informative error if it won't."
									},
									"parameters": [
										{
											"id": 1310,
											"name": "order",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An object that conforms to the Order or SignedOrder interface.\n                                 The order you would like to cancel."
											},
											"type": {
												"type": "reference",
												"name": "Order",
												"id": 441
											}
										},
										{
											"id": 1311,
											"name": "cancelTakerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The amount (specified in taker tokens) that you would like to cancel.\n"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/exchange_wrapper.ts",
									"line": 687,
									"character": 55
								}
							]
						},
						{
							"id": 1312,
							"name": "validateFillOrKillOrderThrowIfInvalidAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1313,
									"name": "validateFillOrKillOrderThrowIfInvalidAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks if calling fillOrKill on a given order will succeed and throws an informative error if it won't."
									},
									"parameters": [
										{
											"id": 1314,
											"name": "signedOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An object that conforms to the SignedOrder interface. The\n                                 signedOrder you wish to fill."
											},
											"type": {
												"type": "reference",
												"name": "SignedOrder",
												"id": 454
											}
										},
										{
											"id": 1315,
											"name": "fillTakerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The total amount of the takerTokens you would like to fill."
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1316,
											"name": "takerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The user Ethereum address who would like to fill this order.\n                                 Must be available via the supplied Web3.Provider passed to 0x.js.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/exchange_wrapper.ts",
									"line": 704,
									"character": 59
								}
							]
						},
						{
							"id": 1303,
							"name": "validateFillOrderThrowIfInvalidAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1304,
									"name": "validateFillOrderThrowIfInvalidAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks if order fill will succeed and throws an error otherwise."
									},
									"parameters": [
										{
											"id": 1305,
											"name": "signedOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An object that conforms to the SignedOrder interface. The\n                                 signedOrder you wish to fill."
											},
											"type": {
												"type": "reference",
												"name": "SignedOrder",
												"id": 454
											}
										},
										{
											"id": 1306,
											"name": "fillTakerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The total amount of the takerTokens you would like to fill."
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1307,
											"name": "takerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The user Ethereum address who would like to fill this order.\n                                 Must be available via the supplied Web3.Provider passed to 0x.js.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/exchange_wrapper.ts",
									"line": 670,
									"character": 53
								}
							]
						},
						{
							"id": 1299,
							"name": "validateOrderFillableOrThrowAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1300,
									"name": "validateOrderFillableOrThrowAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks if order is still fillable and throws an error otherwise. Useful for orderbook\npruning where you want to remove stale orders without knowing who the taker will be."
									},
									"parameters": [
										{
											"id": 1301,
											"name": "signedOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An object that conforms to the SignedOrder interface. The\n                         signedOrder you wish to validate."
											},
											"type": {
												"type": "reference",
												"name": "SignedOrder",
												"id": 454
											}
										},
										{
											"id": 1302,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An object that conforms to the ValidateOrderFillableOpts\n                         interface. Allows specifying a specific fillTakerTokenAmount\n                         to validate for.\n"
											},
											"type": {
												"type": "reference",
												"name": "ValidateOrderFillableOpts",
												"id": 563
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/exchange_wrapper.ts",
									"line": 651,
									"character": 50
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1224
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1327
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1359,
								1342,
								1354,
								1334,
								1350,
								1330,
								1278,
								1268,
								1256,
								1273,
								1262,
								1242,
								1249,
								1238,
								1297,
								1234,
								1291,
								1230,
								1325,
								1317,
								1282,
								1322,
								1288,
								1328,
								1308,
								1312,
								1303,
								1299
							]
						}
					],
					"sources": [
						{
							"fileName": "src/contract_wrappers/exchange_wrapper.ts",
							"line": 55,
							"character": 28
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ContractWrapper",
							"id": 832
						}
					]
				},
				{
					"id": 1220,
					"name": "ExchangeContractErrCodesToMsgs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"indexSignature": [
						{
							"id": 1221,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 1222,
									"name": "exchangeContractErrCodes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/contract_wrappers/exchange_wrapper.ts",
							"line": 47,
							"character": 40
						}
					]
				},
				{
					"id": 1363,
					"name": "SHOULD_VALIDATE_BY_DEFAULT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "src/contract_wrappers/exchange_wrapper.ts",
							"line": 45,
							"character": 32
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "true"
					},
					"defaultValue": "true"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1223
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1220
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1363
					]
				}
			],
			"sources": [
				{
					"fileName": "src/contract_wrappers/exchange_wrapper.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1364,
			"name": "\"src/contract_wrappers/token_registry_wrapper\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/contract_wrappers/token_registry_wrapper.ts",
			"children": [
				{
					"id": 1365,
					"name": "TokenRegistryWrapper",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This class includes all the functionality related to interacting with the 0x Token Registry smart contract."
					},
					"children": [
						{
							"id": 1366,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1367,
									"name": "new TokenRegistryWrapper",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1368,
											"name": "web3Wrapper",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3Wrapper",
												"id": 691
											}
										},
										{
											"id": 1369,
											"name": "contractAddressIfExists",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "TokenRegistryWrapper",
										"id": 1365
									},
									"overwrites": {
										"type": "reference",
										"name": "ContractWrapper.__constructor",
										"id": 834
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_registry_wrapper.ts",
									"line": 28,
									"character": 5
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ContractWrapper.__constructor",
								"id": 834
							}
						},
						{
							"id": 1391,
							"name": "_web3Wrapper",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 25,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3Wrapper",
								"id": 691
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._web3Wrapper",
								"id": 833
							}
						},
						{
							"id": 1423,
							"name": "_getContractAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1424,
									"name": "_getContractAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1425,
											"name": "artifact",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Artifact",
												"id": 554
											}
										},
										{
											"id": 1426,
											"name": "addressIfExists",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._getContractAddress",
										"id": 869
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 99,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._getContractAddress",
								"id": 869
							}
						},
						{
							"id": 1406,
							"name": "_getLogsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1407,
									"name": "_getLogsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1408,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEventArgs",
												"id": 624
											}
										}
									],
									"parameters": [
										{
											"id": 1409,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1410,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEvents",
												"id": 627
											}
										},
										{
											"id": 1411,
											"name": "subscriptionOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SubscriptionOpts",
												"id": 494
											}
										},
										{
											"id": 1412,
											"name": "indexFilterValues",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IndexedFilterValues",
												"id": 488
											}
										},
										{
											"id": 1413,
											"name": "abi",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3.ContractAbi"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Array",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LogWithDecodedArgs",
														"id": 530,
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "ArgsType",
																"constraint": {
																	"type": "reference",
																	"name": "ContractEventArgs",
																	"id": 624
																}
															}
														]
													}
												]
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._getLogsAsync",
										"id": 852
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 77,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._getLogsAsync",
								"id": 852
							}
						},
						{
							"id": 1418,
							"name": "_instantiateContractIfExistsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1419,
									"name": "_instantiateContractIfExistsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1420,
											"name": "ContractType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractInstance"
											}
										}
									],
									"parameters": [
										{
											"id": 1421,
											"name": "artifact",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Artifact",
												"id": 554
											}
										},
										{
											"id": 1422,
											"name": "addressIfExists",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "ContractType",
												"constraint": {
													"type": "reference",
													"name": "ContractInstance"
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._instantiateContractIfExistsAsync",
										"id": 864
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 93,
									"character": 53
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._instantiateContractIfExistsAsync",
								"id": 864
							}
						},
						{
							"id": 1398,
							"name": "_subscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1399,
									"name": "_subscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1400,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEventArgs",
												"id": 624
											}
										}
									],
									"parameters": [
										{
											"id": 1401,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1402,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEvents",
												"id": 627
											}
										},
										{
											"id": 1403,
											"name": "indexFilterValues",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IndexedFilterValues",
												"id": 488
											}
										},
										{
											"id": 1404,
											"name": "abi",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3.ContractAbi"
											}
										},
										{
											"id": 1405,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "EventCallback",
												"id": 612,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "ArgsType",
														"constraint": {
															"type": "reference",
															"name": "ContractEventArgs",
															"id": 624
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._subscribe",
										"id": 844
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 65,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._subscribe",
								"id": 844
							}
						},
						{
							"id": 1414,
							"name": "_tryToDecodeLogOrNoop",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1415,
									"name": "_tryToDecodeLogOrNoop",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1416,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEventArgs",
												"id": 624
											}
										}
									],
									"parameters": [
										{
											"id": 1417,
											"name": "log",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LogEntry"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "LogWithDecodedArgs",
												"id": 530,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "ArgsType",
														"constraint": {
															"type": "reference",
															"name": "ContractEventArgs",
															"id": 624
														}
													}
												]
											},
											{
												"type": "reference",
												"name": "RawLog",
												"id": 621
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._tryToDecodeLogOrNoop",
										"id": 860
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 85,
									"character": 35
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._tryToDecodeLogOrNoop",
								"id": 860
							}
						},
						{
							"id": 1394,
							"name": "_unsubscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1395,
									"name": "_unsubscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1396,
											"name": "filterToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1397,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._unsubscribe",
										"id": 840
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 51,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._unsubscribe",
								"id": 840
							}
						},
						{
							"id": 1389,
							"name": "getContractAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1390,
									"name": "getContractAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the Ethereum address of the TokenRegistry contract deployed on the network\nthat the user-passed web3 provider is connected to.",
										"returns": "The Ethereum address of the TokenRegistry contract being used.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_registry_wrapper.ts",
									"line": 106,
									"character": 29
								}
							]
						},
						{
							"id": 1380,
							"name": "getTokenAddressByNameIfExistsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1381,
									"name": "getTokenAddressByNameIfExistsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1382,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_registry_wrapper.ts",
									"line": 78,
									"character": 51
								}
							]
						},
						{
							"id": 1377,
							"name": "getTokenAddressBySymbolIfExistsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1378,
									"name": "getTokenAddressBySymbolIfExistsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1379,
											"name": "symbol",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_registry_wrapper.ts",
									"line": 69,
									"character": 53
								}
							]
						},
						{
							"id": 1372,
							"name": "getTokenAddressesAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1373,
									"name": "getTokenAddressesAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves all the addresses of the tokens currently listed in the Token Registry smart contract",
										"returns": "An array of token addresses.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_registry_wrapper.ts",
									"line": 52,
									"character": 39
								}
							]
						},
						{
							"id": 1386,
							"name": "getTokenByNameIfExistsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1387,
									"name": "getTokenByNameIfExistsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1388,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Token",
														"id": 468
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_registry_wrapper.ts",
									"line": 94,
									"character": 44
								}
							]
						},
						{
							"id": 1383,
							"name": "getTokenBySymbolIfExistsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1384,
									"name": "getTokenBySymbolIfExistsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1385,
											"name": "symbol",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Token",
														"id": 468
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_registry_wrapper.ts",
									"line": 87,
									"character": 46
								}
							]
						},
						{
							"id": 1374,
							"name": "getTokenIfExistsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1375,
									"name": "getTokenIfExistsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves a token by address currently listed in the Token Registry smart contract",
										"returns": "An object that conforms to the Token interface or undefined if token not found.\n"
									},
									"parameters": [
										{
											"id": 1376,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Token",
														"id": 468
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_registry_wrapper.ts",
									"line": 61,
									"character": 38
								}
							]
						},
						{
							"id": 1370,
							"name": "getTokensAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1371,
									"name": "getTokensAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves all the tokens currently listed in the Token Registry smart contract",
										"returns": "An array of objects that conform to the Token interface.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Token",
													"id": 468
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_registry_wrapper.ts",
									"line": 37,
									"character": 31
								}
							]
						},
						{
							"id": 1392,
							"name": "unsubscribeAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1393,
									"name": "unsubscribeAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Cancels all existing subscriptions"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper.unsubscribeAll",
										"id": 838
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 45,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper.unsubscribeAll",
								"id": 838
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1366
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1391
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1423,
								1406,
								1418,
								1398,
								1414,
								1394,
								1389,
								1380,
								1377,
								1372,
								1386,
								1383,
								1374,
								1370,
								1392
							]
						}
					],
					"sources": [
						{
							"fileName": "src/contract_wrappers/token_registry_wrapper.ts",
							"line": 14,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ContractWrapper",
							"id": 832
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1365
					]
				}
			],
			"sources": [
				{
					"fileName": "src/contract_wrappers/token_registry_wrapper.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 873,
			"name": "\"src/contract_wrappers/token_transfer_proxy_wrapper\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/contract_wrappers/token_transfer_proxy_wrapper.ts",
			"children": [
				{
					"id": 874,
					"name": "TokenTransferProxyWrapper",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This class includes the functionality related to interacting with the TokenTransferProxy contract."
					},
					"children": [
						{
							"id": 875,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 876,
									"name": "new TokenTransferProxyWrapper",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 877,
											"name": "web3Wrapper",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3Wrapper",
												"id": 691
											}
										},
										{
											"id": 878,
											"name": "contractAddressIfExists",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "TokenTransferProxyWrapper",
										"id": 874
									},
									"overwrites": {
										"type": "reference",
										"name": "ContractWrapper.__constructor",
										"id": 834
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_transfer_proxy_wrapper.ts",
									"line": 14,
									"character": 46
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ContractWrapper.__constructor",
								"id": 834
							}
						},
						{
							"id": 886,
							"name": "_web3Wrapper",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 25,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3Wrapper",
								"id": 691
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._web3Wrapper",
								"id": 833
							}
						},
						{
							"id": 918,
							"name": "_getContractAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 919,
									"name": "_getContractAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 920,
											"name": "artifact",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Artifact",
												"id": 554
											}
										},
										{
											"id": 921,
											"name": "addressIfExists",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._getContractAddress",
										"id": 869
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 99,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._getContractAddress",
								"id": 869
							}
						},
						{
							"id": 901,
							"name": "_getLogsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 902,
									"name": "_getLogsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 903,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEventArgs",
												"id": 624
											}
										}
									],
									"parameters": [
										{
											"id": 904,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 905,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEvents",
												"id": 627
											}
										},
										{
											"id": 906,
											"name": "subscriptionOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SubscriptionOpts",
												"id": 494
											}
										},
										{
											"id": 907,
											"name": "indexFilterValues",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IndexedFilterValues",
												"id": 488
											}
										},
										{
											"id": 908,
											"name": "abi",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3.ContractAbi"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Array",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LogWithDecodedArgs",
														"id": 530,
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "ArgsType",
																"constraint": {
																	"type": "reference",
																	"name": "ContractEventArgs",
																	"id": 624
																}
															}
														]
													}
												]
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._getLogsAsync",
										"id": 852
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 77,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._getLogsAsync",
								"id": 852
							}
						},
						{
							"id": 913,
							"name": "_instantiateContractIfExistsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 914,
									"name": "_instantiateContractIfExistsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 915,
											"name": "ContractType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractInstance"
											}
										}
									],
									"parameters": [
										{
											"id": 916,
											"name": "artifact",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Artifact",
												"id": 554
											}
										},
										{
											"id": 917,
											"name": "addressIfExists",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "ContractType",
												"constraint": {
													"type": "reference",
													"name": "ContractInstance"
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._instantiateContractIfExistsAsync",
										"id": 864
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 93,
									"character": 53
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._instantiateContractIfExistsAsync",
								"id": 864
							}
						},
						{
							"id": 893,
							"name": "_subscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 894,
									"name": "_subscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 895,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEventArgs",
												"id": 624
											}
										}
									],
									"parameters": [
										{
											"id": 896,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 897,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEvents",
												"id": 627
											}
										},
										{
											"id": 898,
											"name": "indexFilterValues",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IndexedFilterValues",
												"id": 488
											}
										},
										{
											"id": 899,
											"name": "abi",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3.ContractAbi"
											}
										},
										{
											"id": 900,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "EventCallback",
												"id": 612,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "ArgsType",
														"constraint": {
															"type": "reference",
															"name": "ContractEventArgs",
															"id": 624
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._subscribe",
										"id": 844
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 65,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._subscribe",
								"id": 844
							}
						},
						{
							"id": 909,
							"name": "_tryToDecodeLogOrNoop",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 910,
									"name": "_tryToDecodeLogOrNoop",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 911,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEventArgs",
												"id": 624
											}
										}
									],
									"parameters": [
										{
											"id": 912,
											"name": "log",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LogEntry"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "LogWithDecodedArgs",
												"id": 530,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "ArgsType",
														"constraint": {
															"type": "reference",
															"name": "ContractEventArgs",
															"id": 624
														}
													}
												]
											},
											{
												"type": "reference",
												"name": "RawLog",
												"id": 621
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._tryToDecodeLogOrNoop",
										"id": 860
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 85,
									"character": 35
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._tryToDecodeLogOrNoop",
								"id": 860
							}
						},
						{
							"id": 889,
							"name": "_unsubscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 890,
									"name": "_unsubscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 891,
											"name": "filterToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 892,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._unsubscribe",
										"id": 840
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 51,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._unsubscribe",
								"id": 840
							}
						},
						{
							"id": 882,
							"name": "getAuthorizedAddressesAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 883,
									"name": "getAuthorizedAddressesAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the list of all Exchange contract addresses authorized by the TokenTransferProxy contract.",
										"returns": "The list of authorized addresses.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_transfer_proxy_wrapper.ts",
									"line": 33,
									"character": 44
								}
							]
						},
						{
							"id": 884,
							"name": "getContractAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 885,
									"name": "getContractAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the Ethereum address of the TokenTransferProxy contract deployed on the network\nthat the user-passed web3 provider is connected to.",
										"returns": "The Ethereum address of the TokenTransferProxy contract being used.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_transfer_proxy_wrapper.ts",
									"line": 43,
									"character": 29
								}
							]
						},
						{
							"id": 879,
							"name": "isAuthorizedAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 880,
									"name": "isAuthorizedAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Check if the Exchange contract address is authorized by the TokenTransferProxy contract.",
										"returns": "Whether the exchangeContractAddress is authorized.\n"
									},
									"parameters": [
										{
											"id": 881,
											"name": "exchangeContractAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded address of the Exchange contract to call."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_transfer_proxy_wrapper.ts",
									"line": 24,
									"character": 34
								}
							]
						},
						{
							"id": 887,
							"name": "unsubscribeAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 888,
									"name": "unsubscribeAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Cancels all existing subscriptions"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper.unsubscribeAll",
										"id": 838
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 45,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper.unsubscribeAll",
								"id": 838
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								875
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								886
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								918,
								901,
								913,
								893,
								909,
								889,
								882,
								884,
								879,
								887
							]
						}
					],
					"sources": [
						{
							"fileName": "src/contract_wrappers/token_transfer_proxy_wrapper.ts",
							"line": 12,
							"character": 38
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ContractWrapper",
							"id": 832
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						874
					]
				}
			],
			"sources": [
				{
					"fileName": "src/contract_wrappers/token_transfer_proxy_wrapper.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 922,
			"name": "\"src/contract_wrappers/token_wrapper\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/contract_wrappers/token_wrapper.ts",
			"children": [
				{
					"id": 923,
					"name": "TokenWrapper",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This class includes all the functionality related to interacting with ERC20 token contracts.\nAll ERC20 method calls are supported, along with some convenience methods for getting/setting allowances\nto the 0x Proxy smart contract."
					},
					"children": [
						{
							"id": 925,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 926,
									"name": "new TokenWrapper",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 927,
											"name": "web3Wrapper",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3Wrapper",
												"id": 691
											}
										},
										{
											"id": 928,
											"name": "abiDecoder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AbiDecoder",
												"id": 771
											}
										},
										{
											"id": 929,
											"name": "tokenTransferProxyWrapper",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TokenTransferProxyWrapper",
												"id": 874
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "TokenWrapper",
										"id": 923
									},
									"overwrites": {
										"type": "reference",
										"name": "ContractWrapper.__constructor",
										"id": 834
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_wrapper.ts",
									"line": 36,
									"character": 66
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ContractWrapper.__constructor",
								"id": 834
							}
						},
						{
							"id": 924,
							"name": "UNLIMITED_ALLOWANCE_IN_BASE_UNITS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_wrapper.ts",
									"line": 34,
									"character": 44
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							},
							"defaultValue": " constants.UNLIMITED_ALLOWANCE_IN_BASE_UNITS"
						},
						{
							"id": 1002,
							"name": "_web3Wrapper",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 25,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3Wrapper",
								"id": 691
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._web3Wrapper",
								"id": 833
							}
						},
						{
							"id": 1034,
							"name": "_getContractAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1035,
									"name": "_getContractAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1036,
											"name": "artifact",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Artifact",
												"id": 554
											}
										},
										{
											"id": 1037,
											"name": "addressIfExists",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._getContractAddress",
										"id": 869
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 99,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._getContractAddress",
								"id": 869
							}
						},
						{
							"id": 1017,
							"name": "_getLogsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1018,
									"name": "_getLogsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1019,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEventArgs",
												"id": 624
											}
										}
									],
									"parameters": [
										{
											"id": 1020,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1021,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEvents",
												"id": 627
											}
										},
										{
											"id": 1022,
											"name": "subscriptionOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SubscriptionOpts",
												"id": 494
											}
										},
										{
											"id": 1023,
											"name": "indexFilterValues",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IndexedFilterValues",
												"id": 488
											}
										},
										{
											"id": 1024,
											"name": "abi",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3.ContractAbi"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Array",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LogWithDecodedArgs",
														"id": 530,
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "ArgsType",
																"constraint": {
																	"type": "reference",
																	"name": "ContractEventArgs",
																	"id": 624
																}
															}
														]
													}
												]
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._getLogsAsync",
										"id": 852
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 77,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._getLogsAsync",
								"id": 852
							}
						},
						{
							"id": 1029,
							"name": "_instantiateContractIfExistsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1030,
									"name": "_instantiateContractIfExistsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1031,
											"name": "ContractType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractInstance"
											}
										}
									],
									"parameters": [
										{
											"id": 1032,
											"name": "artifact",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Artifact",
												"id": 554
											}
										},
										{
											"id": 1033,
											"name": "addressIfExists",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "ContractType",
												"constraint": {
													"type": "reference",
													"name": "ContractInstance"
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._instantiateContractIfExistsAsync",
										"id": 864
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 93,
									"character": 53
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._instantiateContractIfExistsAsync",
								"id": 864
							}
						},
						{
							"id": 1009,
							"name": "_subscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1010,
									"name": "_subscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1011,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEventArgs",
												"id": 624
											}
										}
									],
									"parameters": [
										{
											"id": 1012,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1013,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEvents",
												"id": 627
											}
										},
										{
											"id": 1014,
											"name": "indexFilterValues",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IndexedFilterValues",
												"id": 488
											}
										},
										{
											"id": 1015,
											"name": "abi",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3.ContractAbi"
											}
										},
										{
											"id": 1016,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "EventCallback",
												"id": 612,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "ArgsType",
														"constraint": {
															"type": "reference",
															"name": "ContractEventArgs",
															"id": 624
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._subscribe",
										"id": 844
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 65,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._subscribe",
								"id": 844
							}
						},
						{
							"id": 1025,
							"name": "_tryToDecodeLogOrNoop",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1026,
									"name": "_tryToDecodeLogOrNoop",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1027,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEventArgs",
												"id": 624
											}
										}
									],
									"parameters": [
										{
											"id": 1028,
											"name": "log",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LogEntry"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "LogWithDecodedArgs",
												"id": 530,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "ArgsType",
														"constraint": {
															"type": "reference",
															"name": "ContractEventArgs",
															"id": 624
														}
													}
												]
											},
											{
												"type": "reference",
												"name": "RawLog",
												"id": 621
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._tryToDecodeLogOrNoop",
										"id": 860
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 85,
									"character": 35
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._tryToDecodeLogOrNoop",
								"id": 860
							}
						},
						{
							"id": 1005,
							"name": "_unsubscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1006,
									"name": "_unsubscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1007,
											"name": "filterToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1008,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper._unsubscribe",
										"id": 840
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 51,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper._unsubscribe",
								"id": 840
							}
						},
						{
							"id": 948,
							"name": "getAllowanceAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 949,
									"name": "getAllowanceAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the owners allowance in baseUnits set to the spender's address."
									},
									"parameters": [
										{
											"id": 950,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded contract Ethereum address where the ERC20 token is deployed."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 951,
											"name": "ownerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded user Ethereum address whose allowance to spenderAddress\n                         you would like to retrieve."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 952,
											"name": "spenderAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded user Ethereum address who can spend the allowance you are fetching."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 953,
											"name": "methodOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optional arguments this method accepts.\n"
											},
											"type": {
												"type": "reference",
												"name": "MethodOpts",
												"id": 565
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_wrapper.ts",
									"line": 115,
									"character": 34
								}
							]
						},
						{
							"id": 930,
							"name": "getBalanceAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 931,
									"name": "getBalanceAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves an owner's ERC20 token balance.",
										"returns": "The owner's ERC20 token balance in base units.\n"
									},
									"parameters": [
										{
											"id": 932,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded contract Ethereum address where the ERC20 token is deployed."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 933,
											"name": "ownerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded user Ethereum address whose balance you would like to check."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 934,
											"name": "methodOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optional arguments this method accepts."
											},
											"type": {
												"type": "reference",
												"name": "MethodOpts",
												"id": 565
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_wrapper.ts",
									"line": 50,
									"character": 32
								}
							]
						},
						{
							"id": 995,
							"name": "getLogsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 996,
									"name": "getLogsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets historical logs without creating a subscription",
										"returns": "Array of logs that match the parameters\n"
									},
									"typeParameter": [
										{
											"id": 997,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TokenContractEventArgs",
												"id": 623
											}
										}
									],
									"parameters": [
										{
											"id": 998,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An address of the token that emmited the logs."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 999,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The token contract event you would like to subscribe to."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "stringLiteral",
														"value": "Transfer"
													},
													{
														"type": "stringLiteral",
														"value": "Approval"
													}
												]
											}
										},
										{
											"id": 1000,
											"name": "subscriptionOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Subscriptions options that let you configure the subscription."
											},
											"type": {
												"type": "reference",
												"name": "SubscriptionOpts",
												"id": 494
											}
										},
										{
											"id": 1001,
											"name": "indexFilterValues",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An object where the keys are indexed args returned by the event and\n                             the value is the value you are interested in. E.g `{_from: aUserAddressHex}`"
											},
											"type": {
												"type": "reference",
												"name": "IndexedFilterValues",
												"id": 488
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Array",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LogWithDecodedArgs",
														"id": 530,
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "ArgsType",
																"constraint": {
																	"type": "reference",
																	"name": "TokenContractEventArgs",
																	"id": 623
																}
															}
														]
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_wrapper.ts",
									"line": 295,
									"character": 29
								}
							]
						},
						{
							"id": 954,
							"name": "getProxyAllowanceAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 955,
									"name": "getProxyAllowanceAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the owner's allowance in baseUnits set to the 0x proxy contract."
									},
									"parameters": [
										{
											"id": 956,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded contract Ethereum address where the ERC20 token is deployed."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 957,
											"name": "ownerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded user Ethereum address whose proxy contract allowance we are retrieving."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 958,
											"name": "methodOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optional arguments this method accepts.\n"
											},
											"type": {
												"type": "reference",
												"name": "MethodOpts",
												"id": 565
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_wrapper.ts",
									"line": 133,
									"character": 39
								}
							]
						},
						{
							"id": 935,
							"name": "setAllowanceAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 936,
									"name": "setAllowanceAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the spender's allowance to a specified number of baseUnits on behalf of the owner address.\nEquivalent to the ERC20 spec method `approve`.",
										"returns": "Transaction hash.\n"
									},
									"parameters": [
										{
											"id": 937,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded contract Ethereum address where the ERC20 token is deployed."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 938,
											"name": "ownerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded user Ethereum address who would like to set an allowance\n                             for spenderAddress."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 939,
											"name": "spenderAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded user Ethereum address who will be able to spend the set allowance."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 940,
											"name": "amountInBaseUnits",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The allowance amount you would like to set."
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 941,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction parameters."
											},
											"type": {
												"type": "reference",
												"name": "TransactionOpts",
												"id": 567
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_wrapper.ts",
									"line": 73,
									"character": 34
								}
							]
						},
						{
							"id": 959,
							"name": "setProxyAllowanceAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 960,
									"name": "setProxyAllowanceAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the 0x proxy contract's allowance to a specified number of a tokens' baseUnits on behalf\nof an owner address.",
										"returns": "Transaction hash.\n"
									},
									"parameters": [
										{
											"id": 961,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded contract Ethereum address where the ERC20 token is deployed."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 962,
											"name": "ownerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded user Ethereum address who is setting an allowance\n                             for the Proxy contract."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 963,
											"name": "amountInBaseUnits",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The allowance amount specified in baseUnits."
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 964,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction parameters."
											},
											"type": {
												"type": "reference",
												"name": "TransactionOpts",
												"id": 567
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_wrapper.ts",
									"line": 152,
									"character": 39
								}
							]
						},
						{
							"id": 942,
							"name": "setUnlimitedAllowanceAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 943,
									"name": "setUnlimitedAllowanceAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the spender's allowance to an unlimited number of baseUnits on behalf of the owner address.\nEquivalent to the ERC20 spec method `approve`.\nSetting an unlimited allowance will lower the gas cost for filling orders involving tokens that forego updating\nallowances set to the max amount (e.g ZRX, WETH)",
										"returns": "Transaction hash.\n"
									},
									"parameters": [
										{
											"id": 944,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded contract Ethereum address where the ERC20 token is deployed."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 945,
											"name": "ownerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded user Ethereum address who would like to set an allowance\n                             for spenderAddress."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 946,
											"name": "spenderAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded user Ethereum address who will be able to spend the set allowance."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 947,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction parameters."
											},
											"type": {
												"type": "reference",
												"name": "TransactionOpts",
												"id": 567
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_wrapper.ts",
									"line": 100,
									"character": 43
								}
							]
						},
						{
							"id": 965,
							"name": "setUnlimitedProxyAllowanceAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 966,
									"name": "setUnlimitedProxyAllowanceAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the 0x proxy contract's allowance to a unlimited number of a tokens' baseUnits on behalf\nof an owner address.\nSetting an unlimited allowance will lower the gas cost for filling orders involving tokens that forego updating\nallowances set to the max amount (e.g ZRX, WETH)",
										"returns": "Transaction hash.\n"
									},
									"parameters": [
										{
											"id": 967,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded contract Ethereum address where the ERC20 token is deployed."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 968,
											"name": "ownerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded user Ethereum address who is setting an allowance\n                             for the Proxy contract."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 969,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction parameters."
											},
											"type": {
												"type": "reference",
												"name": "TransactionOpts",
												"id": 567
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_wrapper.ts",
									"line": 175,
									"character": 48
								}
							]
						},
						{
							"id": 985,
							"name": "subscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 986,
									"name": "subscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Subscribe to an event type emitted by the Token contract.",
										"returns": "Subscription token used later to unsubscribe\n"
									},
									"typeParameter": [
										{
											"id": 987,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TokenContractEventArgs",
												"id": 623
											}
										}
									],
									"parameters": [
										{
											"id": 988,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded address where the ERC20 token is deployed."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 989,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The token contract event you would like to subscribe to."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "stringLiteral",
														"value": "Transfer"
													},
													{
														"type": "stringLiteral",
														"value": "Approval"
													}
												]
											}
										},
										{
											"id": 990,
											"name": "indexFilterValues",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An object where the keys are indexed args returned by the event and\n                             the value is the value you are interested in. E.g `{maker: aUserAddressHex}`"
											},
											"type": {
												"type": "reference",
												"name": "IndexedFilterValues",
												"id": 488
											}
										},
										{
											"id": 991,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Callback that gets called when a log is added/removed"
											},
											"type": {
												"type": "reference",
												"name": "EventCallback",
												"id": 612,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "ArgsType",
														"constraint": {
															"type": "reference",
															"name": "TokenContractEventArgs",
															"id": 623
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_wrapper.ts",
									"line": 267,
									"character": 20
								}
							]
						},
						{
							"id": 970,
							"name": "transferAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 971,
									"name": "transferAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Transfers `amountInBaseUnits` ERC20 tokens from `fromAddress` to `toAddress`.",
										"returns": "Transaction hash.\n"
									},
									"parameters": [
										{
											"id": 972,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded contract Ethereum address where the ERC20 token is deployed."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 973,
											"name": "fromAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded user Ethereum address that will send the funds."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 974,
											"name": "toAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded user Ethereum address that will receive the funds."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 975,
											"name": "amountInBaseUnits",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The amount (specified in baseUnits) of the token to transfer."
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 976,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction parameters."
											},
											"type": {
												"type": "reference",
												"name": "TransactionOpts",
												"id": 567
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_wrapper.ts",
									"line": 192,
									"character": 30
								}
							]
						},
						{
							"id": 977,
							"name": "transferFromAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 978,
									"name": "transferFromAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Transfers `amountInBaseUnits` ERC20 tokens from `fromAddress` to `toAddress`.\nRequires the fromAddress to have sufficient funds and to have approved an allowance of\n`amountInBaseUnits` to `senderAddress`.",
										"returns": "Transaction hash.\n"
									},
									"parameters": [
										{
											"id": 979,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded contract Ethereum address where the ERC20 token is deployed."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 980,
											"name": "fromAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded user Ethereum address whose funds are being sent."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 981,
											"name": "toAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded user Ethereum address that will receive the funds."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 982,
											"name": "senderAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The hex encoded user Ethereum address whose initiates the fund transfer. The\n                             `fromAddress` must have set an allowance to the `senderAddress`\n                             before this call."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 983,
											"name": "amountInBaseUnits",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The amount (specified in baseUnits) of the token to transfer."
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 984,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Transaction parameters."
											},
											"type": {
												"type": "reference",
												"name": "TransactionOpts",
												"id": 567
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_wrapper.ts",
									"line": 227,
									"character": 34
								}
							]
						},
						{
							"id": 992,
							"name": "unsubscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 993,
									"name": "unsubscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Cancel a subscription"
									},
									"parameters": [
										{
											"id": 994,
											"name": "subscriptionToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Subscription token returned by `subscribe()`\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/token_wrapper.ts",
									"line": 283,
									"character": 22
								}
							]
						},
						{
							"id": 1003,
							"name": "unsubscribeAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1004,
									"name": "unsubscribeAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Cancels all existing subscriptions"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ContractWrapper.unsubscribeAll",
										"id": 838
									}
								}
							],
							"sources": [
								{
									"fileName": "src/contract_wrappers/contract_wrapper.ts",
									"line": 45,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractWrapper.unsubscribeAll",
								"id": 838
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								925
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								924,
								1002
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1034,
								1017,
								1029,
								1009,
								1025,
								1005,
								948,
								930,
								995,
								954,
								935,
								959,
								942,
								965,
								985,
								970,
								977,
								992,
								1003
							]
						}
					],
					"sources": [
						{
							"fileName": "src/contract_wrappers/token_wrapper.ts",
							"line": 33,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ContractWrapper",
							"id": 832
						}
					]
				},
				{
					"id": 1038,
					"name": "ALLOWANCE_TO_ZERO_GAS_AMOUNT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "src/contract_wrappers/token_wrapper.ts",
							"line": 26,
							"character": 34
						}
					],
					"type": {
						"type": "unknown",
						"name": "47275"
					},
					"defaultValue": "47275"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						923
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1038
					]
				}
			],
			"sources": [
				{
					"fileName": "src/contract_wrappers/token_wrapper.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1626,
			"name": "\"src/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/index.ts",
			"sources": [
				{
					"fileName": "src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1480,
			"name": "\"src/order_watcher/event_watcher\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/order_watcher/event_watcher.ts",
			"children": [
				{
					"id": 1481,
					"name": "LogEventState",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 1483,
							"name": "Added",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "src/order_watcher/event_watcher.ts",
									"line": 20,
									"character": 9
								}
							]
						},
						{
							"id": 1482,
							"name": "Removed",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "src/order_watcher/event_watcher.ts",
									"line": 19,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								1483,
								1482
							]
						}
					],
					"sources": [
						{
							"fileName": "src/order_watcher/event_watcher.ts",
							"line": 18,
							"character": 18
						}
					]
				},
				{
					"id": 1484,
					"name": "EventWatcher",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1485,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1486,
									"name": "new EventWatcher",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1487,
											"name": "web3Wrapper",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3Wrapper",
												"id": 691
											}
										},
										{
											"id": 1488,
											"name": "pollingIntervalIfExistsMs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "EventWatcher",
										"id": 1484
									}
								}
							],
							"sources": [
								{
									"fileName": "src/order_watcher/event_watcher.ts",
									"line": 31,
									"character": 46
								}
							]
						},
						{
							"id": 1489,
							"name": "subscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1490,
									"name": "subscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1491,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "EventWatcherCallback",
												"id": 617
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/order_watcher/event_watcher.ts",
									"line": 38,
									"character": 20
								}
							]
						},
						{
							"id": 1492,
							"name": "unsubscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1493,
									"name": "unsubscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/order_watcher/event_watcher.ts",
									"line": 47,
									"character": 22
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1485
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1489,
								1492
							]
						}
					],
					"sources": [
						{
							"fileName": "src/order_watcher/event_watcher.ts",
							"line": 27,
							"character": 25
						}
					]
				},
				{
					"id": 1494,
					"name": "DEFAULT_EVENT_POLLING_INTERVAL_MS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "src/order_watcher/event_watcher.ts",
							"line": 16,
							"character": 39
						}
					],
					"type": {
						"type": "unknown",
						"name": "200"
					},
					"defaultValue": "200"
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						1481
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1484
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1494
					]
				}
			],
			"sources": [
				{
					"fileName": "src/order_watcher/event_watcher.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1495,
			"name": "\"src/order_watcher/expiration_watcher\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/order_watcher/expiration_watcher.ts",
			"children": [
				{
					"id": 1496,
					"name": "ExpirationWatcher",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This class includes the functionality to detect expired orders.\nIt stores them in a min heap by expiration time and checks for expired ones every `orderExpirationCheckingIntervalMs`"
					},
					"children": [
						{
							"id": 1497,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1498,
									"name": "new ExpirationWatcher",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1499,
											"name": "expirationMarginIfExistsMs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 1500,
											"name": "orderExpirationCheckingIntervalIfExistsMs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ExpirationWatcher",
										"id": 1496
									}
								}
							],
							"sources": [
								{
									"fileName": "src/order_watcher/expiration_watcher.ts",
									"line": 22,
									"character": 69
								}
							]
						},
						{
							"id": 1509,
							"name": "addOrder",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1510,
									"name": "addOrder",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1511,
											"name": "orderHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1512,
											"name": "expirationUnixTimestampMs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/order_watcher/expiration_watcher.ts",
									"line": 48,
									"character": 19
								}
							]
						},
						{
							"id": 1513,
							"name": "removeOrder",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1514,
									"name": "removeOrder",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1515,
											"name": "orderHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/order_watcher/expiration_watcher.ts",
									"line": 52,
									"character": 22
								}
							]
						},
						{
							"id": 1501,
							"name": "subscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1502,
									"name": "subscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1503,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1504,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1505,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1506,
																	"name": "orderHash",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "src/order_watcher/expiration_watcher.ts",
															"line": 33,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/order_watcher/expiration_watcher.ts",
									"line": 33,
									"character": 20
								}
							]
						},
						{
							"id": 1507,
							"name": "unsubscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1508,
									"name": "unsubscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/order_watcher/expiration_watcher.ts",
									"line": 41,
									"character": 22
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1497
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1509,
								1513,
								1501,
								1507
							]
						}
					],
					"sources": [
						{
							"fileName": "src/order_watcher/expiration_watcher.ts",
							"line": 17,
							"character": 30
						}
					]
				},
				{
					"id": 1516,
					"name": "DEFAULT_EXPIRATION_MARGIN_MS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "src/order_watcher/expiration_watcher.ts",
							"line": 10,
							"character": 34
						}
					],
					"type": {
						"type": "unknown",
						"name": "0"
					},
					"defaultValue": "0"
				},
				{
					"id": 1517,
					"name": "DEFAULT_ORDER_EXPIRATION_CHECKING_INTERVAL_MS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "src/order_watcher/expiration_watcher.ts",
							"line": 11,
							"character": 51
						}
					],
					"type": {
						"type": "unknown",
						"name": "50"
					},
					"defaultValue": "50"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1496
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1516,
						1517
					]
				}
			],
			"sources": [
				{
					"fileName": "src/order_watcher/expiration_watcher.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1518,
			"name": "\"src/order_watcher/order_state_watcher\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/order_watcher/order_state_watcher.ts",
			"children": [
				{
					"id": 1531,
					"name": "OrderStateWatcher",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This class includes all the functionality related to watching a set of orders\nfor potential changes in order validity/fillability. The orderWatcher notifies\nthe subscriber of these changes so that a final decison can be made on whether\nthe order should be deemed invalid."
					},
					"children": [
						{
							"id": 1532,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1533,
									"name": "new OrderStateWatcher",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1534,
											"name": "web3Wrapper",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3Wrapper",
												"id": 691
											}
										},
										{
											"id": 1535,
											"name": "abiDecoder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AbiDecoder",
												"id": 771
											}
										},
										{
											"id": 1536,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TokenWrapper",
												"id": 923
											}
										},
										{
											"id": 1537,
											"name": "exchange",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ExchangeWrapper",
												"id": 1223
											}
										},
										{
											"id": 1538,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "OrderStateWatcherConfig",
												"id": 509
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OrderStateWatcher",
										"id": 1531
									}
								}
							],
							"sources": [
								{
									"fileName": "src/order_watcher/order_state_watcher.ts",
									"line": 74,
									"character": 57
								}
							]
						},
						{
							"id": 1539,
							"name": "addOrder",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1540,
									"name": "addOrder",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add an order to the orderStateWatcher. Before the order is added, it's\nsignature is verified."
									},
									"parameters": [
										{
											"id": 1541,
											"name": "signedOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The order you wish to start watching.\n"
											},
											"type": {
												"type": "reference",
												"name": "SignedOrder",
												"id": 454
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/order_watcher/order_state_watcher.ts",
									"line": 108,
									"character": 19
								}
							]
						},
						{
							"id": 1542,
							"name": "removeOrder",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1543,
									"name": "removeOrder",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Removes an order from the orderStateWatcher"
									},
									"parameters": [
										{
											"id": 1544,
											"name": "orderHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The orderHash of the order you wish to stop watching.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/order_watcher/order_state_watcher.ts",
									"line": 121,
									"character": 22
								}
							]
						},
						{
							"id": 1545,
							"name": "subscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1546,
									"name": "subscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Starts an orderStateWatcher subscription. The callback will be called every time a watched order's\nbacking blockchain state has changed. This is a call-to-action for the caller to re-validate the order."
									},
									"parameters": [
										{
											"id": 1547,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Receives the orderHash of the order that should be re-validated, together\n                             with all the order-relevant blockchain state needed to re-validate the order.\n"
											},
											"type": {
												"type": "reference",
												"name": "OnOrderStateChangeCallback",
												"id": 641
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/order_watcher/order_state_watcher.ts",
									"line": 141,
									"character": 20
								}
							]
						},
						{
							"id": 1548,
							"name": "unsubscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1549,
									"name": "unsubscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Ends an orderStateWatcher subscription."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/order_watcher/order_state_watcher.ts",
									"line": 156,
									"character": 22
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1532
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1539,
								1542,
								1545,
								1548
							]
						}
					],
					"sources": [
						{
							"fileName": "src/order_watcher/order_state_watcher.ts",
							"line": 61,
							"character": 30
						}
					]
				},
				{
					"id": 1519,
					"name": "DependentOrderHashes",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"indexSignature": [
						{
							"id": 1520,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 1521,
									"name": "makerAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1522,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 1523,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 1524,
													"name": "makerToken",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Set",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "src/order_watcher/order_state_watcher.ts",
											"line": 40,
											"character": 27
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/order_watcher/order_state_watcher.ts",
							"line": 39,
							"character": 30
						}
					]
				},
				{
					"id": 1525,
					"name": "OrderByOrderHash",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"indexSignature": [
						{
							"id": 1526,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 1527,
									"name": "orderHash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SignedOrder",
								"id": 454
							}
						}
					],
					"sources": [
						{
							"fileName": "src/order_watcher/order_state_watcher.ts",
							"line": 45,
							"character": 26
						}
					]
				},
				{
					"id": 1528,
					"name": "OrderStateByOrderHash",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"indexSignature": [
						{
							"id": 1529,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 1530,
									"name": "orderHash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "OrderState",
								"id": 640
							}
						}
					],
					"sources": [
						{
							"fileName": "src/order_watcher/order_state_watcher.ts",
							"line": 49,
							"character": 31
						}
					]
				},
				{
					"id": 1550,
					"name": "DEFAULT_CLEANUP_JOB_INTERVAL_MS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "src/order_watcher/order_state_watcher.ts",
							"line": 53,
							"character": 37
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": " 1000 * 60 * 60"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1531
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1519,
						1525,
						1528
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1550
					]
				}
			],
			"sources": [
				{
					"fileName": "src/order_watcher/order_state_watcher.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1454,
			"name": "\"src/order_watcher/remaining_fillable_calculator\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/order_watcher/remaining_fillable_calculator.ts",
			"children": [
				{
					"id": 1455,
					"name": "RemainingFillableCalculator",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1456,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1457,
									"name": "new RemainingFillableCalculator",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1458,
											"name": "signedOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SignedOrder",
												"id": 454
											}
										},
										{
											"id": 1459,
											"name": "isMakerTokenZRX",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1460,
											"name": "transferrableMakerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1461,
											"name": "transferrableMakerFeeTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1462,
											"name": "remainingMakerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "RemainingFillableCalculator",
										"id": 1455
									}
								}
							],
							"sources": [
								{
									"fileName": "src/order_watcher/remaining_fillable_calculator.ts",
									"line": 12,
									"character": 47
								}
							]
						},
						{
							"id": 1463,
							"name": "computeRemainingMakerFillable",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1464,
									"name": "computeRemainingMakerFillable",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNumber"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/order_watcher/remaining_fillable_calculator.ts",
									"line": 26,
									"character": 40
								}
							]
						},
						{
							"id": 1465,
							"name": "computeRemainingTakerFillable",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1466,
									"name": "computeRemainingTakerFillable",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNumber"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/order_watcher/remaining_fillable_calculator.ts",
									"line": 35,
									"character": 40
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1456
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1463,
								1465
							]
						}
					],
					"sources": [
						{
							"fileName": "src/order_watcher/remaining_fillable_calculator.ts",
							"line": 5,
							"character": 40
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1455
					]
				}
			],
			"sources": [
				{
					"fileName": "src/order_watcher/remaining_fillable_calculator.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1551,
			"name": "\"src/schemas/zero_ex_config_schema\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/schemas/zero_ex_config_schema.ts",
			"children": [
				{
					"id": 1552,
					"name": "zeroExConfigSchema",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1553,
							"name": "id",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schemas/zero_ex_config_schema.ts",
									"line": 2,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"/ZeroExConfig\""
						},
						{
							"id": 1576,
							"name": "required",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schemas/zero_ex_config_schema.ts",
									"line": 27,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": " ['networkId']"
						},
						{
							"id": 1575,
							"name": "type",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schemas/zero_ex_config_schema.ts",
									"line": 26,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"object\""
						},
						{
							"id": 1554,
							"name": "properties",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1564,
									"name": "etherTokenContractAddress",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1565,
											"name": "$ref",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schemas/zero_ex_config_schema.ts",
													"line": 11,
													"character": 40
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"/Address\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1565
											]
										}
									],
									"sources": [
										{
											"fileName": "src/schemas/zero_ex_config_schema.ts",
											"line": 11,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 1560,
									"name": "exchangeContractAddress",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1561,
											"name": "$ref",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schemas/zero_ex_config_schema.ts",
													"line": 9,
													"character": 38
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"/Address\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1561
											]
										}
									],
									"sources": [
										{
											"fileName": "src/schemas/zero_ex_config_schema.ts",
											"line": 9,
											"character": 31
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 1558,
									"name": "gasPrice",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1559,
											"name": "$ref",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schemas/zero_ex_config_schema.ts",
													"line": 8,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"/Number\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1559
											]
										}
									],
									"sources": [
										{
											"fileName": "src/schemas/zero_ex_config_schema.ts",
											"line": 8,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 1555,
									"name": "networkId",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1557,
											"name": "minimum",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schemas/zero_ex_config_schema.ts",
													"line": 6,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 1556,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schemas/zero_ex_config_schema.ts",
													"line": 5,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"number\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1557,
												1556
											]
										}
									],
									"sources": [
										{
											"fileName": "src/schemas/zero_ex_config_schema.ts",
											"line": 4,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 1566,
									"name": "orderWatcherConfig",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1567,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schemas/zero_ex_config_schema.ts",
													"line": 13,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"object\""
										},
										{
											"id": 1568,
											"name": "properties",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1572,
													"name": "numConfirmations",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 1574,
															"name": "minimum",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "src/schemas/zero_ex_config_schema.ts",
																	"line": 21,
																	"character": 27
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															},
															"defaultValue": "0"
														},
														{
															"id": 1573,
															"name": "type",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "src/schemas/zero_ex_config_schema.ts",
																	"line": 20,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"number\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1574,
																1573
															]
														}
													],
													"sources": [
														{
															"fileName": "src/schemas/zero_ex_config_schema.ts",
															"line": 19,
															"character": 32
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 1569,
													"name": "pollingIntervalMs",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 1571,
															"name": "minimum",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "src/schemas/zero_ex_config_schema.ts",
																	"line": 17,
																	"character": 27
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															},
															"defaultValue": "0"
														},
														{
															"id": 1570,
															"name": "type",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "src/schemas/zero_ex_config_schema.ts",
																	"line": 16,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"number\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1571,
																1570
															]
														}
													],
													"sources": [
														{
															"fileName": "src/schemas/zero_ex_config_schema.ts",
															"line": 15,
															"character": 33
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"groups": [
												{
													"title": "Object literals",
													"kind": 2097152,
													"children": [
														1572,
														1569
													]
												}
											],
											"sources": [
												{
													"fileName": "src/schemas/zero_ex_config_schema.ts",
													"line": 14,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1567
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												1568
											]
										}
									],
									"sources": [
										{
											"fileName": "src/schemas/zero_ex_config_schema.ts",
											"line": 12,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 1562,
									"name": "tokenRegistryContractAddress",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1563,
											"name": "$ref",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schemas/zero_ex_config_schema.ts",
													"line": 10,
													"character": 43
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"/Address\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1563
											]
										}
									],
									"sources": [
										{
											"fileName": "src/schemas/zero_ex_config_schema.ts",
											"line": 10,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										1564,
										1560,
										1558,
										1555,
										1566,
										1562
									]
								}
							],
							"sources": [
								{
									"fileName": "src/schemas/zero_ex_config_schema.ts",
									"line": 3,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1553,
								1576,
								1575
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1554
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schemas/zero_ex_config_schema.ts",
							"line": 1,
							"character": 31
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1552
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schemas/zero_ex_config_schema.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1101,
			"name": "\"src/stores/balance_proxy_allowance_lazy_store\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/stores/balance_proxy_allowance_lazy_store.ts",
			"children": [
				{
					"id": 1102,
					"name": "BalanceAndProxyAllowanceLazyStore",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Copy on read store for balances/proxyAllowances of tokens/accounts"
					},
					"children": [
						{
							"id": 1103,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1104,
									"name": "new BalanceAndProxyAllowanceLazyStore",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1105,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TokenWrapper",
												"id": 923
											}
										},
										{
											"id": 1106,
											"name": "defaultBlock",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "stringLiteral",
														"value": "latest"
													},
													{
														"type": "stringLiteral",
														"value": "pending"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "BalanceAndProxyAllowanceLazyStore",
										"id": 1102
									}
								}
							],
							"sources": [
								{
									"fileName": "src/stores/balance_proxy_allowance_lazy_store.ts",
									"line": 23,
									"character": 6
								}
							]
						},
						{
							"id": 1133,
							"name": "deleteAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1134,
									"name": "deleteAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/stores/balance_proxy_allowance_lazy_store.ts",
									"line": 81,
									"character": 20
								}
							]
						},
						{
							"id": 1116,
							"name": "deleteBalance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1117,
									"name": "deleteBalance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1118,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1119,
											"name": "userAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/stores/balance_proxy_allowance_lazy_store.ts",
									"line": 47,
									"character": 24
								}
							]
						},
						{
							"id": 1129,
							"name": "deleteProxyAllowance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1130,
									"name": "deleteProxyAllowance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1131,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1132,
											"name": "userAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/stores/balance_proxy_allowance_lazy_store.ts",
									"line": 73,
									"character": 31
								}
							]
						},
						{
							"id": 1107,
							"name": "getBalanceAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1108,
									"name": "getBalanceAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1109,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1110,
											"name": "userAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/stores/balance_proxy_allowance_lazy_store.ts",
									"line": 30,
									"character": 32
								}
							]
						},
						{
							"id": 1120,
							"name": "getProxyAllowanceAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1121,
									"name": "getProxyAllowanceAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1122,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1123,
											"name": "userAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/stores/balance_proxy_allowance_lazy_store.ts",
									"line": 55,
									"character": 39
								}
							]
						},
						{
							"id": 1111,
							"name": "setBalance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1112,
									"name": "setBalance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1113,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1114,
											"name": "userAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1115,
											"name": "balance",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/stores/balance_proxy_allowance_lazy_store.ts",
									"line": 41,
									"character": 21
								}
							]
						},
						{
							"id": 1124,
							"name": "setProxyAllowance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1125,
									"name": "setProxyAllowance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1126,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1127,
											"name": "userAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1128,
											"name": "proxyAllowance",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/stores/balance_proxy_allowance_lazy_store.ts",
									"line": 67,
									"character": 28
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1103
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1133,
								1116,
								1129,
								1107,
								1120,
								1111,
								1124
							]
						}
					],
					"sources": [
						{
							"fileName": "src/stores/balance_proxy_allowance_lazy_store.ts",
							"line": 11,
							"character": 46
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1102
					]
				}
			],
			"sources": [
				{
					"fileName": "src/stores/balance_proxy_allowance_lazy_store.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1427,
			"name": "\"src/stores/order_filled_cancelled_lazy_store\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/stores/order_filled_cancelled_lazy_store.ts",
			"children": [
				{
					"id": 1428,
					"name": "OrderFilledCancelledLazyStore",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Copy on read store for filled/cancelled taker amounts"
					},
					"children": [
						{
							"id": 1429,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1430,
									"name": "new OrderFilledCancelledLazyStore",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1431,
											"name": "exchange",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ExchangeWrapper",
												"id": 1223
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OrderFilledCancelledLazyStore",
										"id": 1428
									}
								}
							],
							"sources": [
								{
									"fileName": "src/stores/order_filled_cancelled_lazy_store.ts",
									"line": 18,
									"character": 6
								}
							]
						},
						{
							"id": 1452,
							"name": "deleteAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1453,
									"name": "deleteAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/stores/order_filled_cancelled_lazy_store.ts",
									"line": 58,
									"character": 20
								}
							]
						},
						{
							"id": 1449,
							"name": "deleteCancelledTakerAmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1450,
									"name": "deleteCancelledTakerAmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1451,
											"name": "orderHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/stores/order_filled_cancelled_lazy_store.ts",
									"line": 55,
									"character": 37
								}
							]
						},
						{
							"id": 1439,
							"name": "deleteFilledTakerAmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1440,
									"name": "deleteFilledTakerAmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1441,
											"name": "orderHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/stores/order_filled_cancelled_lazy_store.ts",
									"line": 38,
									"character": 34
								}
							]
						},
						{
							"id": 1442,
							"name": "getCancelledTakerAmountAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1443,
									"name": "getCancelledTakerAmountAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1444,
											"name": "orderHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/stores/order_filled_cancelled_lazy_store.ts",
									"line": 41,
									"character": 45
								}
							]
						},
						{
							"id": 1432,
							"name": "getFilledTakerAmountAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1433,
									"name": "getFilledTakerAmountAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1434,
											"name": "orderHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/stores/order_filled_cancelled_lazy_store.ts",
									"line": 24,
									"character": 42
								}
							]
						},
						{
							"id": 1445,
							"name": "setCancelledTakerAmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1446,
									"name": "setCancelledTakerAmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1447,
											"name": "orderHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1448,
											"name": "cancelledTakerAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/stores/order_filled_cancelled_lazy_store.ts",
									"line": 52,
									"character": 34
								}
							]
						},
						{
							"id": 1435,
							"name": "setFilledTakerAmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1436,
									"name": "setFilledTakerAmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1437,
											"name": "orderHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1438,
											"name": "filledTakerAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/stores/order_filled_cancelled_lazy_store.ts",
									"line": 35,
									"character": 31
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1429
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1452,
								1449,
								1439,
								1442,
								1432,
								1445,
								1435
							]
						}
					],
					"sources": [
						{
							"fileName": "src/stores/order_filled_cancelled_lazy_store.ts",
							"line": 11,
							"character": 42
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1428
					]
				}
			],
			"sources": [
				{
					"fileName": "src/stores/order_filled_cancelled_lazy_store.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"src/types\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/types.ts",
			"children": [
				{
					"id": 522,
					"name": "AbiType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 524,
							"name": "Constructor",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 440,
									"character": 15
								}
							],
							"defaultValue": "\"constructor\""
						},
						{
							"id": 525,
							"name": "Event",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 441,
									"character": 9
								}
							],
							"defaultValue": "\"event\""
						},
						{
							"id": 526,
							"name": "Fallback",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 442,
									"character": 12
								}
							],
							"defaultValue": "\"fallback\""
						},
						{
							"id": 523,
							"name": "Function",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 439,
									"character": 12
								}
							],
							"defaultValue": "\"function\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								524,
								525,
								526,
								523
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 438,
							"character": 19
						}
					]
				},
				{
					"id": 491,
					"name": "BlockParamLiteral",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 492,
							"name": "Latest",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 363,
									"character": 10
								}
							],
							"defaultValue": "\"latest\""
						},
						{
							"id": 493,
							"name": "Pending",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 364,
									"character": 11
								}
							],
							"defaultValue": "\"pending\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								492,
								493
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 362,
							"character": 29
						}
					]
				},
				{
					"id": 369,
					"name": "ExchangeContractErrCodes",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 374,
							"name": "ERROR_CANCEL_EXPIRED",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 217,
									"character": 24
								}
							]
						},
						{
							"id": 375,
							"name": "ERROR_CANCEL_NO_VALUE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 218,
									"character": 25
								}
							]
						},
						{
							"id": 373,
							"name": "ERROR_FILL_BALANCE_ALLOWANCE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 216,
									"character": 32
								}
							]
						},
						{
							"id": 370,
							"name": "ERROR_FILL_EXPIRED",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 213,
									"character": 22
								}
							]
						},
						{
							"id": 371,
							"name": "ERROR_FILL_NO_VALUE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 214,
									"character": 23
								}
							]
						},
						{
							"id": 372,
							"name": "ERROR_FILL_TRUNCATION",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 215,
									"character": 25
								}
							]
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								374,
								375,
								373,
								370,
								371,
								372
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 212,
							"character": 36
						}
					]
				},
				{
					"id": 376,
					"name": "ExchangeContractErrs",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 398,
							"name": "BatchOrdersMustHaveAtLeastOneItem",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 243,
									"character": 37
								}
							],
							"defaultValue": "\"BATCH_ORDERS_MUST_HAVE_AT_LEAST_ONE_ITEM\""
						},
						{
							"id": 397,
							"name": "BatchOrdersMustHaveSameExchangeAddress",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 242,
									"character": 42
								}
							],
							"defaultValue": "\"BATCH_ORDERS_MUST_HAVE_SAME_EXCHANGE_ADDRESS\""
						},
						{
							"id": 384,
							"name": "FillBalanceAllowanceError",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 229,
									"character": 29
								}
							],
							"defaultValue": "\"FILL_BALANCE_ALLOWANCE_ERROR\""
						},
						{
							"id": 388,
							"name": "InsufficientMakerAllowance",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 233,
									"character": 30
								}
							],
							"defaultValue": "\"INSUFFICIENT_MAKER_ALLOWANCE\""
						},
						{
							"id": 387,
							"name": "InsufficientMakerBalance",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 232,
									"character": 28
								}
							],
							"defaultValue": "\"INSUFFICIENT_MAKER_BALANCE\""
						},
						{
							"id": 392,
							"name": "InsufficientMakerFeeAllowance",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 237,
									"character": 33
								}
							],
							"defaultValue": "\"INSUFFICIENT_MAKER_FEE_ALLOWANCE\""
						},
						{
							"id": 391,
							"name": "InsufficientMakerFeeBalance",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 236,
									"character": 31
								}
							],
							"defaultValue": "\"INSUFFICIENT_MAKER_FEE_BALANCE\""
						},
						{
							"id": 395,
							"name": "InsufficientRemainingFillAmount",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 240,
									"character": 35
								}
							],
							"defaultValue": "\"INSUFFICIENT_REMAINING_FILL_AMOUNT\""
						},
						{
							"id": 386,
							"name": "InsufficientTakerAllowance",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 231,
									"character": 30
								}
							],
							"defaultValue": "\"INSUFFICIENT_TAKER_ALLOWANCE\""
						},
						{
							"id": 385,
							"name": "InsufficientTakerBalance",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 230,
									"character": 28
								}
							],
							"defaultValue": "\"INSUFFICIENT_TAKER_BALANCE\""
						},
						{
							"id": 390,
							"name": "InsufficientTakerFeeAllowance",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 235,
									"character": 33
								}
							],
							"defaultValue": "\"INSUFFICIENT_TAKER_FEE_ALLOWANCE\""
						},
						{
							"id": 389,
							"name": "InsufficientTakerFeeBalance",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 234,
									"character": 31
								}
							],
							"defaultValue": "\"INSUFFICIENT_TAKER_FEE_BALANCE\""
						},
						{
							"id": 394,
							"name": "MultipleMakersInSingleCancelBatchDisallowed",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 239,
									"character": 47
								}
							],
							"defaultValue": "\"MULTIPLE_MAKERS_IN_SINGLE_CANCEL_BATCH_DISALLOWED\""
						},
						{
							"id": 396,
							"name": "MultipleTakerTokensInFillUpToDisallowed",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 241,
									"character": 43
								}
							],
							"defaultValue": "\"MULTIPLE_TAKER_TOKENS_IN_FILL_UP_TO_DISALLOWED\""
						},
						{
							"id": 380,
							"name": "OrderAlreadyCancelledOrFilled",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 225,
									"character": 33
								}
							],
							"defaultValue": "\"ORDER_ALREADY_CANCELLED_OR_FILLED\""
						},
						{
							"id": 379,
							"name": "OrderCancelAmountZero",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 224,
									"character": 25
								}
							],
							"defaultValue": "\"ORDER_CANCEL_AMOUNT_ZERO\""
						},
						{
							"id": 378,
							"name": "OrderCancelExpired",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 223,
									"character": 22
								}
							],
							"defaultValue": "\"ORDER_CANCEL_EXPIRED\""
						},
						{
							"id": 381,
							"name": "OrderFillAmountZero",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 226,
									"character": 23
								}
							],
							"defaultValue": "\"ORDER_FILL_AMOUNT_ZERO\""
						},
						{
							"id": 377,
							"name": "OrderFillExpired",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 222,
									"character": 20
								}
							],
							"defaultValue": "\"ORDER_FILL_EXPIRED\""
						},
						{
							"id": 383,
							"name": "OrderFillRoundingError",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 228,
									"character": 26
								}
							],
							"defaultValue": "\"ORDER_FILL_ROUNDING_ERROR\""
						},
						{
							"id": 382,
							"name": "OrderRemainingFillAmountZero",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 227,
									"character": 32
								}
							],
							"defaultValue": "\"ORDER_REMAINING_FILL_AMOUNT_ZERO\""
						},
						{
							"id": 393,
							"name": "TransactionSenderIsNotFillOrderTaker",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 238,
									"character": 40
								}
							],
							"defaultValue": "\"TRANSACTION_SENDER_IS_NOT_FILL_ORDER_TAKER\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								398,
								397,
								384,
								388,
								387,
								392,
								391,
								395,
								386,
								385,
								390,
								389,
								394,
								396,
								380,
								379,
								378,
								381,
								377,
								383,
								382,
								393
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 221,
							"character": 32
						}
					]
				},
				{
					"id": 481,
					"name": "ExchangeEvents",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 483,
							"name": "LogCancel",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 344,
									"character": 13
								}
							],
							"defaultValue": "\"LogCancel\""
						},
						{
							"id": 484,
							"name": "LogError",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 345,
									"character": 12
								}
							],
							"defaultValue": "\"LogError\""
						},
						{
							"id": 482,
							"name": "LogFill",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 343,
									"character": 11
								}
							],
							"defaultValue": "\"LogFill\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								483,
								484,
								482
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 342,
							"character": 26
						}
					]
				},
				{
					"id": 23,
					"name": "InternalZeroExError",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 24,
							"name": "NoAbiDecoder",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 28,
									"character": 16
								}
							],
							"defaultValue": "\"NO_ABI_DECODER\""
						},
						{
							"id": 25,
							"name": "ZrxNotInTokenRegistry",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 29,
									"character": 25
								}
							],
							"defaultValue": "\"ZRX_NOT_IN_TOKEN_REGISTRY\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								24,
								25
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 27,
							"character": 31
						}
					]
				},
				{
					"id": 364,
					"name": "SolidityTypes",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 365,
							"name": "Address",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 206,
									"character": 11
								}
							],
							"defaultValue": "\"address\""
						},
						{
							"id": 368,
							"name": "Uint",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 209,
									"character": 8
								}
							],
							"defaultValue": "\"uint\""
						},
						{
							"id": 366,
							"name": "Uint256",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 207,
									"character": 11
								}
							],
							"defaultValue": "\"uint256\""
						},
						{
							"id": 367,
							"name": "Uint8",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 208,
									"character": 9
								}
							],
							"defaultValue": "\"uint8\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								365,
								368,
								366,
								367
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 205,
							"character": 25
						}
					]
				},
				{
					"id": 485,
					"name": "TokenEvents",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 487,
							"name": "Approval",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 350,
									"character": 12
								}
							],
							"defaultValue": "\"Approval\""
						},
						{
							"id": 486,
							"name": "Transfer",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 349,
									"character": 12
								}
							],
							"defaultValue": "\"Transfer\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								487,
								486
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 348,
							"character": 23
						}
					]
				},
				{
					"id": 574,
					"name": "TradeSide",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 575,
							"name": "Maker",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 507,
									"character": 9
								}
							],
							"defaultValue": "\"maker\""
						},
						{
							"id": 576,
							"name": "Taker",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 508,
									"character": 9
								}
							],
							"defaultValue": "\"taker\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								575,
								576
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 506,
							"character": 21
						}
					]
				},
				{
					"id": 577,
					"name": "TransferType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 579,
							"name": "Fee",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 513,
									"character": 7
								}
							],
							"defaultValue": "\"fee\""
						},
						{
							"id": 578,
							"name": "Trade",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 512,
									"character": 9
								}
							],
							"defaultValue": "\"trade\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								579,
								578
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 511,
							"character": 24
						}
					]
				},
				{
					"id": 2,
					"name": "ZeroExError",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 12,
							"name": "ContractNotDeployedOnNetwork",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 14,
									"character": 32
								}
							],
							"defaultValue": "\"CONTRACT_NOT_DEPLOYED_ON_NETWORK\""
						},
						{
							"id": 5,
							"name": "EtherTokenContractDoesNotExist",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 7,
									"character": 34
								}
							],
							"defaultValue": "\"ETHER_TOKEN_CONTRACT_DOES_NOT_EXIST\""
						},
						{
							"id": 3,
							"name": "ExchangeContractDoesNotExist",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 5,
									"character": 32
								}
							],
							"defaultValue": "\"EXCHANGE_CONTRACT_DOES_NOT_EXIST\""
						},
						{
							"id": 13,
							"name": "InsufficientAllowanceForTransfer",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 15,
									"character": 36
								}
							],
							"defaultValue": "\"INSUFFICIENT_ALLOWANCE_FOR_TRANSFER\""
						},
						{
							"id": 14,
							"name": "InsufficientBalanceForTransfer",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 16,
									"character": 34
								}
							],
							"defaultValue": "\"INSUFFICIENT_BALANCE_FOR_TRANSFER\""
						},
						{
							"id": 15,
							"name": "InsufficientEthBalanceForDeposit",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 17,
									"character": 36
								}
							],
							"defaultValue": "\"INSUFFICIENT_ETH_BALANCE_FOR_DEPOSIT\""
						},
						{
							"id": 16,
							"name": "InsufficientWEthBalanceForWithdrawal",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 18,
									"character": 40
								}
							],
							"defaultValue": "\"INSUFFICIENT_WETH_BALANCE_FOR_WITHDRAWAL\""
						},
						{
							"id": 17,
							"name": "InvalidJump",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 19,
									"character": 15
								}
							],
							"defaultValue": "\"INVALID_JUMP\""
						},
						{
							"id": 11,
							"name": "InvalidSignature",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 13,
									"character": 20
								}
							],
							"defaultValue": "\"INVALID_SIGNATURE\""
						},
						{
							"id": 19,
							"name": "NoNetworkId",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 21,
									"character": 15
								}
							],
							"defaultValue": "\"NO_NETWORK_ID\""
						},
						{
							"id": 18,
							"name": "OutOfGas",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 20,
									"character": 12
								}
							],
							"defaultValue": "\"OUT_OF_GAS\""
						},
						{
							"id": 21,
							"name": "SubscriptionAlreadyPresent",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 23,
									"character": 30
								}
							],
							"defaultValue": "\"SUBSCRIPTION_ALREADY_PRESENT\""
						},
						{
							"id": 20,
							"name": "SubscriptionNotFound",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 22,
									"character": 24
								}
							],
							"defaultValue": "\"SUBSCRIPTION_NOT_FOUND\""
						},
						{
							"id": 8,
							"name": "TokenContractDoesNotExist",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 10,
									"character": 29
								}
							],
							"defaultValue": "\"TOKEN_CONTRACT_DOES_NOT_EXIST\""
						},
						{
							"id": 7,
							"name": "TokenRegistryContractDoesNotExist",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 9,
									"character": 37
								}
							],
							"defaultValue": "\"TOKEN_REGISTRY_CONTRACT_DOES_NOT_EXIST\""
						},
						{
							"id": 6,
							"name": "TokenTransferProxyContractDoesNotExist",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 8,
									"character": 42
								}
							],
							"defaultValue": "\"TOKEN_TRANSFER_PROXY_CONTRACT_DOES_NOT_EXIST\""
						},
						{
							"id": 22,
							"name": "TransactionMiningTimeout",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 24,
									"character": 28
								}
							],
							"defaultValue": "\"TRANSACTION_MINING_TIMEOUT\""
						},
						{
							"id": 9,
							"name": "UnhandledError",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 11,
									"character": 18
								}
							],
							"defaultValue": "\"UNHANDLED_ERROR\""
						},
						{
							"id": 10,
							"name": "UserHasNoAssociatedAddress",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 12,
									"character": 30
								}
							],
							"defaultValue": "\"USER_HAS_NO_ASSOCIATED_ADDRESSES\""
						},
						{
							"id": 4,
							"name": "ZRXContractDoesNotExist",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 6,
									"character": 27
								}
							],
							"defaultValue": "\"ZRX_CONTRACT_DOES_NOT_EXIST\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								12,
								5,
								3,
								13,
								14,
								15,
								16,
								17,
								11,
								19,
								18,
								21,
								20,
								8,
								7,
								6,
								22,
								9,
								10,
								4
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 4,
							"character": 23
						}
					]
				},
				{
					"id": 437,
					"name": "ApprovalContractEventArgs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 438,
							"name": "_owner",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 294,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 439,
							"name": "_spender",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 295,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 440,
							"name": "_value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 296,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								438,
								439,
								440
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 293,
							"character": 42
						}
					]
				},
				{
					"id": 554,
					"name": "Artifact",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 556,
							"name": "abi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 459,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3.ContractAbi"
							}
						},
						{
							"id": 555,
							"name": "contract_name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 458,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "ArtifactContractName",
								"id": 638
							}
						},
						{
							"id": 557,
							"name": "networks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 460,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 558,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 559,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 560,
													"name": "networkId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 561,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 562,
															"name": "address",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/types.ts",
																	"line": 462,
																	"character": 19
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																562
															]
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 461,
															"character": 28
														}
													]
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 460,
											"character": 13
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								556,
								555,
								557
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 457,
							"character": 25
						}
					]
				},
				{
					"id": 399,
					"name": "ContractEvent",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 405,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 254,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 408,
							"name": "args",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 257,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ContractEventArgs",
								"id": 624
							}
						},
						{
							"id": 403,
							"name": "blockHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 252,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 404,
							"name": "blockNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 253,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 407,
							"name": "event",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 256,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 400,
							"name": "logIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 249,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 402,
							"name": "transactionHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 251,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 401,
							"name": "transactionIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 250,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 406,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 255,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								405,
								408,
								403,
								404,
								407,
								400,
								402,
								401,
								406
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 248,
							"character": 30
						}
					]
				},
				{
					"id": 527,
					"name": "DecodedLogArgs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 528,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 529,
									"name": "argName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ContractEventArg",
								"id": 625
							}
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 445,
							"character": 31
						}
					]
				},
				{
					"id": 30,
					"name": "DecodedLogEvent",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 31,
							"name": "ArgsType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 32,
							"name": "isRemoved",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 48,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 33,
							"name": "log",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 49,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "LogWithDecodedArgs",
								"id": 530,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "ArgsType"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								32,
								33
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 47,
							"character": 32
						}
					]
				},
				{
					"id": 26,
					"name": "ECSignature",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Elliptic Curve signature"
					},
					"children": [
						{
							"id": 28,
							"name": "r",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 37,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29,
							"name": "s",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 38,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27,
							"name": "v",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 36,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								28,
								29,
								27
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 35,
							"character": 28
						}
					]
				},
				{
					"id": 330,
					"name": "EtherTokenContract",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 346,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 347,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 345,
							"name": "abi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/leonidlogvinov/Dev/0x/0x.js/node_modules/web3-typescript-typings/index.d.ts",
									"line": 100,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3.ContractAbi"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractInstance.abi"
							}
						},
						{
							"id": 344,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/leonidlogvinov/Dev/0x/0x.js/node_modules/web3-typescript-typings/index.d.ts",
									"line": 99,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractInstance.address"
							}
						},
						{
							"id": 331,
							"name": "deposit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 188,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 332,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 333,
											"name": "sendTransactionAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 189,
													"character": 28
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 334,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 335,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 336,
																	"name": "txOpts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "TxOpts",
																		"id": 473
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 189,
															"character": 29
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												333
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 188,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 337,
							"name": "withdraw",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 191,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 338,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 339,
											"name": "sendTransactionAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 192,
													"character": 28
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 340,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 341,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 342,
																	"name": "amount",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "BigNumber"
																	}
																},
																{
																	"id": 343,
																	"name": "txOpts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "TxOpts",
																		"id": 473
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 192,
															"character": 29
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												339
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 191,
											"character": 13
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								345,
								344,
								331,
								337
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 187,
							"character": 35
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ContractInstance"
						}
					]
				},
				{
					"id": 34,
					"name": "ExchangeContract",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 243,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 244,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 51,
							"name": "TOKEN_TRANSFER_PROXY_CONTRACT",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 63,
									"character": 33
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 52,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 53,
											"name": "callAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 64,
													"character": 17
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 54,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 55,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 64,
															"character": 18
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												53
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 63,
											"character": 34
										}
									]
								}
							}
						},
						{
							"id": 46,
							"name": "ZRX_TOKEN_CONTRACT",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 60,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 47,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 48,
											"name": "callAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 61,
													"character": 17
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 49,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 50,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 61,
															"character": 18
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												48
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 60,
											"character": 23
										}
									]
								}
							}
						},
						{
							"id": 242,
							"name": "abi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/leonidlogvinov/Dev/0x/0x.js/node_modules/web3-typescript-typings/index.d.ts",
									"line": 100,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3.ContractAbi"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractInstance.abi"
							}
						},
						{
							"id": 241,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/leonidlogvinov/Dev/0x/0x.js/node_modules/web3-typescript-typings/index.d.ts",
									"line": 99,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractInstance.address"
							}
						},
						{
							"id": 160,
							"name": "batchCancelOrders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 110,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 161,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 169,
											"name": "estimateGasAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 113,
													"character": 24
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 170,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 171,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 172,
																	"name": "orderAddresses",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "OrderAddresses",
																			"id": 609
																		}
																	}
																},
																{
																	"id": 173,
																	"name": "orderValues",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "OrderValues",
																			"id": 610
																		}
																	}
																},
																{
																	"id": 174,
																	"name": "cancelTakerTokenAmounts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "BigNumber"
																		}
																	}
																},
																{
																	"id": 175,
																	"name": "txOpts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "TxOpts",
																		"id": 473
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 113,
															"character": 25
														}
													]
												}
											}
										},
										{
											"id": 162,
											"name": "sendTransactionAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 111,
													"character": 28
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 163,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 164,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 165,
																	"name": "orderAddresses",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "OrderAddresses",
																			"id": 609
																		}
																	}
																},
																{
																	"id": 166,
																	"name": "orderValues",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "OrderValues",
																			"id": 610
																		}
																	}
																},
																{
																	"id": 167,
																	"name": "cancelTakerTokenAmounts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "BigNumber"
																		}
																	}
																},
																{
																	"id": 168,
																	"name": "txOpts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "TxOpts",
																		"id": 473
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 111,
															"character": 29
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												169,
												162
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 110,
											"character": 22
										}
									]
								}
							}
						},
						{
							"id": 198,
							"name": "batchFillOrKillOrders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 125,
									"character": 25
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 199,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 210,
											"name": "estimateGasAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 129,
													"character": 24
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 211,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 212,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 213,
																	"name": "orderAddresses",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "OrderAddresses",
																			"id": 609
																		}
																	}
																},
																{
																	"id": 214,
																	"name": "orderValues",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "OrderValues",
																			"id": 610
																		}
																	}
																},
																{
																	"id": 215,
																	"name": "fillTakerTokenAmounts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "BigNumber"
																		}
																	}
																},
																{
																	"id": 216,
																	"name": "v",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "number"
																		}
																	}
																},
																{
																	"id": 217,
																	"name": "r",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																},
																{
																	"id": 218,
																	"name": "s",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																},
																{
																	"id": 219,
																	"name": "txOpts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "TxOpts",
																		"id": 473
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 129,
															"character": 25
														}
													]
												}
											}
										},
										{
											"id": 200,
											"name": "sendTransactionAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 126,
													"character": 28
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 201,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 202,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 203,
																	"name": "orderAddresses",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "OrderAddresses",
																			"id": 609
																		}
																	}
																},
																{
																	"id": 204,
																	"name": "orderValues",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "OrderValues",
																			"id": 610
																		}
																	}
																},
																{
																	"id": 205,
																	"name": "fillTakerTokenAmounts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "BigNumber"
																		}
																	}
																},
																{
																	"id": 206,
																	"name": "v",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "number"
																		}
																	}
																},
																{
																	"id": 207,
																	"name": "r",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																},
																{
																	"id": 208,
																	"name": "s",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																},
																{
																	"id": 209,
																	"name": "txOpts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "TxOpts",
																		"id": 473
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 126,
															"character": 29
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												210,
												200
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 125,
											"character": 26
										}
									]
								}
							}
						},
						{
							"id": 96,
							"name": "batchFillOrders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 83,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 97,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 109,
											"name": "estimateGasAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 88,
													"character": 24
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 110,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 111,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 112,
																	"name": "orderAddresses",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "OrderAddresses",
																			"id": 609
																		}
																	}
																},
																{
																	"id": 113,
																	"name": "orderValues",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "OrderValues",
																			"id": 610
																		}
																	}
																},
																{
																	"id": 114,
																	"name": "fillTakerTokenAmounts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "BigNumber"
																		}
																	}
																},
																{
																	"id": 115,
																	"name": "shouldThrowOnInsufficientBalanceOrAllowance",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 116,
																	"name": "v",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "number"
																		}
																	}
																},
																{
																	"id": 117,
																	"name": "r",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																},
																{
																	"id": 118,
																	"name": "s",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																},
																{
																	"id": 119,
																	"name": "txOpts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "TxOpts",
																		"id": 473
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 88,
															"character": 25
														}
													]
												}
											}
										},
										{
											"id": 98,
											"name": "sendTransactionAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 84,
													"character": 28
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 99,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 100,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 101,
																	"name": "orderAddresses",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "OrderAddresses",
																			"id": 609
																		}
																	}
																},
																{
																	"id": 102,
																	"name": "orderValues",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "OrderValues",
																			"id": 610
																		}
																	}
																},
																{
																	"id": 103,
																	"name": "fillTakerTokenAmounts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "BigNumber"
																		}
																	}
																},
																{
																	"id": 104,
																	"name": "shouldThrowOnInsufficientBalanceOrAllowance",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 105,
																	"name": "v",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "number"
																		}
																	}
																},
																{
																	"id": 106,
																	"name": "r",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																},
																{
																	"id": 107,
																	"name": "s",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																},
																{
																	"id": 108,
																	"name": "txOpts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "TxOpts",
																		"id": 473
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 84,
															"character": 29
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												109,
												98
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 83,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 144,
							"name": "cancelOrder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 103,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 145,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 153,
											"name": "estimateGasAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 106,
													"character": 24
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 154,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 155,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 156,
																	"name": "orderAddresses",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "OrderAddresses",
																		"id": 609
																	}
																},
																{
																	"id": 157,
																	"name": "orderValues",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "OrderValues",
																		"id": 610
																	}
																},
																{
																	"id": 158,
																	"name": "cancelTakerTokenAmount",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "BigNumber"
																	}
																},
																{
																	"id": 159,
																	"name": "txOpts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "TxOpts",
																		"id": 473
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 106,
															"character": 25
														}
													]
												}
											}
										},
										{
											"id": 146,
											"name": "sendTransactionAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 104,
													"character": 28
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 147,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 148,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 149,
																	"name": "orderAddresses",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "OrderAddresses",
																		"id": 609
																	}
																},
																{
																	"id": 150,
																	"name": "orderValues",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "OrderValues",
																		"id": 610
																	}
																},
																{
																	"id": 151,
																	"name": "cancelTakerTokenAmount",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "BigNumber"
																	}
																},
																{
																	"id": 152,
																	"name": "txOpts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "TxOpts",
																		"id": 473
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 104,
															"character": 29
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												153,
												146
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 103,
											"character": 16
										}
									]
								}
							}
						},
						{
							"id": 227,
							"name": "cancelled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 136,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 228,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 229,
											"name": "callAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 137,
													"character": 17
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 230,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 231,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 232,
																	"name": "orderHash",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 233,
																	"name": "defaultBlock",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Web3.BlockParam"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "BigNumber"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 137,
															"character": 18
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												229
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 136,
											"character": 14
										}
									]
								}
							}
						},
						{
							"id": 176,
							"name": "fillOrKillOrder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 117,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 177,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188,
											"name": "estimateGasAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 121,
													"character": 24
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 189,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 190,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 191,
																	"name": "orderAddresses",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "OrderAddresses",
																		"id": 609
																	}
																},
																{
																	"id": 192,
																	"name": "orderValues",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "OrderValues",
																		"id": 610
																	}
																},
																{
																	"id": 193,
																	"name": "fillTakerTokenAmount",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "BigNumber"
																	}
																},
																{
																	"id": 194,
																	"name": "v",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 195,
																	"name": "r",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 196,
																	"name": "s",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 197,
																	"name": "txOpts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "TxOpts",
																		"id": 473
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 121,
															"character": 25
														}
													]
												}
											}
										},
										{
											"id": 178,
											"name": "sendTransactionAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 118,
													"character": 28
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 179,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 180,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 181,
																	"name": "orderAddresses",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "OrderAddresses",
																		"id": 609
																	}
																},
																{
																	"id": 182,
																	"name": "orderValues",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "OrderValues",
																		"id": 610
																	}
																},
																{
																	"id": 183,
																	"name": "fillTakerTokenAmount",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "BigNumber"
																	}
																},
																{
																	"id": 184,
																	"name": "v",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 185,
																	"name": "r",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 186,
																	"name": "s",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 187,
																	"name": "txOpts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "TxOpts",
																		"id": 473
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 118,
															"character": 29
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												188,
												178
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 117,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 72,
							"name": "fillOrder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 73,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 73,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 85,
											"name": "estimateGasAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 78,
													"character": 24
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 86,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 87,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 88,
																	"name": "orderAddresses",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "OrderAddresses",
																		"id": 609
																	}
																},
																{
																	"id": 89,
																	"name": "orderValues",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "OrderValues",
																		"id": 610
																	}
																},
																{
																	"id": 90,
																	"name": "fillTakerTokenAmount",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "BigNumber"
																	}
																},
																{
																	"id": 91,
																	"name": "shouldThrowOnInsufficientBalanceOrAllowance",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 92,
																	"name": "v",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 93,
																	"name": "r",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 94,
																	"name": "s",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 95,
																	"name": "txOpts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "TxOpts",
																		"id": 473
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 78,
															"character": 25
														}
													]
												}
											}
										},
										{
											"id": 74,
											"name": "sendTransactionAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 74,
													"character": 28
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 75,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 76,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 77,
																	"name": "orderAddresses",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "OrderAddresses",
																		"id": 609
																	}
																},
																{
																	"id": 78,
																	"name": "orderValues",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "OrderValues",
																		"id": 610
																	}
																},
																{
																	"id": 79,
																	"name": "fillTakerTokenAmount",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "BigNumber"
																	}
																},
																{
																	"id": 80,
																	"name": "shouldThrowOnInsufficientBalanceOrAllowance",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 81,
																	"name": "v",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 82,
																	"name": "r",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 83,
																	"name": "s",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 84,
																	"name": "txOpts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "TxOpts",
																		"id": 473
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 74,
															"character": 29
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												85,
												74
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 73,
											"character": 14
										}
									]
								}
							}
						},
						{
							"id": 120,
							"name": "fillOrdersUpTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 93,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 121,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 133,
											"name": "estimateGasAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 98,
													"character": 24
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 134,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 135,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 136,
																	"name": "orderAddresses",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "OrderAddresses",
																			"id": 609
																		}
																	}
																},
																{
																	"id": 137,
																	"name": "orderValues",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "OrderValues",
																			"id": 610
																		}
																	}
																},
																{
																	"id": 138,
																	"name": "fillTakerTokenAmount",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "BigNumber"
																	}
																},
																{
																	"id": 139,
																	"name": "shouldThrowOnInsufficientBalanceOrAllowance",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 140,
																	"name": "v",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "number"
																		}
																	}
																},
																{
																	"id": 141,
																	"name": "r",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																},
																{
																	"id": 142,
																	"name": "s",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																},
																{
																	"id": 143,
																	"name": "txOpts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "TxOpts",
																		"id": 473
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 98,
															"character": 25
														}
													]
												}
											}
										},
										{
											"id": 122,
											"name": "sendTransactionAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 94,
													"character": 28
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 123,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 124,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 125,
																	"name": "orderAddresses",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "OrderAddresses",
																			"id": 609
																		}
																	}
																},
																{
																	"id": 126,
																	"name": "orderValues",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"name": "OrderValues",
																			"id": 610
																		}
																	}
																},
																{
																	"id": 127,
																	"name": "fillTakerTokenAmount",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "BigNumber"
																	}
																},
																{
																	"id": 128,
																	"name": "shouldThrowOnInsufficientBalanceOrAllowance",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 129,
																	"name": "v",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "number"
																		}
																	}
																},
																{
																	"id": 130,
																	"name": "r",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																},
																{
																	"id": 131,
																	"name": "s",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																},
																{
																	"id": 132,
																	"name": "txOpts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "TxOpts",
																		"id": 473
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 94,
															"character": 29
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												133,
												122
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 93,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 220,
							"name": "filled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 133,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 221,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 222,
											"name": "callAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 134,
													"character": 17
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 223,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 224,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 225,
																	"name": "orderHash",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 226,
																	"name": "defaultBlock",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Web3.BlockParam"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "BigNumber"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 134,
															"character": 18
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												222
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 133,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 234,
							"name": "getOrderHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 139,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 235,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 236,
											"name": "callAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 140,
													"character": 17
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 237,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 238,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 239,
																	"name": "orderAddresses",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "OrderAddresses",
																		"id": 609
																	}
																},
																{
																	"id": 240,
																	"name": "orderValues",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "OrderValues",
																		"id": 610
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 140,
															"character": 18
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												236
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 139,
											"character": 17
										}
									]
								}
							}
						},
						{
							"id": 56,
							"name": "getUnavailableTakerTokenAmount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 66,
									"character": 34
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 58,
											"name": "callAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 67,
													"character": 17
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 59,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 60,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 61,
																	"name": "orderHash",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 62,
																	"name": "defaultBlock",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Web3.BlockParam"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "BigNumber"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 67,
															"character": 18
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												58
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 66,
											"character": 35
										}
									]
								}
							}
						},
						{
							"id": 63,
							"name": "isRoundingError",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 69,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 64,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 65,
											"name": "callAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 70,
													"character": 17
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 66,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 67,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 68,
																	"name": "takerTokenFillAmount",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "BigNumber"
																	}
																},
																{
																	"id": 69,
																	"name": "takerTokenAmount",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "BigNumber"
																	}
																},
																{
																	"id": 70,
																	"name": "makerTokenAmount",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "BigNumber"
																	}
																},
																{
																	"id": 71,
																	"name": "txOpts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "TxOpts",
																		"id": 473
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 70,
															"character": 18
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												65
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 69,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 35,
							"name": "isValidSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 56,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 36,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 37,
											"name": "callAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 57,
													"character": 17
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 38,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 39,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 40,
																	"name": "signerAddressHex",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 41,
																	"name": "dataHex",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 42,
																	"name": "v",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 43,
																	"name": "r",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 44,
																	"name": "s",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 45,
																	"name": "txOpts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "TxOpts",
																		"id": 473
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 57,
															"character": 18
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												37
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 56,
											"character": 21
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								51,
								46,
								242,
								241,
								160,
								198,
								96,
								144,
								227,
								176,
								72,
								120,
								220,
								234,
								56,
								63,
								35
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 55,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ContractInstance"
						}
					]
				},
				{
					"id": 503,
					"name": "ExchangeContractByAddress",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 504,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 505,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ExchangeContract",
								"id": 34
							}
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 396,
							"character": 42
						}
					]
				},
				{
					"id": 488,
					"name": "IndexedFilterValues",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 489,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 490,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ContractEventArg",
								"id": 625
							}
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 355,
							"character": 36
						}
					]
				},
				{
					"id": 506,
					"name": "JSONRPCPayload",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 508,
							"name": "method",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 402,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 507,
							"name": "params",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 401,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								508,
								507
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 400,
							"character": 31
						}
					]
				},
				{
					"id": 421,
					"name": "LogCancelContractEventArgs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 426,
							"name": "cancelledMakerTokenAmount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 278,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 427,
							"name": "cancelledTakerTokenAmount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 279,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 423,
							"name": "feeRecipient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 275,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 422,
							"name": "maker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 274,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 424,
							"name": "makerToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 276,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 429,
							"name": "orderHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 281,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 425,
							"name": "takerToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 277,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 428,
							"name": "tokens",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 280,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								426,
								427,
								423,
								422,
								424,
								429,
								425,
								428
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 273,
							"character": 43
						}
					]
				},
				{
					"id": 430,
					"name": "LogErrorContractEventArgs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 431,
							"name": "errorId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 284,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 432,
							"name": "orderHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 285,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								431,
								432
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 283,
							"character": 42
						}
					]
				},
				{
					"id": 409,
					"name": "LogFillContractEventArgs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 412,
							"name": "feeRecipient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 263,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 415,
							"name": "filledMakerTokenAmount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 266,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 416,
							"name": "filledTakerTokenAmount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 267,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 410,
							"name": "maker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 261,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 413,
							"name": "makerToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 264,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 420,
							"name": "orderHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 271,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 417,
							"name": "paidMakerFee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 268,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 418,
							"name": "paidTakerFee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 269,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 411,
							"name": "taker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 262,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 414,
							"name": "takerToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 265,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 419,
							"name": "tokens",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 270,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								412,
								415,
								416,
								410,
								413,
								420,
								417,
								418,
								411,
								414,
								419
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 260,
							"character": 41
						}
					]
				},
				{
					"id": 530,
					"name": "LogWithDecodedArgs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 531,
							"name": "ArgsType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 539,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/leonidlogvinov/Dev/0x/0x.js/node_modules/web3-typescript-typings/index.d.ts",
									"line": 371,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LogEntry.address"
							}
						},
						{
							"id": 533,
							"name": "args",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/leonidlogvinov/Dev/0x/0x.js/node_modules/web3-typescript-typings/index.d.ts",
									"line": 119,
									"character": 16
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "ArgsType"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "DecodedLogEntry.args"
							}
						},
						{
							"id": 537,
							"name": "blockHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/leonidlogvinov/Dev/0x/0x.js/node_modules/web3-typescript-typings/index.d.ts",
									"line": 369,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LogEntry.blockHash"
							}
						},
						{
							"id": 538,
							"name": "blockNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/leonidlogvinov/Dev/0x/0x.js/node_modules/web3-typescript-typings/index.d.ts",
									"line": 370,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LogEntry.blockNumber"
							}
						},
						{
							"id": 540,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/leonidlogvinov/Dev/0x/0x.js/node_modules/web3-typescript-typings/index.d.ts",
									"line": 372,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LogEntry.data"
							}
						},
						{
							"id": 532,
							"name": "event",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/leonidlogvinov/Dev/0x/0x.js/node_modules/web3-typescript-typings/index.d.ts",
									"line": 118,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "DecodedLogEntry.event"
							}
						},
						{
							"id": 534,
							"name": "logIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/leonidlogvinov/Dev/0x/0x.js/node_modules/web3-typescript-typings/index.d.ts",
									"line": 366,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LogEntry.logIndex"
							}
						},
						{
							"id": 541,
							"name": "topics",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/leonidlogvinov/Dev/0x/0x.js/node_modules/web3-typescript-typings/index.d.ts",
									"line": 373,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LogEntry.topics"
							}
						},
						{
							"id": 536,
							"name": "transactionHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/leonidlogvinov/Dev/0x/0x.js/node_modules/web3-typescript-typings/index.d.ts",
									"line": 368,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LogEntry.transactionHash"
							}
						},
						{
							"id": 535,
							"name": "transactionIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/leonidlogvinov/Dev/0x/0x.js/node_modules/web3-typescript-typings/index.d.ts",
									"line": 367,
									"character": 28
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "LogEntry.transactionIndex"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								539,
								533,
								537,
								538,
								540,
								532,
								534,
								541,
								536,
								535
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 449,
							"character": 35
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "DecodedLogEntry",
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "ArgsType"
								}
							]
						}
					]
				},
				{
					"id": 565,
					"name": "MethodOpts",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 566,
							"name": "defaultBlock",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 484,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3.BlockParam"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								566
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 483,
							"character": 27
						}
					]
				},
				{
					"id": 441,
					"name": "Order",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 451,
							"name": "exchangeContractAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 312,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 453,
							"name": "expirationUnixTimestampSec",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 314,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 452,
							"name": "feeRecipient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 313,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 442,
							"name": "maker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 303,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 444,
							"name": "makerFee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 305,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 448,
							"name": "makerTokenAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 309,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 446,
							"name": "makerTokenAmount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 307,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 450,
							"name": "salt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 311,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 443,
							"name": "taker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 304,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 445,
							"name": "takerFee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 306,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 449,
							"name": "takerTokenAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 310,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 447,
							"name": "takerTokenAmount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 308,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								451,
								453,
								452,
								442,
								444,
								448,
								446,
								450,
								443,
								445,
								449,
								447
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 302,
							"character": 22
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "SignedOrder",
							"id": 454
						}
					]
				},
				{
					"id": 497,
					"name": "OrderCancellationRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 498,
							"name": "order",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 377,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Order",
										"id": 441
									},
									{
										"type": "reference",
										"name": "SignedOrder",
										"id": 454
									}
								]
							}
						},
						{
							"id": 499,
							"name": "takerTokenCancelAmount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 378,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								498,
								499
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 376,
							"character": 41
						}
					]
				},
				{
					"id": 500,
					"name": "OrderFillRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 501,
							"name": "signedOrder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 382,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "SignedOrder",
								"id": 454
							}
						},
						{
							"id": 502,
							"name": "takerTokenFillAmount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 383,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								501,
								502
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 381,
							"character": 33
						}
					]
				},
				{
					"id": 580,
					"name": "OrderRelevantState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 586,
							"name": "cancelledTakerTokenAmount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 522,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 585,
							"name": "filledTakerTokenAmount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 521,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 581,
							"name": "makerBalance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 517,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 583,
							"name": "makerFeeBalance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 519,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 584,
							"name": "makerFeeProxyAllowance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 520,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 582,
							"name": "makerProxyAllowance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 518,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 587,
							"name": "remainingFillableMakerTokenAmount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 523,
									"character": 37
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 588,
							"name": "remainingFillableTakerTokenAmount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 524,
									"character": 37
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								586,
								585,
								581,
								583,
								584,
								582,
								587,
								588
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 516,
							"character": 35
						}
					]
				},
				{
					"id": 593,
					"name": "OrderStateInvalid",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 596,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 536,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "ORDER_FILL_EXPIRED"
									},
									{
										"type": "stringLiteral",
										"value": "ORDER_CANCEL_EXPIRED"
									},
									{
										"type": "stringLiteral",
										"value": "ORDER_CANCEL_AMOUNT_ZERO"
									},
									{
										"type": "stringLiteral",
										"value": "ORDER_ALREADY_CANCELLED_OR_FILLED"
									},
									{
										"type": "stringLiteral",
										"value": "ORDER_FILL_AMOUNT_ZERO"
									},
									{
										"type": "stringLiteral",
										"value": "ORDER_REMAINING_FILL_AMOUNT_ZERO"
									},
									{
										"type": "stringLiteral",
										"value": "ORDER_FILL_ROUNDING_ERROR"
									},
									{
										"type": "stringLiteral",
										"value": "FILL_BALANCE_ALLOWANCE_ERROR"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_TAKER_BALANCE"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_TAKER_ALLOWANCE"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_MAKER_BALANCE"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_MAKER_ALLOWANCE"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_TAKER_FEE_BALANCE"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_TAKER_FEE_ALLOWANCE"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_MAKER_FEE_BALANCE"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_MAKER_FEE_ALLOWANCE"
									},
									{
										"type": "stringLiteral",
										"value": "TRANSACTION_SENDER_IS_NOT_FILL_ORDER_TAKER"
									},
									{
										"type": "stringLiteral",
										"value": "MULTIPLE_MAKERS_IN_SINGLE_CANCEL_BATCH_DISALLOWED"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_REMAINING_FILL_AMOUNT"
									},
									{
										"type": "stringLiteral",
										"value": "MULTIPLE_TAKER_TOKENS_IN_FILL_UP_TO_DISALLOWED"
									},
									{
										"type": "stringLiteral",
										"value": "BATCH_ORDERS_MUST_HAVE_SAME_EXCHANGE_ADDRESS"
									},
									{
										"type": "stringLiteral",
										"value": "BATCH_ORDERS_MUST_HAVE_AT_LEAST_ONE_ITEM"
									}
								]
							}
						},
						{
							"id": 594,
							"name": "isValid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 534,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "false"
							}
						},
						{
							"id": 595,
							"name": "orderHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 535,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								596,
								594,
								595
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 533,
							"character": 34
						}
					]
				},
				{
					"id": 589,
					"name": "OrderStateValid",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 590,
							"name": "isValid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 528,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "true"
							}
						},
						{
							"id": 591,
							"name": "orderHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 529,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 592,
							"name": "orderRelevantState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 530,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "OrderRelevantState",
								"id": 580
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								590,
								591,
								592
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 527,
							"character": 32
						}
					]
				},
				{
					"id": 509,
					"name": "OrderStateWatcherConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 513,
							"name": "cleanupJobIntervalMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 416,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 511,
							"name": "eventPollingIntervalMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 414,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 512,
							"name": "expirationMarginMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 415,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 510,
							"name": "orderExpirationCheckingIntervalMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 413,
									"character": 37
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								513,
								511,
								512,
								510
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 412,
							"character": 40
						}
					]
				},
				{
					"id": 570,
					"name": "OrderTransactionOpts",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 573,
							"name": "gasLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 493,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TransactionOpts.gasLimit",
								"id": 569
							}
						},
						{
							"id": 572,
							"name": "gasPrice",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 492,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TransactionOpts.gasPrice",
								"id": 568
							}
						},
						{
							"id": 571,
							"name": "shouldValidate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 501,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "true"
									},
									{
										"type": "intrinsic",
										"name": "false"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								573,
								572,
								571
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 500,
							"character": 37
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "TransactionOpts",
							"id": 567
						}
					]
				},
				{
					"id": 454,
					"name": "SignedOrder",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 455,
							"name": "ecSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 318,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "ECSignature",
								"id": 26
							}
						},
						{
							"id": 465,
							"name": "exchangeContractAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 312,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Order.exchangeContractAddress",
								"id": 451
							}
						},
						{
							"id": 467,
							"name": "expirationUnixTimestampSec",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 314,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Order.expirationUnixTimestampSec",
								"id": 453
							}
						},
						{
							"id": 466,
							"name": "feeRecipient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 313,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Order.feeRecipient",
								"id": 452
							}
						},
						{
							"id": 456,
							"name": "maker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 303,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Order.maker",
								"id": 442
							}
						},
						{
							"id": 458,
							"name": "makerFee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 305,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Order.makerFee",
								"id": 444
							}
						},
						{
							"id": 462,
							"name": "makerTokenAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 309,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Order.makerTokenAddress",
								"id": 448
							}
						},
						{
							"id": 460,
							"name": "makerTokenAmount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 307,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Order.makerTokenAmount",
								"id": 446
							}
						},
						{
							"id": 464,
							"name": "salt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 311,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Order.salt",
								"id": 450
							}
						},
						{
							"id": 457,
							"name": "taker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 304,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Order.taker",
								"id": 443
							}
						},
						{
							"id": 459,
							"name": "takerFee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 306,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Order.takerFee",
								"id": 445
							}
						},
						{
							"id": 463,
							"name": "takerTokenAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 310,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Order.takerTokenAddress",
								"id": 449
							}
						},
						{
							"id": 461,
							"name": "takerTokenAmount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 308,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Order.takerTokenAmount",
								"id": 447
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								455,
								465,
								467,
								466,
								456,
								458,
								462,
								460,
								464,
								457,
								459,
								463,
								461
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 317,
							"character": 28
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Order",
							"id": 441
						}
					]
				},
				{
					"id": 494,
					"name": "SubscriptionOpts",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 495,
							"name": "fromBlock",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 370,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "BlockParam",
								"id": 628
							}
						},
						{
							"id": 496,
							"name": "toBlock",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 371,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "BlockParam",
								"id": 628
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								495,
								496
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 369,
							"character": 33
						}
					]
				},
				{
					"id": 468,
					"name": "Token",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 470,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 326,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 472,
							"name": "decimals",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 328,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 469,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 325,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 471,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 327,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								470,
								472,
								469,
								471
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 324,
							"character": 22
						}
					]
				},
				{
					"id": 478,
					"name": "TokenAddressBySymbol",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 479,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 480,
									"name": "symbol",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 338,
							"character": 37
						}
					]
				},
				{
					"id": 245,
					"name": "TokenContract",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 288,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 289,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 287,
							"name": "abi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/leonidlogvinov/Dev/0x/0x.js/node_modules/web3-typescript-typings/index.d.ts",
									"line": 100,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3.ContractAbi"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractInstance.abi"
							}
						},
						{
							"id": 286,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/leonidlogvinov/Dev/0x/0x.js/node_modules/web3-typescript-typings/index.d.ts",
									"line": 99,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractInstance.address"
							}
						},
						{
							"id": 253,
							"name": "allowance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 148,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 254,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 255,
											"name": "callAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 149,
													"character": 17
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 256,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 257,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 258,
																	"name": "ownerAddress",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 259,
																	"name": "allowedAddress",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 260,
																	"name": "defaultBlock",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Web3.BlockParam"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "BigNumber"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 149,
															"character": 18
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												255
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 148,
											"character": 14
										}
									]
								}
							}
						},
						{
							"id": 278,
							"name": "approve",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 160,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 279,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 280,
											"name": "sendTransactionAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 161,
													"character": 28
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 281,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 282,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 283,
																	"name": "proxyAddress",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 284,
																	"name": "amountInBaseUnits",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "BigNumber"
																	}
																},
																{
																	"id": 285,
																	"name": "txOpts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "TxOpts",
																		"id": 473
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 161,
															"character": 29
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												280
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 160,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 246,
							"name": "balanceOf",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 145,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 247,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 248,
											"name": "callAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 146,
													"character": 17
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 249,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 250,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 251,
																	"name": "address",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 252,
																	"name": "defaultBlock",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Web3.BlockParam"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "BigNumber"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 146,
															"character": 18
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												248
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 145,
											"character": 14
										}
									]
								}
							}
						},
						{
							"id": 261,
							"name": "transfer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 152,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 262,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 263,
											"name": "sendTransactionAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 153,
													"character": 28
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 264,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 265,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 266,
																	"name": "toAddress",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 267,
																	"name": "amountInBaseUnits",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "BigNumber"
																	}
																},
																{
																	"id": 268,
																	"name": "txOpts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "TxOpts",
																		"id": 473
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 153,
															"character": 29
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												263
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 152,
											"character": 13
										}
									]
								}
							}
						},
						{
							"id": 269,
							"name": "transferFrom",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 156,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 270,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 271,
											"name": "sendTransactionAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 157,
													"character": 28
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 272,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 273,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 274,
																	"name": "fromAddress",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 275,
																	"name": "toAddress",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 276,
																	"name": "amountInBaseUnits",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "BigNumber"
																	}
																},
																{
																	"id": 277,
																	"name": "txOpts",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "TxOpts",
																		"id": 473
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 157,
															"character": 29
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												271
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 156,
											"character": 17
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								287,
								286,
								253,
								278,
								246,
								261,
								269
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 144,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ContractInstance"
						}
					]
				},
				{
					"id": 290,
					"name": "TokenRegistryContract",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 328,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 329,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 327,
							"name": "abi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/leonidlogvinov/Dev/0x/0x.js/node_modules/web3-typescript-typings/index.d.ts",
									"line": 100,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3.ContractAbi"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractInstance.abi"
							}
						},
						{
							"id": 326,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/leonidlogvinov/Dev/0x/0x.js/node_modules/web3-typescript-typings/index.d.ts",
									"line": 99,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractInstance.address"
							}
						},
						{
							"id": 308,
							"name": "getTokenAddressByName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 176,
									"character": 25
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 309,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 310,
											"name": "callAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 177,
													"character": 17
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 311,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 312,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 313,
																	"name": "name",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 177,
															"character": 18
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												310
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 176,
											"character": 26
										}
									]
								}
							}
						},
						{
							"id": 302,
							"name": "getTokenAddressBySymbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 173,
									"character": 27
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 303,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 304,
											"name": "callAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 174,
													"character": 17
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 305,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 306,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 307,
																	"name": "symbol",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 174,
															"character": 18
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												304
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 173,
											"character": 28
										}
									]
								}
							}
						},
						{
							"id": 297,
							"name": "getTokenAddresses",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 170,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 298,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 299,
											"name": "callAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 171,
													"character": 17
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 300,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 301,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 171,
															"character": 18
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												299
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 170,
											"character": 22
										}
									]
								}
							}
						},
						{
							"id": 320,
							"name": "getTokenByName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 182,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 321,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 322,
											"name": "callAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 183,
													"character": 17
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 323,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 324,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 325,
																	"name": "name",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "TokenMetadata",
																		"id": 626
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 183,
															"character": 18
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												322
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 182,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 314,
							"name": "getTokenBySymbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 179,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 315,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 316,
											"name": "callAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 180,
													"character": 17
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 317,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 318,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 319,
																	"name": "symbol",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "TokenMetadata",
																		"id": 626
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 180,
															"character": 18
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												316
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 179,
											"character": 21
										}
									]
								}
							}
						},
						{
							"id": 291,
							"name": "getTokenMetaData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 167,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 292,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 293,
											"name": "callAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 168,
													"character": 17
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 294,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 295,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 296,
																	"name": "address",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "TokenMetadata",
																		"id": 626
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 168,
															"character": 18
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												293
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 167,
											"character": 21
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								327,
								326,
								308,
								302,
								297,
								320,
								314,
								291
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 166,
							"character": 38
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ContractInstance"
						}
					]
				},
				{
					"id": 348,
					"name": "TokenTransferProxyContract",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 362,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 363,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 361,
							"name": "abi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/leonidlogvinov/Dev/0x/0x.js/node_modules/web3-typescript-typings/index.d.ts",
									"line": 100,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3.ContractAbi"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractInstance.abi"
							}
						},
						{
							"id": 360,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/leonidlogvinov/Dev/0x/0x.js/node_modules/web3-typescript-typings/index.d.ts",
									"line": 99,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ContractInstance.address"
							}
						},
						{
							"id": 354,
							"name": "authorized",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 200,
									"character": 14
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 355,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 356,
											"name": "callAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 201,
													"character": 17
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 357,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 358,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 359,
																	"name": "address",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 201,
															"character": 18
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												356
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 200,
											"character": 15
										}
									]
								}
							}
						},
						{
							"id": 349,
							"name": "getAuthorizedAddresses",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 197,
									"character": 26
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 350,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 351,
											"name": "callAsync",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/types.ts",
													"line": 198,
													"character": 17
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 352,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 353,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/types.ts",
															"line": 198,
															"character": 18
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												351
											]
										}
									],
									"sources": [
										{
											"fileName": "src/types.ts",
											"line": 197,
											"character": 27
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								361,
								360,
								354,
								349
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 196,
							"character": 43
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ContractInstance"
						}
					]
				},
				{
					"id": 567,
					"name": "TransactionOpts",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 569,
							"name": "gasLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 493,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 568,
							"name": "gasPrice",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 492,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								569,
								568
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 491,
							"character": 32
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "OrderTransactionOpts",
							"id": 570
						}
					]
				},
				{
					"id": 597,
					"name": "TransactionReceipt",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 598,
							"name": "blockHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 544,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 599,
							"name": "blockNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 545,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 607,
							"name": "contractAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 553,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 605,
							"name": "cumulativeGasUsed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 551,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 602,
							"name": "from",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 548,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 606,
							"name": "gasUsed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 552,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 608,
							"name": "logs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 554,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "LogEntry"
								}
							}
						},
						{
							"id": 604,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 550,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "null"
									},
									{
										"type": "unknown",
										"name": "0"
									},
									{
										"type": "unknown",
										"name": "1"
									}
								]
							}
						},
						{
							"id": 603,
							"name": "to",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 549,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 600,
							"name": "transactionHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 546,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 601,
							"name": "transactionIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 547,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								598,
								599,
								607,
								605,
								602,
								606,
								608,
								604,
								603,
								600,
								601
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 543,
							"character": 35
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "TransactionReceiptWithDecodedLogs",
							"id": 542
						}
					]
				},
				{
					"id": 542,
					"name": "TransactionReceiptWithDecodedLogs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 544,
							"name": "blockHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 544,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TransactionReceipt.blockHash",
								"id": 598
							}
						},
						{
							"id": 545,
							"name": "blockNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 545,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TransactionReceipt.blockNumber",
								"id": 599
							}
						},
						{
							"id": 553,
							"name": "contractAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 553,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TransactionReceipt.contractAddress",
								"id": 607
							}
						},
						{
							"id": 551,
							"name": "cumulativeGasUsed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 551,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TransactionReceipt.cumulativeGasUsed",
								"id": 605
							}
						},
						{
							"id": 548,
							"name": "from",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 548,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TransactionReceipt.from",
								"id": 602
							}
						},
						{
							"id": 552,
							"name": "gasUsed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 552,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TransactionReceipt.gasUsed",
								"id": 606
							}
						},
						{
							"id": 543,
							"name": "logs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 452,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "LogWithDecodedArgs",
												"id": 530,
												"typeArguments": [
													{
														"type": "reference",
														"name": "DecodedLogArgs",
														"id": 527
													}
												]
											},
											{
												"type": "reference",
												"name": "LogEntry"
											}
										]
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "TransactionReceipt.logs",
								"id": 608
							}
						},
						{
							"id": 550,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 550,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "null"
									},
									{
										"type": "unknown",
										"name": "0"
									},
									{
										"type": "unknown",
										"name": "1"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TransactionReceipt.status",
								"id": 604
							}
						},
						{
							"id": 549,
							"name": "to",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 549,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TransactionReceipt.to",
								"id": 603
							}
						},
						{
							"id": 546,
							"name": "transactionHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 546,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TransactionReceipt.transactionHash",
								"id": 600
							}
						},
						{
							"id": 547,
							"name": "transactionIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 547,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TransactionReceipt.transactionIndex",
								"id": 601
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								544,
								545,
								553,
								551,
								548,
								552,
								543,
								550,
								549,
								546,
								547
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 451,
							"character": 50
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "TransactionReceipt",
							"id": 597
						}
					]
				},
				{
					"id": 433,
					"name": "TransferContractEventArgs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 434,
							"name": "_from",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 289,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 435,
							"name": "_to",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 290,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 436,
							"name": "_value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 291,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								434,
								435,
								436
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 288,
							"character": 42
						}
					]
				},
				{
					"id": 473,
					"name": "TxOpts",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 474,
							"name": "from",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 332,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 475,
							"name": "gas",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 333,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 477,
							"name": "gasPrice",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 335,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 476,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 334,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								474,
								475,
								477,
								476
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 331,
							"character": 23
						}
					]
				},
				{
					"id": 563,
					"name": "ValidateOrderFillableOpts",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 564,
							"name": "expectedFillTakerTokenAmount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 474,
									"character": 32
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								564
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 473,
							"character": 42
						}
					]
				},
				{
					"id": 514,
					"name": "ZeroExConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 519,
							"name": "etherTokenContractAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 433,
									"character": 29
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 517,
							"name": "exchangeContractAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 431,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 516,
							"name": "gasPrice",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 430,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 515,
							"name": "networkId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 429,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 521,
							"name": "orderWatcherConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 435,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "OrderStateWatcherConfig",
								"id": 509
							}
						},
						{
							"id": 518,
							"name": "tokenRegistryContractAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 432,
									"character": 32
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 520,
							"name": "tokenTransferProxyContractAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 434,
									"character": 37
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								519,
								517,
								516,
								515,
								521,
								518,
								520
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 428,
							"character": 29
						}
					]
				},
				{
					"id": 638,
					"name": "ArtifactContractName",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 455,
							"character": 32
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "ZRX"
							},
							{
								"type": "stringLiteral",
								"value": "TokenTransferProxy"
							},
							{
								"type": "stringLiteral",
								"value": "TokenRegistry"
							},
							{
								"type": "stringLiteral",
								"value": "Token"
							},
							{
								"type": "stringLiteral",
								"value": "Exchange"
							},
							{
								"type": "stringLiteral",
								"value": "EtherToken"
							}
						]
					}
				},
				{
					"id": 633,
					"name": "AsyncMethod",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 386,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 634,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 635,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 636,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 386,
									"character": 25
								}
							]
						}
					}
				},
				{
					"id": 628,
					"name": "BlockParam",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 367,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "latest"
									},
									{
										"type": "stringLiteral",
										"value": "pending"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 625,
					"name": "ContractEventArg",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 300,
							"character": 28
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"name": "BigNumber"
							}
						]
					}
				},
				{
					"id": 624,
					"name": "ContractEventArgs",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 299,
							"character": 29
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ExchangeContractEventArgs",
								"id": 622
							},
							{
								"type": "reference",
								"name": "TokenContractEventArgs",
								"id": 623
							}
						]
					}
				},
				{
					"id": 627,
					"name": "ContractEvents",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 353,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "Transfer"
									},
									{
										"type": "stringLiteral",
										"value": "Approval"
									}
								]
							},
							{
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "LogFill"
									},
									{
										"type": "stringLiteral",
										"value": "LogCancel"
									},
									{
										"type": "stringLiteral",
										"value": "LogError"
									}
								]
							}
						]
					}
				},
				{
					"id": 629,
					"name": "DoneCallback",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 374,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 630,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 631,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 632,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 374,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 612,
					"name": "EventCallback",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 52,
							"character": 25
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 613,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 614,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 615,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "null"
													},
													{
														"type": "reference",
														"name": "Error"
													}
												]
											}
										},
										{
											"id": 616,
											"name": "log",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "DecodedLogEvent",
												"id": 30,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "ArgsType"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 52,
									"character": 37
								}
							]
						}
					}
				},
				{
					"id": 617,
					"name": "EventWatcherCallback",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 53,
							"character": 32
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 618,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 619,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 620,
											"name": "log",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LogEvent",
												"id": 611
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 53,
									"character": 34
								}
							]
						}
					}
				},
				{
					"id": 622,
					"name": "ExchangeContractEventArgs",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 287,
							"character": 37
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "LogFillContractEventArgs",
								"id": 409
							},
							{
								"type": "reference",
								"name": "LogCancelContractEventArgs",
								"id": 421
							},
							{
								"type": "reference",
								"name": "LogErrorContractEventArgs",
								"id": 430
							}
						]
					}
				},
				{
					"id": 639,
					"name": "FilterObject",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 504,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"name": "FilterObject"
					}
				},
				{
					"id": 611,
					"name": "LogEvent",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 46,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "LogEntryEvent"
					}
				},
				{
					"id": 641,
					"name": "OnOrderStateChangeCallback",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 541,
							"character": 38
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 642,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 643,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 644,
											"name": "orderState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OrderState",
												"id": 640
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 541,
									"character": 40
								}
							]
						}
					}
				},
				{
					"id": 609,
					"name": "OrderAddresses",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 41,
							"character": 26
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 640,
					"name": "OrderState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 539,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "OrderStateValid",
								"id": 589
							},
							{
								"type": "reference",
								"name": "OrderStateInvalid",
								"id": 593
							}
						]
					}
				},
				{
					"id": 610,
					"name": "OrderValues",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 43,
							"character": 23
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"name": "BigNumber"
							},
							{
								"type": "reference",
								"name": "BigNumber"
							},
							{
								"type": "reference",
								"name": "BigNumber"
							},
							{
								"type": "reference",
								"name": "BigNumber"
							},
							{
								"type": "reference",
								"name": "BigNumber"
							},
							{
								"type": "reference",
								"name": "BigNumber"
							}
						]
					}
				},
				{
					"id": 621,
					"name": "RawLog",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 246,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "LogEntry"
					}
				},
				{
					"id": 623,
					"name": "TokenContractEventArgs",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 298,
							"character": 34
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "TransferContractEventArgs",
								"id": 433
							},
							{
								"type": "reference",
								"name": "ApprovalContractEventArgs",
								"id": 437
							}
						]
					}
				},
				{
					"id": 626,
					"name": "TokenMetadata",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 322,
							"character": 25
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"name": "BigNumber"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 637,
					"name": "Web3Provider",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "We re-export the `Web3.Provider` type specified in the Web3 Typescript typings\nsince it is the type of the `provider` argument to the `ZeroEx` constructor.\nIt is however a `Web3` library type, not a native `0x.js` type. To learn more\nabout providers, visit https://0xproject.com/wiki#Web3-Provider-Explained"
					},
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 394,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"name": "Provider"
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						522,
						491,
						369,
						376,
						481,
						23,
						364,
						485,
						574,
						577,
						2
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						437,
						554,
						399,
						527,
						30,
						26,
						330,
						34,
						503,
						488,
						506,
						421,
						430,
						409,
						530,
						565,
						441,
						497,
						500,
						580,
						593,
						589,
						509,
						570,
						454,
						494,
						468,
						478,
						245,
						290,
						348,
						567,
						597,
						542,
						433,
						473,
						563,
						514
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						638,
						633,
						628,
						625,
						624,
						627,
						629,
						612,
						617,
						622,
						639,
						611,
						641,
						609,
						640,
						610,
						621,
						623,
						626,
						637
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 770,
			"name": "\"src/utils/abi_decoder\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/utils/abi_decoder.ts",
			"children": [
				{
					"id": 771,
					"name": "AbiDecoder",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 772,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 773,
									"name": "new AbiDecoder",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 774,
											"name": "abiArrays",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"name": "Web3.AbiDefinition"
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "AbiDecoder",
										"id": 771
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/abi_decoder.ts",
									"line": 19,
									"character": 5
								}
							]
						},
						{
							"id": 775,
							"name": "tryToDecodeLogOrNoop",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 776,
									"name": "tryToDecodeLogOrNoop",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 777,
											"name": "ArgsType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEventArgs",
												"id": 624
											}
										}
									],
									"parameters": [
										{
											"id": 778,
											"name": "log",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LogEntry"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "LogWithDecodedArgs",
												"id": 530,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "ArgsType",
														"constraint": {
															"type": "reference",
															"name": "ContractEventArgs",
															"id": 624
														}
													}
												]
											},
											{
												"type": "reference",
												"name": "RawLog",
												"id": 621
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/abi_decoder.ts",
									"line": 24,
									"character": 31
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								772
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								775
							]
						}
					],
					"sources": [
						{
							"fileName": "src/utils/abi_decoder.ts",
							"line": 8,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						771
					]
				}
			],
			"sources": [
				{
					"fileName": "src/utils/abi_decoder.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 754,
			"name": "\"src/utils/assert\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/utils/assert.ts",
			"children": [
				{
					"id": 755,
					"name": "HEX_REGEX",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils/assert.ts",
							"line": 11,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": " /^0x[0-9A-F]*$/i"
				},
				{
					"id": 756,
					"name": "assert",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 762,
							"name": "isSenderAddressAsync",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 763,
									"name": "isSenderAddressAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 764,
											"name": "variableName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 765,
											"name": "senderAddressHex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 766,
											"name": "web3Wrapper",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3Wrapper",
												"id": 691
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/assert.ts",
									"line": 19,
									"character": 30
								}
							]
						},
						{
							"id": 767,
							"name": "isUserAddressAvailableAsync",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 768,
									"name": "isUserAddressAvailableAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 769,
											"name": "web3Wrapper",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3Wrapper",
												"id": 691
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/assert.ts",
									"line": 27,
									"character": 37
								}
							]
						},
						{
							"id": 757,
							"name": "isValidSignature",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 758,
									"name": "isValidSignature",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 759,
											"name": "orderHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 760,
											"name": "ecSignature",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ECSignature",
												"id": 26
											}
										},
										{
											"id": 761,
											"name": "signerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/assert.ts",
									"line": 15,
									"character": 20
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								762,
								767,
								757
							]
						}
					],
					"sources": [
						{
							"fileName": "src/utils/assert.ts",
							"line": 13,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						755
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						756
					]
				}
			],
			"sources": [
				{
					"fileName": "src/utils/assert.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 779,
			"name": "\"src/utils/constants\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/utils/constants.ts",
			"children": [
				{
					"id": 780,
					"name": "constants",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 787,
							"name": "DEFAULT_BLOCK_POLLING_INTERVAL",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/utils/constants.ts",
									"line": 10,
									"character": 34
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "1000"
						},
						{
							"id": 784,
							"name": "INVALID_JUMP_PATTERN",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/utils/constants.ts",
									"line": 7,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"invalid JUMP at\""
						},
						{
							"id": 783,
							"name": "MAX_DIGITS_IN_UNSIGNED_256_INT",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/utils/constants.ts",
									"line": 6,
									"character": 34
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "78"
						},
						{
							"id": 781,
							"name": "NULL_ADDRESS",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/utils/constants.ts",
									"line": 4,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"0x0000000000000000000000000000000000000000\""
						},
						{
							"id": 785,
							"name": "OUT_OF_GAS_PATTERN",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/utils/constants.ts",
									"line": 8,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"out of gas\""
						},
						{
							"id": 782,
							"name": "TESTRPC_NETWORK_ID",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/utils/constants.ts",
									"line": 5,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "50"
						},
						{
							"id": 786,
							"name": "UNLIMITED_ALLOWANCE_IN_BASE_UNITS",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/utils/constants.ts",
									"line": 9,
									"character": 37
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							},
							"defaultValue": " new BigNumber(2).pow(256).minus(1)"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								787,
								784,
								783,
								781,
								785,
								782,
								786
							]
						}
					],
					"sources": [
						{
							"fileName": "src/utils/constants.ts",
							"line": 3,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						780
					]
				}
			],
			"sources": [
				{
					"fileName": "src/utils/constants.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1094,
			"name": "\"src/utils/decorators\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/utils/decorators.ts",
			"children": [
				{
					"id": 1095,
					"name": "decorators",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1096,
							"name": "contractCallErrorHandler",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1097,
									"name": "contractCallErrorHandler",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Source: https://stackoverflow.com/a/29837695/3546986"
									},
									"parameters": [
										{
											"id": 1098,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 1099,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 1100,
											"name": "descriptor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TypedPropertyDescriptor",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AsyncMethod",
														"id": 633
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "TypedPropertyDescriptor",
										"typeArguments": [
											{
												"type": "reference",
												"name": "AsyncMethod",
												"id": 633
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/decorators.ts",
									"line": 11,
									"character": 28
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								1096
							]
						}
					],
					"sources": [
						{
							"fileName": "src/utils/decorators.ts",
							"line": 7,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1095
					]
				}
			],
			"sources": [
				{
					"fileName": "src/utils/decorators.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1135,
			"name": "\"src/utils/exchange_transfer_simulator\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/utils/exchange_transfer_simulator.ts",
			"children": [
				{
					"id": 1136,
					"name": "FailureReason",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 1137,
							"name": "Balance",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "src/utils/exchange_transfer_simulator.ts",
									"line": 9,
									"character": 11
								}
							],
							"defaultValue": "\"balance\""
						},
						{
							"id": 1138,
							"name": "ProxyAllowance",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "src/utils/exchange_transfer_simulator.ts",
									"line": 10,
									"character": 18
								}
							],
							"defaultValue": "\"proxyAllowance\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								1137,
								1138
							]
						}
					],
					"sources": [
						{
							"fileName": "src/utils/exchange_transfer_simulator.ts",
							"line": 8,
							"character": 18
						}
					]
				},
				{
					"id": 1139,
					"name": "ExchangeTransferSimulator",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1140,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1141,
									"name": "new ExchangeTransferSimulator",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1142,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TokenWrapper",
												"id": 923
											}
										},
										{
											"id": 1143,
											"name": "defaultBlock",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "stringLiteral",
														"value": "latest"
													},
													{
														"type": "stringLiteral",
														"value": "pending"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ExchangeTransferSimulator",
										"id": 1139
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/exchange_transfer_simulator.ts",
									"line": 43,
									"character": 5
								}
							]
						},
						{
							"id": 1144,
							"name": "transferFromAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1145,
									"name": "transferFromAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Simulates transferFrom call performed by a proxy"
									},
									"parameters": [
										{
											"id": 1146,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the token to be transferred"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1147,
											"name": "from",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Owner of the transferred tokens"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1148,
											"name": "to",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Recipient of the transferred tokens"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1149,
											"name": "amountInBaseUnits",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The amount of tokens being transferred"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1150,
											"name": "tradeSide",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Is Maker/Taker transferring"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "stringLiteral",
														"value": "maker"
													},
													{
														"type": "stringLiteral",
														"value": "taker"
													}
												]
											}
										},
										{
											"id": 1151,
											"name": "transferType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Is it a fee payment or a value transfer\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "stringLiteral",
														"value": "trade"
													},
													{
														"type": "stringLiteral",
														"value": "fee"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/exchange_transfer_simulator.ts",
									"line": 57,
									"character": 34
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1140
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1144
							]
						}
					],
					"sources": [
						{
							"fileName": "src/utils/exchange_transfer_simulator.ts",
							"line": 36,
							"character": 38
						}
					]
				},
				{
					"id": 1152,
					"name": "ERR_MSG_MAPPING",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {},
					"children": [
						{
							"id": 1153,
							"name": "__computed",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 1154,
									"name": "__computed",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {},
									"children": [
										{
											"id": 1155,
											"name": "__computed",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/utils/exchange_transfer_simulator.ts",
													"line": 16,
													"character": 32
												},
												{
													"fileName": "src/utils/exchange_transfer_simulator.ts",
													"line": 17,
													"character": 30
												},
												{
													"fileName": "src/utils/exchange_transfer_simulator.ts",
													"line": 20,
													"character": 32
												},
												{
													"fileName": "src/utils/exchange_transfer_simulator.ts",
													"line": 21,
													"character": 30
												},
												{
													"fileName": "src/utils/exchange_transfer_simulator.ts",
													"line": 26,
													"character": 32
												},
												{
													"fileName": "src/utils/exchange_transfer_simulator.ts",
													"line": 27,
													"character": 30
												},
												{
													"fileName": "src/utils/exchange_transfer_simulator.ts",
													"line": 30,
													"character": 32
												},
												{
													"fileName": "src/utils/exchange_transfer_simulator.ts",
													"line": 31,
													"character": 30
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "stringLiteral",
														"value": "ORDER_FILL_EXPIRED"
													},
													{
														"type": "stringLiteral",
														"value": "ORDER_CANCEL_EXPIRED"
													},
													{
														"type": "stringLiteral",
														"value": "ORDER_CANCEL_AMOUNT_ZERO"
													},
													{
														"type": "stringLiteral",
														"value": "ORDER_ALREADY_CANCELLED_OR_FILLED"
													},
													{
														"type": "stringLiteral",
														"value": "ORDER_FILL_AMOUNT_ZERO"
													},
													{
														"type": "stringLiteral",
														"value": "ORDER_REMAINING_FILL_AMOUNT_ZERO"
													},
													{
														"type": "stringLiteral",
														"value": "ORDER_FILL_ROUNDING_ERROR"
													},
													{
														"type": "stringLiteral",
														"value": "FILL_BALANCE_ALLOWANCE_ERROR"
													},
													{
														"type": "stringLiteral",
														"value": "INSUFFICIENT_TAKER_BALANCE"
													},
													{
														"type": "stringLiteral",
														"value": "INSUFFICIENT_TAKER_ALLOWANCE"
													},
													{
														"type": "stringLiteral",
														"value": "INSUFFICIENT_MAKER_BALANCE"
													},
													{
														"type": "stringLiteral",
														"value": "INSUFFICIENT_MAKER_ALLOWANCE"
													},
													{
														"type": "stringLiteral",
														"value": "INSUFFICIENT_TAKER_FEE_BALANCE"
													},
													{
														"type": "stringLiteral",
														"value": "INSUFFICIENT_TAKER_FEE_ALLOWANCE"
													},
													{
														"type": "stringLiteral",
														"value": "INSUFFICIENT_MAKER_FEE_BALANCE"
													},
													{
														"type": "stringLiteral",
														"value": "INSUFFICIENT_MAKER_FEE_ALLOWANCE"
													},
													{
														"type": "stringLiteral",
														"value": "TRANSACTION_SENDER_IS_NOT_FILL_ORDER_TAKER"
													},
													{
														"type": "stringLiteral",
														"value": "MULTIPLE_MAKERS_IN_SINGLE_CANCEL_BATCH_DISALLOWED"
													},
													{
														"type": "stringLiteral",
														"value": "INSUFFICIENT_REMAINING_FILL_AMOUNT"
													},
													{
														"type": "stringLiteral",
														"value": "MULTIPLE_TAKER_TOKENS_IN_FILL_UP_TO_DISALLOWED"
													},
													{
														"type": "stringLiteral",
														"value": "BATCH_ORDERS_MUST_HAVE_SAME_EXCHANGE_ADDRESS"
													},
													{
														"type": "stringLiteral",
														"value": "BATCH_ORDERS_MUST_HAVE_AT_LEAST_ONE_ITEM"
													}
												]
											},
											"defaultValue": " ExchangeContractErrs.InsufficientTakerFeeAllowance"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1155
											]
										}
									],
									"sources": [
										{
											"fileName": "src/utils/exchange_transfer_simulator.ts",
											"line": 15,
											"character": 25
										},
										{
											"fileName": "src/utils/exchange_transfer_simulator.ts",
											"line": 19,
											"character": 25
										},
										{
											"fileName": "src/utils/exchange_transfer_simulator.ts",
											"line": 25,
											"character": 25
										},
										{
											"fileName": "src/utils/exchange_transfer_simulator.ts",
											"line": 29,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										1154
									]
								}
							],
							"sources": [
								{
									"fileName": "src/utils/exchange_transfer_simulator.ts",
									"line": 14,
									"character": 27
								},
								{
									"fileName": "src/utils/exchange_transfer_simulator.ts",
									"line": 24,
									"character": 34
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1153
							]
						}
					],
					"sources": [
						{
							"fileName": "src/utils/exchange_transfer_simulator.ts",
							"line": 13,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						1136
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1139
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1152
					]
				}
			],
			"sources": [
				{
					"fileName": "src/utils/exchange_transfer_simulator.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 788,
			"name": "\"src/utils/filter_utils\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/utils/filter_utils.ts",
			"children": [
				{
					"id": 789,
					"name": "TOPIC_LENGTH",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils/filter_utils.ts",
							"line": 9,
							"character": 18
						}
					],
					"type": {
						"type": "unknown",
						"name": "32"
					},
					"defaultValue": "32"
				},
				{
					"id": 790,
					"name": "filterUtils",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 791,
							"name": "generateUUID",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 792,
									"name": "generateUUID",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/filter_utils.ts",
									"line": 12,
									"character": 16
								}
							]
						},
						{
							"id": 800,
							"name": "getEventSignatureFromAbiByName",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 801,
									"name": "getEventSignatureFromAbiByName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 802,
											"name": "eventAbi",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "EventAbi"
											}
										},
										{
											"id": 803,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEvents",
												"id": 627
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/filter_utils.ts",
									"line": 35,
									"character": 34
								}
							]
						},
						{
							"id": 793,
							"name": "getFilter",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 794,
									"name": "getFilter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 795,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 796,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractEvents",
												"id": 627
											}
										},
										{
											"id": 797,
											"name": "indexFilterValues",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IndexedFilterValues",
												"id": 488
											}
										},
										{
											"id": 798,
											"name": "abi",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3.ContractAbi"
											}
										},
										{
											"id": 799,
											"name": "subscriptionOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "SubscriptionOpts",
												"id": 494
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "FilterObject"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/filter_utils.ts",
									"line": 15,
									"character": 13
								}
							]
						},
						{
							"id": 804,
							"name": "getTopicsForIndexedArgs",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 805,
									"name": "getTopicsForIndexedArgs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 806,
											"name": "abi",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "EventAbi"
											}
										},
										{
											"id": 807,
											"name": "indexFilterValues",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IndexedFilterValues",
												"id": 488
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Array",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/filter_utils.ts",
									"line": 40,
									"character": 27
								}
							]
						},
						{
							"id": 808,
							"name": "matchesFilter",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 809,
									"name": "matchesFilter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 810,
											"name": "log",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LogEntry"
											}
										},
										{
											"id": 811,
											"name": "filter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "FilterObject"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/filter_utils.ts",
									"line": 59,
									"character": 17
								}
							]
						},
						{
							"id": 816,
							"name": "matchesTopic",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 817,
									"name": "matchesTopic",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 818,
											"name": "logTopic",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 819,
											"name": "filterTopic",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/filter_utils.ts",
									"line": 73,
									"character": 16
								}
							]
						},
						{
							"id": 812,
							"name": "matchesTopics",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 813,
									"name": "matchesTopics",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 814,
											"name": "logTopics",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 815,
											"name": "filterTopics",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Array",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/filter_utils.ts",
									"line": 68,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								791,
								800,
								793,
								804,
								808,
								816,
								812
							]
						}
					],
					"sources": [
						{
							"fileName": "src/utils/filter_utils.ts",
							"line": 11,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						789
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						790
					]
				}
			],
			"sources": [
				{
					"fileName": "src/utils/filter_utils.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 820,
			"name": "\"src/utils/interval_utils\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/utils/interval_utils.ts",
			"children": [
				{
					"id": 821,
					"name": "intervalUtils",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 828,
							"name": "clearAsyncExcludingInterval",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 829,
									"name": "clearAsyncExcludingInterval",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 830,
											"name": "intervalId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Timer"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/interval_utils.ts",
									"line": 17,
									"character": 31
								}
							]
						},
						{
							"id": 822,
							"name": "setAsyncExcludingInterval",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 823,
									"name": "setAsyncExcludingInterval",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 824,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 825,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 826,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Promise",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "src/utils/interval_utils.ts",
															"line": 4,
															"character": 33
														}
													]
												}
											}
										},
										{
											"id": 827,
											"name": "intervalMs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Timer"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/interval_utils.ts",
									"line": 4,
									"character": 29
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								828,
								822
							]
						}
					],
					"sources": [
						{
							"fileName": "src/utils/interval_utils.ts",
							"line": 3,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						821
					]
				}
			],
			"sources": [
				{
					"fileName": "src/utils/interval_utils.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1467,
			"name": "\"src/utils/order_state_utils\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/utils/order_state_utils.ts",
			"children": [
				{
					"id": 1468,
					"name": "OrderStateUtils",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1469,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1470,
									"name": "new OrderStateUtils",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1471,
											"name": "balanceAndProxyAllowanceLazyStore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BalanceAndProxyAllowanceLazyStore",
												"id": 1102
											}
										},
										{
											"id": 1472,
											"name": "orderFilledCancelledLazyStore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OrderFilledCancelledLazyStore",
												"id": 1428
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OrderStateUtils",
										"id": 1468
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/order_state_utils.ts",
									"line": 58,
									"character": 5
								}
							]
						},
						{
							"id": 1476,
							"name": "getOrderRelevantStateAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1477,
									"name": "getOrderRelevantStateAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1478,
											"name": "signedOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SignedOrder",
												"id": 454
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "OrderRelevantState",
												"id": 580
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/order_state_utils.ts",
									"line": 84,
									"character": 43
								}
							]
						},
						{
							"id": 1473,
							"name": "getOrderStateAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1474,
									"name": "getOrderStateAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1475,
											"name": "signedOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SignedOrder",
												"id": 454
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "OrderState",
												"id": 640
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/order_state_utils.ts",
									"line": 64,
									"character": 35
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1469
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1476,
								1473
							]
						}
					],
					"sources": [
						{
							"fileName": "src/utils/order_state_utils.ts",
							"line": 25,
							"character": 28
						}
					]
				},
				{
					"id": 1479,
					"name": "ACCEPTABLE_RELATIVE_ROUNDING_ERROR",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils/order_state_utils.ts",
							"line": 23,
							"character": 40
						}
					],
					"type": {
						"type": "unknown",
						"name": "0.0001"
					},
					"defaultValue": "0.0001"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1468
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1479
					]
				}
			],
			"sources": [
				{
					"fileName": "src/utils/order_state_utils.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1181,
			"name": "\"src/utils/order_validation_utils\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/utils/order_validation_utils.ts",
			"children": [
				{
					"id": 1182,
					"name": "OrderValidationUtils",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1195,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1196,
									"name": "new OrderValidationUtils",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1197,
											"name": "tokenWrapper",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TokenWrapper",
												"id": 923
											}
										},
										{
											"id": 1198,
											"name": "exchangeWrapper",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ExchangeWrapper",
												"id": 1223
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OrderValidationUtils",
										"id": 1182
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/order_validation_utils.ts",
									"line": 86,
									"character": 5
								}
							]
						},
						{
							"id": 1212,
							"name": "validateFillOrKillOrderThrowIfInvalidAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1213,
									"name": "validateFillOrKillOrderThrowIfInvalidAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1214,
											"name": "exchangeTradeEmulator",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ExchangeTransferSimulator",
												"id": 1139
											}
										},
										{
											"id": 1215,
											"name": "signedOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SignedOrder",
												"id": 454
											}
										},
										{
											"id": 1216,
											"name": "fillTakerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1217,
											"name": "takerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1218,
											"name": "zrxTokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/order_validation_utils.ts",
									"line": 158,
									"character": 59
								}
							]
						},
						{
							"id": 1205,
							"name": "validateFillOrderThrowIfInvalidAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1206,
									"name": "validateFillOrderThrowIfInvalidAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1207,
											"name": "exchangeTradeEmulator",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ExchangeTransferSimulator",
												"id": 1139
											}
										},
										{
											"id": 1208,
											"name": "signedOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SignedOrder",
												"id": 454
											}
										},
										{
											"id": 1209,
											"name": "fillTakerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1210,
											"name": "takerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1211,
											"name": "zrxTokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/order_validation_utils.ts",
									"line": 123,
									"character": 53
								}
							]
						},
						{
							"id": 1199,
							"name": "validateOrderFillableOrThrowAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1200,
									"name": "validateOrderFillableOrThrowAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1201,
											"name": "exchangeTradeEmulator",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ExchangeTransferSimulator",
												"id": 1139
											}
										},
										{
											"id": 1202,
											"name": "signedOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SignedOrder",
												"id": 454
											}
										},
										{
											"id": 1203,
											"name": "zrxTokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1204,
											"name": "expectedFillTakerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/order_validation_utils.ts",
									"line": 91,
									"character": 50
								}
							]
						},
						{
							"id": 1183,
							"name": "validateCancelOrderThrowIfInvalid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1184,
									"name": "validateCancelOrderThrowIfInvalid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1185,
											"name": "order",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Order",
												"id": 441
											}
										},
										{
											"id": 1186,
											"name": "cancelTakerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1187,
											"name": "unavailableTakerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/order_validation_utils.ts",
									"line": 16,
									"character": 51
								}
							]
						},
						{
							"id": 1188,
							"name": "validateFillOrderBalancesAllowancesThrowIfInvalidAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1189,
									"name": "validateFillOrderBalancesAllowancesThrowIfInvalidAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1190,
											"name": "exchangeTradeEmulator",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ExchangeTransferSimulator",
												"id": 1139
											}
										},
										{
											"id": 1191,
											"name": "signedOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SignedOrder",
												"id": 454
											}
										},
										{
											"id": 1192,
											"name": "fillTakerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1193,
											"name": "senderAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1194,
											"name": "zrxTokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/order_validation_utils.ts",
									"line": 30,
									"character": 78
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1195
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1212,
								1205,
								1199,
								1183,
								1188
							]
						}
					],
					"sources": [
						{
							"fileName": "src/utils/order_validation_utils.ts",
							"line": 13,
							"character": 33
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1182
					]
				}
			],
			"sources": [
				{
					"fileName": "src/utils/order_validation_utils.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 657,
			"name": "\"src/utils/signature_utils\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/utils/signature_utils.ts",
			"children": [
				{
					"id": 658,
					"name": "signatureUtils",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 659,
							"name": "isValidSignature",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 660,
									"name": "isValidSignature",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 661,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 662,
											"name": "signature",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ECSignature",
												"id": 26
											}
										},
										{
											"id": 663,
											"name": "signerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/signature_utils.ts",
									"line": 6,
									"character": 20
								}
							]
						},
						{
							"id": 667,
							"name": "parseSignatureHexAsRSV",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 668,
									"name": "parseSignatureHexAsRSV",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 669,
											"name": "signatureHex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ECSignature",
										"id": 26
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/signature_utils.ts",
									"line": 36,
									"character": 26
								}
							]
						},
						{
							"id": 664,
							"name": "parseSignatureHexAsVRS",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 665,
									"name": "parseSignatureHexAsVRS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 666,
											"name": "signatureHex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ECSignature",
										"id": 26
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/signature_utils.ts",
									"line": 21,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								659,
								667,
								664
							]
						}
					],
					"sources": [
						{
							"fileName": "src/utils/signature_utils.ts",
							"line": 5,
							"character": 27
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						658
					]
				}
			],
			"sources": [
				{
					"fileName": "src/utils/signature_utils.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1156,
			"name": "\"src/utils/utils\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/utils/utils.ts",
			"children": [
				{
					"id": 1157,
					"name": "utils",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1158,
							"name": "bigNumberToBN",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1159,
									"name": "bigNumberToBN",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Converts BigNumber instance to BN\nThe only reason we convert to BN is to remain compatible with `ethABI. soliditySHA3` that\nexpects values of Solidity type `uint` to be passed as type `BN`.\nWe do not use BN anywhere else in the codebase."
									},
									"parameters": [
										{
											"id": 1160,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "BN"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/utils.ts",
									"line": 16,
									"character": 17
								}
							]
						},
						{
							"id": 1161,
							"name": "consoleLog",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1162,
									"name": "consoleLog",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1163,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/utils.ts",
									"line": 19,
									"character": 14
								}
							]
						},
						{
							"id": 1179,
							"name": "getCurrentUnixTimestampMs",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1180,
									"name": "getCurrentUnixTimestampMs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNumber"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/utils.ts",
									"line": 56,
									"character": 29
								}
							]
						},
						{
							"id": 1177,
							"name": "getCurrentUnixTimestampSec",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1178,
									"name": "getCurrentUnixTimestampSec",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNumber"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/utils.ts",
									"line": 53,
									"character": 30
								}
							]
						},
						{
							"id": 1174,
							"name": "getOrderHashHex",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1175,
									"name": "getOrderHashHex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1176,
											"name": "order",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Order",
														"id": 441
													},
													{
														"type": "reference",
														"name": "SignedOrder",
														"id": 454
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/utils.ts",
									"line": 32,
									"character": 19
								}
							]
						},
						{
							"id": 1164,
							"name": "isParityNode",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1165,
									"name": "isParityNode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1166,
											"name": "nodeVersion",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/utils.ts",
									"line": 23,
									"character": 16
								}
							]
						},
						{
							"id": 1167,
							"name": "isTestRpc",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1168,
									"name": "isTestRpc",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1169,
											"name": "nodeVersion",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/utils.ts",
									"line": 26,
									"character": 13
								}
							]
						},
						{
							"id": 1170,
							"name": "spawnSwitchErr",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1171,
									"name": "spawnSwitchErr",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1172,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1173,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Error"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/utils/utils.ts",
									"line": 29,
									"character": 18
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								1158,
								1161,
								1179,
								1177,
								1174,
								1164,
								1167,
								1170
							]
						}
					],
					"sources": [
						{
							"fileName": "src/utils/utils.ts",
							"line": 9,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1157
					]
				}
			],
			"sources": [
				{
					"fileName": "src/utils/utils.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 681,
			"name": "\"src/web3_wrapper\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/src/web3_wrapper.ts",
			"children": [
				{
					"id": 691,
					"name": "Web3Wrapper",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 692,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 693,
									"name": "new Web3Wrapper",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 694,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Provider"
											}
										},
										{
											"id": 695,
											"name": "networkId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 696,
											"name": "defaults",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Partial",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TxData"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Web3Wrapper",
										"id": 691
									}
								}
							],
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 33,
									"character": 37
								}
							]
						},
						{
							"id": 727,
							"name": "doesContractExistAtAddressAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 728,
									"name": "doesContractExistAtAddressAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 729,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 105,
									"character": 48
								}
							]
						},
						{
							"id": 742,
							"name": "getAvailableAddressesAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 743,
									"name": "getAvailableAddressesAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 127,
									"character": 43
								}
							]
						},
						{
							"id": 724,
							"name": "getBalanceInWeiAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 725,
									"name": "getBalanceInWeiAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 726,
											"name": "owner",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 100,
									"character": 37
								}
							]
						},
						{
							"id": 736,
							"name": "getBlockAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 737,
									"name": "getBlockAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 738,
											"name": "blockParam",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Web3.BlockParam"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BlockWithoutTransactionData"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 119,
									"character": 30
								}
							]
						},
						{
							"id": 734,
							"name": "getBlockNumberAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 735,
									"name": "getBlockNumberAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 115,
									"character": 36
								}
							]
						},
						{
							"id": 739,
							"name": "getBlockTimestampAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 740,
									"name": "getBlockTimestampAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 741,
											"name": "blockParam",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Web3.BlockParam"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 123,
									"character": 39
								}
							]
						},
						{
							"id": 716,
							"name": "getContractInstanceFromArtifactAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 717,
									"name": "getContractInstanceFromArtifactAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 718,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractInstance"
											}
										}
									],
									"parameters": [
										{
											"id": 719,
											"name": "artifact",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Artifact",
												"id": 554
											}
										},
										{
											"id": 720,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"name": "ContractInstance"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 75,
									"character": 53
								}
							]
						},
						{
							"id": 712,
							"name": "getCurrentProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 713,
									"name": "getCurrentProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Provider"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 69,
									"character": 29
								}
							]
						},
						{
							"id": 744,
							"name": "getLogsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 745,
									"name": "getLogsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 746,
											"name": "filter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "FilterObject"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "LogEntry"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 131,
									"character": 29
								}
							]
						},
						{
							"id": 714,
							"name": "getNetworkId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 715,
									"name": "getNetworkId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 72,
									"character": 23
								}
							]
						},
						{
							"id": 707,
							"name": "getNodeVersionAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 708,
									"name": "getNodeVersionAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 58,
									"character": 36
								}
							]
						},
						{
							"id": 709,
							"name": "getTransactionReceiptAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 710,
									"name": "getTransactionReceiptAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 711,
											"name": "txHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TransactionReceipt",
												"id": 597
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 62,
									"character": 43
								}
							]
						},
						{
							"id": 701,
							"name": "isAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 702,
									"name": "isAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 703,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 51,
									"character": 20
								}
							]
						},
						{
							"id": 704,
							"name": "isSenderAddressAvailableAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 705,
									"name": "isSenderAddressAvailableAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 706,
											"name": "senderAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 54,
									"character": 46
								}
							]
						},
						{
							"id": 697,
							"name": "setProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 698,
									"name": "setProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 699,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Provider"
											}
										},
										{
											"id": 700,
											"name": "networkId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 47,
									"character": 22
								}
							]
						},
						{
							"id": 730,
							"name": "signTransactionAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 731,
									"name": "signTransactionAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 732,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 733,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 111,
									"character": 37
								}
							]
						},
						{
							"id": 721,
							"name": "toWei",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 722,
									"name": "toWei",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 723,
											"name": "ethAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "BigNumber"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 96,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								692
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								727,
								742,
								724,
								736,
								734,
								739,
								716,
								712,
								744,
								714,
								707,
								709,
								701,
								704,
								697,
								730,
								721
							]
						}
					],
					"sources": [
						{
							"fileName": "src/web3_wrapper.ts",
							"line": 29,
							"character": 24
						}
					]
				},
				{
					"id": 682,
					"name": "RawLogEntry",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 688,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 15,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 686,
							"name": "blockHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 13,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 687,
							"name": "blockNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 14,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 689,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 16,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 683,
							"name": "logIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 10,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 690,
							"name": "topics",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 17,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 685,
							"name": "transactionHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 12,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 684,
							"name": "transactionIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 11,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								688,
								686,
								687,
								689,
								683,
								690,
								685,
								684
							]
						}
					],
					"sources": [
						{
							"fileName": "src/web3_wrapper.ts",
							"line": 9,
							"character": 21
						}
					]
				},
				{
					"id": 747,
					"name": "CONTRACT_NAME_TO_NOT_FOUND_ERROR",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {},
					"children": [
						{
							"id": 749,
							"name": "EtherToken",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 22,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "EXCHANGE_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "ZRX_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "ETHER_TOKEN_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "TOKEN_TRANSFER_PROXY_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "TOKEN_REGISTRY_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "TOKEN_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "UNHANDLED_ERROR"
									},
									{
										"type": "stringLiteral",
										"value": "USER_HAS_NO_ASSOCIATED_ADDRESSES"
									},
									{
										"type": "stringLiteral",
										"value": "INVALID_SIGNATURE"
									},
									{
										"type": "stringLiteral",
										"value": "CONTRACT_NOT_DEPLOYED_ON_NETWORK"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_ALLOWANCE_FOR_TRANSFER"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_BALANCE_FOR_TRANSFER"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_ETH_BALANCE_FOR_DEPOSIT"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_WETH_BALANCE_FOR_WITHDRAWAL"
									},
									{
										"type": "stringLiteral",
										"value": "INVALID_JUMP"
									},
									{
										"type": "stringLiteral",
										"value": "OUT_OF_GAS"
									},
									{
										"type": "stringLiteral",
										"value": "NO_NETWORK_ID"
									},
									{
										"type": "stringLiteral",
										"value": "SUBSCRIPTION_NOT_FOUND"
									},
									{
										"type": "stringLiteral",
										"value": "SUBSCRIPTION_ALREADY_PRESENT"
									},
									{
										"type": "stringLiteral",
										"value": "TRANSACTION_MINING_TIMEOUT"
									}
								]
							},
							"defaultValue": " ZeroExError.EtherTokenContractDoesNotExist"
						},
						{
							"id": 753,
							"name": "Exchange",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 26,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "EXCHANGE_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "ZRX_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "ETHER_TOKEN_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "TOKEN_TRANSFER_PROXY_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "TOKEN_REGISTRY_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "TOKEN_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "UNHANDLED_ERROR"
									},
									{
										"type": "stringLiteral",
										"value": "USER_HAS_NO_ASSOCIATED_ADDRESSES"
									},
									{
										"type": "stringLiteral",
										"value": "INVALID_SIGNATURE"
									},
									{
										"type": "stringLiteral",
										"value": "CONTRACT_NOT_DEPLOYED_ON_NETWORK"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_ALLOWANCE_FOR_TRANSFER"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_BALANCE_FOR_TRANSFER"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_ETH_BALANCE_FOR_DEPOSIT"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_WETH_BALANCE_FOR_WITHDRAWAL"
									},
									{
										"type": "stringLiteral",
										"value": "INVALID_JUMP"
									},
									{
										"type": "stringLiteral",
										"value": "OUT_OF_GAS"
									},
									{
										"type": "stringLiteral",
										"value": "NO_NETWORK_ID"
									},
									{
										"type": "stringLiteral",
										"value": "SUBSCRIPTION_NOT_FOUND"
									},
									{
										"type": "stringLiteral",
										"value": "SUBSCRIPTION_ALREADY_PRESENT"
									},
									{
										"type": "stringLiteral",
										"value": "TRANSACTION_MINING_TIMEOUT"
									}
								]
							},
							"defaultValue": " ZeroExError.ExchangeContractDoesNotExist"
						},
						{
							"id": 750,
							"name": "Token",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 23,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "EXCHANGE_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "ZRX_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "ETHER_TOKEN_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "TOKEN_TRANSFER_PROXY_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "TOKEN_REGISTRY_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "TOKEN_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "UNHANDLED_ERROR"
									},
									{
										"type": "stringLiteral",
										"value": "USER_HAS_NO_ASSOCIATED_ADDRESSES"
									},
									{
										"type": "stringLiteral",
										"value": "INVALID_SIGNATURE"
									},
									{
										"type": "stringLiteral",
										"value": "CONTRACT_NOT_DEPLOYED_ON_NETWORK"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_ALLOWANCE_FOR_TRANSFER"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_BALANCE_FOR_TRANSFER"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_ETH_BALANCE_FOR_DEPOSIT"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_WETH_BALANCE_FOR_WITHDRAWAL"
									},
									{
										"type": "stringLiteral",
										"value": "INVALID_JUMP"
									},
									{
										"type": "stringLiteral",
										"value": "OUT_OF_GAS"
									},
									{
										"type": "stringLiteral",
										"value": "NO_NETWORK_ID"
									},
									{
										"type": "stringLiteral",
										"value": "SUBSCRIPTION_NOT_FOUND"
									},
									{
										"type": "stringLiteral",
										"value": "SUBSCRIPTION_ALREADY_PRESENT"
									},
									{
										"type": "stringLiteral",
										"value": "TRANSACTION_MINING_TIMEOUT"
									}
								]
							},
							"defaultValue": " ZeroExError.TokenContractDoesNotExist"
						},
						{
							"id": 751,
							"name": "TokenRegistry",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 24,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "EXCHANGE_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "ZRX_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "ETHER_TOKEN_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "TOKEN_TRANSFER_PROXY_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "TOKEN_REGISTRY_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "TOKEN_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "UNHANDLED_ERROR"
									},
									{
										"type": "stringLiteral",
										"value": "USER_HAS_NO_ASSOCIATED_ADDRESSES"
									},
									{
										"type": "stringLiteral",
										"value": "INVALID_SIGNATURE"
									},
									{
										"type": "stringLiteral",
										"value": "CONTRACT_NOT_DEPLOYED_ON_NETWORK"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_ALLOWANCE_FOR_TRANSFER"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_BALANCE_FOR_TRANSFER"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_ETH_BALANCE_FOR_DEPOSIT"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_WETH_BALANCE_FOR_WITHDRAWAL"
									},
									{
										"type": "stringLiteral",
										"value": "INVALID_JUMP"
									},
									{
										"type": "stringLiteral",
										"value": "OUT_OF_GAS"
									},
									{
										"type": "stringLiteral",
										"value": "NO_NETWORK_ID"
									},
									{
										"type": "stringLiteral",
										"value": "SUBSCRIPTION_NOT_FOUND"
									},
									{
										"type": "stringLiteral",
										"value": "SUBSCRIPTION_ALREADY_PRESENT"
									},
									{
										"type": "stringLiteral",
										"value": "TRANSACTION_MINING_TIMEOUT"
									}
								]
							},
							"defaultValue": " ZeroExError.TokenRegistryContractDoesNotExist"
						},
						{
							"id": 752,
							"name": "TokenTransferProxy",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 25,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "EXCHANGE_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "ZRX_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "ETHER_TOKEN_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "TOKEN_TRANSFER_PROXY_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "TOKEN_REGISTRY_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "TOKEN_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "UNHANDLED_ERROR"
									},
									{
										"type": "stringLiteral",
										"value": "USER_HAS_NO_ASSOCIATED_ADDRESSES"
									},
									{
										"type": "stringLiteral",
										"value": "INVALID_SIGNATURE"
									},
									{
										"type": "stringLiteral",
										"value": "CONTRACT_NOT_DEPLOYED_ON_NETWORK"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_ALLOWANCE_FOR_TRANSFER"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_BALANCE_FOR_TRANSFER"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_ETH_BALANCE_FOR_DEPOSIT"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_WETH_BALANCE_FOR_WITHDRAWAL"
									},
									{
										"type": "stringLiteral",
										"value": "INVALID_JUMP"
									},
									{
										"type": "stringLiteral",
										"value": "OUT_OF_GAS"
									},
									{
										"type": "stringLiteral",
										"value": "NO_NETWORK_ID"
									},
									{
										"type": "stringLiteral",
										"value": "SUBSCRIPTION_NOT_FOUND"
									},
									{
										"type": "stringLiteral",
										"value": "SUBSCRIPTION_ALREADY_PRESENT"
									},
									{
										"type": "stringLiteral",
										"value": "TRANSACTION_MINING_TIMEOUT"
									}
								]
							},
							"defaultValue": " ZeroExError.TokenTransferProxyContractDoesNotExist"
						},
						{
							"id": 748,
							"name": "ZRX",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "src/web3_wrapper.ts",
									"line": 21,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "EXCHANGE_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "ZRX_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "ETHER_TOKEN_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "TOKEN_TRANSFER_PROXY_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "TOKEN_REGISTRY_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "TOKEN_CONTRACT_DOES_NOT_EXIST"
									},
									{
										"type": "stringLiteral",
										"value": "UNHANDLED_ERROR"
									},
									{
										"type": "stringLiteral",
										"value": "USER_HAS_NO_ASSOCIATED_ADDRESSES"
									},
									{
										"type": "stringLiteral",
										"value": "INVALID_SIGNATURE"
									},
									{
										"type": "stringLiteral",
										"value": "CONTRACT_NOT_DEPLOYED_ON_NETWORK"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_ALLOWANCE_FOR_TRANSFER"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_BALANCE_FOR_TRANSFER"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_ETH_BALANCE_FOR_DEPOSIT"
									},
									{
										"type": "stringLiteral",
										"value": "INSUFFICIENT_WETH_BALANCE_FOR_WITHDRAWAL"
									},
									{
										"type": "stringLiteral",
										"value": "INVALID_JUMP"
									},
									{
										"type": "stringLiteral",
										"value": "OUT_OF_GAS"
									},
									{
										"type": "stringLiteral",
										"value": "NO_NETWORK_ID"
									},
									{
										"type": "stringLiteral",
										"value": "SUBSCRIPTION_NOT_FOUND"
									},
									{
										"type": "stringLiteral",
										"value": "SUBSCRIPTION_ALREADY_PRESENT"
									},
									{
										"type": "stringLiteral",
										"value": "TRANSACTION_MINING_TIMEOUT"
									}
								]
							},
							"defaultValue": " ZeroExError.ZRXContractDoesNotExist"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								749,
								753,
								750,
								751,
								752,
								748
							]
						}
					],
					"sources": [
						{
							"fileName": "src/web3_wrapper.ts",
							"line": 20,
							"character": 38
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						691
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						682
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						747
					]
				}
			],
			"sources": [
				{
					"fileName": "src/web3_wrapper.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1717,
			"name": "\"test/0x.js_test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/0x.js_test.ts",
			"children": [
				{
					"id": 1718,
					"name": "blockchainLifecycle",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/0x.js_test.ts",
							"line": 15,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "BlockchainLifecycle",
						"id": 1651
					},
					"defaultValue": " new BlockchainLifecycle()"
				},
				{
					"id": 1719,
					"name": "expect",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/0x.js_test.ts",
							"line": 17,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "ExpectStatic"
					},
					"defaultValue": " chai.expect"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1718,
						1719
					]
				}
			],
			"sources": [
				{
					"fileName": "test/0x.js_test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1720,
			"name": "\"test/artifacts_test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/artifacts_test.ts",
			"children": [
				{
					"id": 1722,
					"name": "TIMEOUT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/artifacts_test.ts",
							"line": 14,
							"character": 13
						}
					],
					"type": {
						"type": "unknown",
						"name": "10000"
					},
					"defaultValue": "10000"
				},
				{
					"id": 1721,
					"name": "expect",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/artifacts_test.ts",
							"line": 11,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "ExpectStatic"
					},
					"defaultValue": " chai.expect"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1722,
						1721
					]
				}
			],
			"sources": [
				{
					"fileName": "test/artifacts_test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1723,
			"name": "\"test/assert_test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/assert_test.ts",
			"children": [
				{
					"id": 1724,
					"name": "expect",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/assert_test.ts",
							"line": 10,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "ExpectStatic"
					},
					"defaultValue": " chai.expect"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1724
					]
				}
			],
			"sources": [
				{
					"fileName": "test/assert_test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1725,
			"name": "\"test/ether_token_wrapper_test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/ether_token_wrapper_test.ts",
			"children": [
				{
					"id": 1728,
					"name": "MAX_REASONABLE_GAS_COST_IN_WEI",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/ether_token_wrapper_test.ts",
							"line": 21,
							"character": 36
						}
					],
					"type": {
						"type": "unknown",
						"name": "62517"
					},
					"defaultValue": "62517"
				},
				{
					"id": 1727,
					"name": "blockchainLifecycle",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/ether_token_wrapper_test.ts",
							"line": 15,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "BlockchainLifecycle",
						"id": 1651
					},
					"defaultValue": " new BlockchainLifecycle()"
				},
				{
					"id": 1726,
					"name": "expect",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/ether_token_wrapper_test.ts",
							"line": 14,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "ExpectStatic"
					},
					"defaultValue": " chai.expect"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1728,
						1727,
						1726
					]
				}
			],
			"sources": [
				{
					"fileName": "test/ether_token_wrapper_test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1729,
			"name": "\"test/event_watcher_test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/event_watcher_test.ts",
			"children": [
				{
					"id": 1730,
					"name": "expect",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/event_watcher_test.ts",
							"line": 22,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "ExpectStatic"
					},
					"defaultValue": " chai.expect"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1730
					]
				}
			],
			"sources": [
				{
					"fileName": "test/event_watcher_test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1731,
			"name": "\"test/exchange_transfer_simulator_test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/exchange_transfer_simulator_test.ts",
			"children": [
				{
					"id": 1733,
					"name": "blockchainLifecycle",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/exchange_transfer_simulator_test.ts",
							"line": 15,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "BlockchainLifecycle",
						"id": 1651
					},
					"defaultValue": " new BlockchainLifecycle()"
				},
				{
					"id": 1732,
					"name": "expect",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/exchange_transfer_simulator_test.ts",
							"line": 14,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "ExpectStatic"
					},
					"defaultValue": " chai.expect"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1733,
						1732
					]
				}
			],
			"sources": [
				{
					"fileName": "test/exchange_transfer_simulator_test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1794,
			"name": "\"test/exchange_wrapper_test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/exchange_wrapper_test.ts",
			"children": [
				{
					"id": 1797,
					"name": "NON_EXISTENT_ORDER_HASH",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/exchange_wrapper_test.ts",
							"line": 33,
							"character": 29
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "0x79370342234e7acd6bbeac335bd3bb1d368383294b64b8160a00f4060e4d3777"
					},
					"defaultValue": "\"0x79370342234e7acd6bbeac335bd3bb1d368383294b64b8160a00f4060e4d3777\""
				},
				{
					"id": 1796,
					"name": "blockchainLifecycle",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/exchange_wrapper_test.ts",
							"line": 31,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "BlockchainLifecycle",
						"id": 1651
					},
					"defaultValue": " new BlockchainLifecycle()"
				},
				{
					"id": 1795,
					"name": "expect",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/exchange_wrapper_test.ts",
							"line": 30,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "ExpectStatic"
					},
					"defaultValue": " chai.expect"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1797,
						1796,
						1795
					]
				}
			],
			"sources": [
				{
					"fileName": "test/exchange_wrapper_test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1802,
			"name": "\"test/expiration_watcher_test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/expiration_watcher_test.ts",
			"children": [
				{
					"id": 1804,
					"name": "blockchainLifecycle",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/expiration_watcher_test.ts",
							"line": 24,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "BlockchainLifecycle",
						"id": 1651
					},
					"defaultValue": " new BlockchainLifecycle()"
				},
				{
					"id": 1803,
					"name": "expect",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/expiration_watcher_test.ts",
							"line": 23,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "ExpectStatic"
					},
					"defaultValue": " chai.expect"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1804,
						1803
					]
				}
			],
			"sources": [
				{
					"fileName": "test/expiration_watcher_test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1805,
			"name": "\"test/order_state_watcher_test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/order_state_watcher_test.ts",
			"children": [
				{
					"id": 1806,
					"name": "TIMEOUT_MS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/order_state_watcher_test.ts",
							"line": 32,
							"character": 16
						}
					],
					"type": {
						"type": "unknown",
						"name": "150"
					},
					"defaultValue": "150"
				},
				{
					"id": 1808,
					"name": "blockchainLifecycle",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/order_state_watcher_test.ts",
							"line": 36,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "BlockchainLifecycle",
						"id": 1651
					},
					"defaultValue": " new BlockchainLifecycle()"
				},
				{
					"id": 1807,
					"name": "expect",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/order_state_watcher_test.ts",
							"line": 35,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "ExpectStatic"
					},
					"defaultValue": " chai.expect"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1806,
						1808,
						1807
					]
				}
			],
			"sources": [
				{
					"fileName": "test/order_state_watcher_test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1809,
			"name": "\"test/order_validation_test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/order_validation_test.ts",
			"children": [
				{
					"id": 1811,
					"name": "blockchainLifecycle",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/order_validation_test.ts",
							"line": 20,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "BlockchainLifecycle",
						"id": 1651
					},
					"defaultValue": " new BlockchainLifecycle()"
				},
				{
					"id": 1810,
					"name": "expect",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/order_validation_test.ts",
							"line": 19,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "ExpectStatic"
					},
					"defaultValue": " chai.expect"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1811,
						1810
					]
				}
			],
			"sources": [
				{
					"fileName": "test/order_validation_test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1812,
			"name": "\"test/remaining_fillable_calculator_test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/remaining_fillable_calculator_test.ts",
			"children": [
				{
					"id": 1813,
					"name": "expect",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/remaining_fillable_calculator_test.ts",
							"line": 13,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "ExpectStatic"
					},
					"defaultValue": " chai.expect"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1813
					]
				}
			],
			"sources": [
				{
					"fileName": "test/remaining_fillable_calculator_test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1814,
			"name": "\"test/subscription_test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/subscription_test.ts",
			"children": [
				{
					"id": 1816,
					"name": "blockchainLifecycle",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/subscription_test.ts",
							"line": 28,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "BlockchainLifecycle",
						"id": 1651
					},
					"defaultValue": " new BlockchainLifecycle()"
				},
				{
					"id": 1815,
					"name": "expect",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/subscription_test.ts",
							"line": 27,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "ExpectStatic"
					},
					"defaultValue": " chai.expect"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1816,
						1815
					]
				}
			],
			"sources": [
				{
					"fileName": "test/subscription_test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1817,
			"name": "\"test/token_registry_wrapper_test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/token_registry_wrapper_test.ts",
			"children": [
				{
					"id": 1820,
					"name": "TOKEN_REGISTRY_SIZE_AFTER_MIGRATION",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/token_registry_wrapper_test.ts",
							"line": 17,
							"character": 41
						}
					],
					"type": {
						"type": "unknown",
						"name": "7"
					},
					"defaultValue": "7"
				},
				{
					"id": 1819,
					"name": "blockchainLifecycle",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/token_registry_wrapper_test.ts",
							"line": 15,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "BlockchainLifecycle",
						"id": 1651
					},
					"defaultValue": " new BlockchainLifecycle()"
				},
				{
					"id": 1818,
					"name": "expect",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/token_registry_wrapper_test.ts",
							"line": 14,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "ExpectStatic"
					},
					"defaultValue": " chai.expect"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1820,
						1819,
						1818
					]
				}
			],
			"sources": [
				{
					"fileName": "test/token_registry_wrapper_test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1821,
			"name": "\"test/token_transfer_proxy_wrapper_test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/token_transfer_proxy_wrapper_test.ts",
			"children": [
				{
					"id": 1822,
					"name": "expect",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/token_transfer_proxy_wrapper_test.ts",
							"line": 11,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "ExpectStatic"
					},
					"defaultValue": " chai.expect"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1822
					]
				}
			],
			"sources": [
				{
					"fileName": "test/token_transfer_proxy_wrapper_test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1823,
			"name": "\"test/token_wrapper_test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/token_wrapper_test.ts",
			"children": [
				{
					"id": 1825,
					"name": "blockchainLifecycle",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/token_wrapper_test.ts",
							"line": 31,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "BlockchainLifecycle",
						"id": 1651
					},
					"defaultValue": " new BlockchainLifecycle()"
				},
				{
					"id": 1824,
					"name": "expect",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/token_wrapper_test.ts",
							"line": 30,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "ExpectStatic"
					},
					"defaultValue": " chai.expect"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1825,
						1824
					]
				}
			],
			"sources": [
				{
					"fileName": "test/token_wrapper_test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1650,
			"name": "\"test/utils/blockchain_lifecycle\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/utils/blockchain_lifecycle.ts",
			"children": [
				{
					"id": 1651,
					"name": "BlockchainLifecycle",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1652,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1653,
									"name": "new BlockchainLifecycle",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BlockchainLifecycle",
										"id": 1651
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/blockchain_lifecycle.ts",
									"line": 5,
									"character": 39
								}
							]
						},
						{
							"id": 1658,
							"name": "mineABlock",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1659,
									"name": "mineABlock",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/blockchain_lifecycle.ts",
									"line": 23,
									"character": 27
								}
							]
						},
						{
							"id": 1656,
							"name": "revertAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1657,
									"name": "revertAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/blockchain_lifecycle.ts",
									"line": 16,
									"character": 28
								}
							]
						},
						{
							"id": 1654,
							"name": "startAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1655,
									"name": "startAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/blockchain_lifecycle.ts",
									"line": 12,
									"character": 27
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1652
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1658,
								1656,
								1654
							]
						}
					],
					"sources": [
						{
							"fileName": "test/utils/blockchain_lifecycle.ts",
							"line": 3,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1651
					]
				}
			],
			"sources": [
				{
					"fileName": "test/utils/blockchain_lifecycle.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1660,
			"name": "\"test/utils/chai_setup\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/utils/chai_setup.ts",
			"children": [
				{
					"id": 1661,
					"name": "chaiSetup",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1662,
							"name": "configure",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1663,
									"name": "configure",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/chai_setup.ts",
									"line": 7,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								1662
							]
						}
					],
					"sources": [
						{
							"fileName": "test/utils/chai_setup.ts",
							"line": 6,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1661
					]
				}
			],
			"sources": [
				{
					"fileName": "test/utils/chai_setup.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1627,
			"name": "\"test/utils/constants\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/utils/constants.ts",
			"children": [
				{
					"id": 1628,
					"name": "constants",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1638,
							"name": "GAS_ESTIMATE",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "test/utils/constants.ts",
									"line": 11,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "500000"
						},
						{
							"id": 1633,
							"name": "KOVAN_NETWORK_ID",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "test/utils/constants.ts",
									"line": 6,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "42"
						},
						{
							"id": 1635,
							"name": "KOVAN_RPC_URL",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "test/utils/constants.ts",
									"line": 8,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"https://kovan.infura.io\""
						},
						{
							"id": 1629,
							"name": "NULL_ADDRESS",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "test/utils/constants.ts",
									"line": 2,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"0x0000000000000000000000000000000000000000\""
						},
						{
							"id": 1632,
							"name": "ROPSTEN_NETWORK_ID",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "test/utils/constants.ts",
									"line": 5,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "3"
						},
						{
							"id": 1636,
							"name": "ROPSTEN_RPC_URL",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "test/utils/constants.ts",
									"line": 9,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"https://ropsten.infura.io\""
						},
						{
							"id": 1630,
							"name": "RPC_HOST",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "test/utils/constants.ts",
									"line": 3,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"localhost\""
						},
						{
							"id": 1631,
							"name": "RPC_PORT",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "test/utils/constants.ts",
									"line": 4,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "8545"
						},
						{
							"id": 1634,
							"name": "TESTRPC_NETWORK_ID",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "test/utils/constants.ts",
									"line": 7,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "50"
						},
						{
							"id": 1637,
							"name": "ZRX_DECIMALS",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "test/utils/constants.ts",
									"line": 10,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "18"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1638,
								1633,
								1635,
								1629,
								1632,
								1636,
								1630,
								1631,
								1634,
								1637
							]
						}
					],
					"sources": [
						{
							"fileName": "test/utils/constants.ts",
							"line": 1,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1628
					]
				}
			],
			"sources": [
				{
					"fileName": "test/utils/constants.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1750,
			"name": "\"test/utils/fill_scenarios\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/utils/fill_scenarios.ts",
			"children": [
				{
					"id": 1751,
					"name": "FillScenarios",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1752,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1753,
									"name": "new FillScenarios",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1754,
											"name": "zeroEx",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ZeroEx",
												"id": 1578
											}
										},
										{
											"id": 1755,
											"name": "userAddresses",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1756,
											"name": "tokens",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Token",
													"id": 468
												}
											}
										},
										{
											"id": 1757,
											"name": "zrxTokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1758,
											"name": "exchangeContractAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "FillScenarios",
										"id": 1751
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/fill_scenarios.ts",
									"line": 14,
									"character": 44
								}
							]
						},
						{
							"id": 1778,
							"name": "createAsymmetricFillableSignedOrderAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1779,
									"name": "createAsymmetricFillableSignedOrderAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1780,
											"name": "makerTokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1781,
											"name": "takerTokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1782,
											"name": "makerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1783,
											"name": "takerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1784,
											"name": "makerFillableAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1785,
											"name": "takerFillableAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1786,
											"name": "expirationUnixTimestampSec",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SignedOrder",
												"id": 454
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/fill_scenarios.ts",
									"line": 46,
									"character": 57
								}
							]
						},
						{
							"id": 1759,
							"name": "createFillableSignedOrderAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1760,
									"name": "createFillableSignedOrderAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1761,
											"name": "makerTokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1762,
											"name": "takerTokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1763,
											"name": "makerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1764,
											"name": "takerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1765,
											"name": "fillableAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1766,
											"name": "expirationUnixTimestampSec",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SignedOrder",
												"id": 454
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/fill_scenarios.ts",
									"line": 24,
									"character": 47
								}
							]
						},
						{
							"id": 1767,
							"name": "createFillableSignedOrderWithFeesAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1768,
									"name": "createFillableSignedOrderWithFeesAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1769,
											"name": "makerTokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1770,
											"name": "takerTokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1771,
											"name": "makerFee",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1772,
											"name": "takerFee",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1773,
											"name": "makerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1774,
											"name": "takerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1775,
											"name": "fillableAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1776,
											"name": "feeRecepient",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1777,
											"name": "expirationUnixTimestampSec",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SignedOrder",
												"id": 454
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/fill_scenarios.ts",
									"line": 34,
									"character": 55
								}
							]
						},
						{
							"id": 1787,
							"name": "createPartiallyFilledSignedOrderAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1788,
									"name": "createPartiallyFilledSignedOrderAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1789,
											"name": "makerTokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1790,
											"name": "takerTokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1791,
											"name": "takerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1792,
											"name": "fillableAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1793,
											"name": "partialFillAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SignedOrder",
												"id": 454
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/fill_scenarios.ts",
									"line": 58,
									"character": 54
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1752
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1778,
								1759,
								1767,
								1787
							]
						}
					],
					"sources": [
						{
							"fileName": "test/utils/fill_scenarios.ts",
							"line": 8,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1751
					]
				}
			],
			"sources": [
				{
					"fileName": "test/utils/fill_scenarios.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1734,
			"name": "\"test/utils/order_factory\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/utils/order_factory.ts",
			"children": [
				{
					"id": 1735,
					"name": "orderFactory",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1736,
							"name": "createSignedOrderAsync",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1737,
									"name": "createSignedOrderAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1738,
											"name": "zeroEx",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ZeroEx",
												"id": 1578
											}
										},
										{
											"id": 1739,
											"name": "maker",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1740,
											"name": "taker",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1741,
											"name": "makerFee",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1742,
											"name": "takerFee",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1743,
											"name": "makerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1744,
											"name": "makerTokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1745,
											"name": "takerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 1746,
											"name": "takerTokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1747,
											"name": "exchangeContractAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1748,
											"name": "feeRecipient",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1749,
											"name": "expirationUnixTimestampSecIfExists",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SignedOrder",
												"id": 454
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/order_factory.ts",
									"line": 7,
									"character": 32
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								1736
							]
						}
					],
					"sources": [
						{
							"fileName": "test/utils/order_factory.ts",
							"line": 6,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1735
					]
				}
			],
			"sources": [
				{
					"fileName": "test/utils/order_factory.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1798,
			"name": "\"test/utils/report_callback_errors\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/utils/report_callback_errors.ts",
			"children": [
				{
					"id": 1799,
					"name": "reportCallbackErrors",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1800,
							"name": "reportCallbackErrors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1801,
									"name": "done",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "DoneCallback",
										"id": 629
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "(Anonymous function)"
							}
						}
					],
					"sources": [
						{
							"fileName": "test/utils/report_callback_errors.ts",
							"line": 3,
							"character": 33
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1799
					]
				}
			],
			"sources": [
				{
					"fileName": "test/utils/report_callback_errors.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1639,
			"name": "\"test/utils/rpc\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/utils/rpc.ts",
			"children": [
				{
					"id": 1640,
					"name": "RPC",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1641,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1642,
									"name": "new RPC",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RPC",
										"id": 1640
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/rpc.ts",
									"line": 9,
									"character": 23
								}
							]
						},
						{
							"id": 1648,
							"name": "mineBlockAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1649,
									"name": "mineBlockAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/rpc.ts",
									"line": 30,
									"character": 31
								}
							]
						},
						{
							"id": 1645,
							"name": "revertSnapshotAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1646,
									"name": "revertSnapshotAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1647,
											"name": "snapshotId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/rpc.ts",
									"line": 23,
									"character": 36
								}
							]
						},
						{
							"id": 1643,
							"name": "takeSnapshotAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1644,
									"name": "takeSnapshotAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/rpc.ts",
									"line": 15,
									"character": 34
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1641
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1648,
								1645,
								1643
							]
						}
					],
					"sources": [
						{
							"fileName": "test/utils/rpc.ts",
							"line": 6,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1640
					]
				}
			],
			"sources": [
				{
					"fileName": "test/utils/rpc.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1674,
			"name": "\"test/utils/subproviders/empty_wallet_subprovider\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/utils/subproviders/empty_wallet_subprovider.ts",
			"children": [
				{
					"id": 1675,
					"name": "EmptyWalletSubprovider",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1676,
							"name": "handleRequest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1677,
									"name": "handleRequest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1678,
											"name": "payload",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "JSONRPCPayload",
												"id": 506
											}
										},
										{
											"id": 1679,
											"name": "next",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1680,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1681,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "test/utils/subproviders/empty_wallet_subprovider.ts",
															"line": 11,
															"character": 55
														}
													]
												}
											}
										},
										{
											"id": 1682,
											"name": "end",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1683,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1684,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1685,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"name": "Error"
																			},
																			{
																				"type": "intrinsic",
																				"name": "null"
																			}
																		]
																	}
																},
																{
																	"id": 1686,
																	"name": "result",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "test/utils/subproviders/empty_wallet_subprovider.ts",
															"line": 11,
															"character": 72
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/subproviders/empty_wallet_subprovider.ts",
									"line": 11,
									"character": 24
								}
							]
						},
						{
							"id": 1687,
							"name": "setEngine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1688,
									"name": "setEngine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1689,
											"name": "engine",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/subproviders/empty_wallet_subprovider.ts",
									"line": 24,
									"character": 20
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1676,
								1687
							]
						}
					],
					"sources": [
						{
							"fileName": "test/utils/subproviders/empty_wallet_subprovider.ts",
							"line": 8,
							"character": 35
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1675
					]
				}
			],
			"sources": [
				{
					"fileName": "test/utils/subproviders/empty_wallet_subprovider.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1690,
			"name": "\"test/utils/subproviders/fake_gas_estimate_subprovider\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/utils/subproviders/fake_gas_estimate_subprovider.ts",
			"children": [
				{
					"id": 1691,
					"name": "FakeGasEstimateSubprovider",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1692,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1693,
									"name": "new FakeGasEstimateSubprovider",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1694,
											"name": "constantGasAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "FakeGasEstimateSubprovider",
										"id": 1691
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/subproviders/fake_gas_estimate_subprovider.ts",
									"line": 12,
									"character": 38
								}
							]
						},
						{
							"id": 1695,
							"name": "handleRequest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1696,
									"name": "handleRequest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1697,
											"name": "payload",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "JSONRPCPayload",
												"id": 506
											}
										},
										{
											"id": 1698,
											"name": "next",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1699,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1700,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "test/utils/subproviders/fake_gas_estimate_subprovider.ts",
															"line": 18,
															"character": 55
														}
													]
												}
											}
										},
										{
											"id": 1701,
											"name": "end",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1702,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1703,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1704,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"name": "Error"
																			},
																			{
																				"type": "intrinsic",
																				"name": "null"
																			}
																		]
																	}
																},
																{
																	"id": 1705,
																	"name": "result",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "test/utils/subproviders/fake_gas_estimate_subprovider.ts",
															"line": 18,
															"character": 72
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/subproviders/fake_gas_estimate_subprovider.ts",
									"line": 18,
									"character": 24
								}
							]
						},
						{
							"id": 1706,
							"name": "setEngine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1707,
									"name": "setEngine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1708,
											"name": "engine",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/subproviders/fake_gas_estimate_subprovider.ts",
									"line": 31,
									"character": 20
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1692
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1695,
								1706
							]
						}
					],
					"sources": [
						{
							"fileName": "test/utils/subproviders/fake_gas_estimate_subprovider.ts",
							"line": 11,
							"character": 39
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1691
					]
				}
			],
			"sources": [
				{
					"fileName": "test/utils/subproviders/fake_gas_estimate_subprovider.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1664,
			"name": "\"test/utils/token_utils\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/utils/token_utils.ts",
			"children": [
				{
					"id": 1665,
					"name": "TokenUtils",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1666,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1667,
									"name": "new TokenUtils",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1668,
											"name": "tokens",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Token",
													"id": 468
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "TokenUtils",
										"id": 1665
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/token_utils.ts",
									"line": 8,
									"character": 28
								}
							]
						},
						{
							"id": 1671,
							"name": "getNonProtocolTokens",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1672,
									"name": "getNonProtocolTokens",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Token",
											"id": 468
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/token_utils.ts",
									"line": 19,
									"character": 31
								}
							]
						},
						{
							"id": 1669,
							"name": "getProtocolTokenOrThrow",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1670,
									"name": "getProtocolTokenOrThrow",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Token",
										"id": 468
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/token_utils.ts",
									"line": 12,
									"character": 34
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1666
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1671,
								1669
							]
						}
					],
					"sources": [
						{
							"fileName": "test/utils/token_utils.ts",
							"line": 7,
							"character": 23
						}
					]
				},
				{
					"id": 1673,
					"name": "PROTOCOL_TOKEN_SYMBOL",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "test/utils/token_utils.ts",
							"line": 5,
							"character": 27
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "ZRX"
					},
					"defaultValue": "\"ZRX\""
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1665
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1673
					]
				}
			],
			"sources": [
				{
					"fileName": "test/utils/token_utils.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1709,
			"name": "\"test/utils/web3_factory\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/leonidlogvinov/Dev/0x/0x.js/packages/0x.js/test/utils/web3_factory.ts",
			"children": [
				{
					"id": 1710,
					"name": "web3Factory",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1711,
							"name": "create",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1712,
									"name": "create",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1713,
											"name": "hasAddresses",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "true"
										}
									],
									"type": {
										"type": "reference",
										"name": "Web3"
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/web3_factory.ts",
									"line": 16,
									"character": 10
								}
							]
						},
						{
							"id": 1714,
							"name": "getRpcProvider",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1715,
									"name": "getRpcProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1716,
											"name": "hasAddresses",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "true"
										}
									],
									"type": {
										"type": "reference",
										"name": "Provider"
									}
								}
							],
							"sources": [
								{
									"fileName": "test/utils/web3_factory.ts",
									"line": 22,
									"character": 18
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								1711,
								1714
							]
						}
					],
					"sources": [
						{
							"fileName": "test/utils/web3_factory.ts",
							"line": 15,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1710
					]
				}
			],
			"sources": [
				{
					"fileName": "test/utils/web3_factory.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				1577,
				645,
				653,
				670,
				831,
				1039,
				1219,
				1364,
				873,
				922,
				1626,
				1480,
				1495,
				1518,
				1454,
				1551,
				1101,
				1427,
				1,
				770,
				754,
				779,
				1094,
				1135,
				788,
				820,
				1467,
				1181,
				657,
				1156,
				681,
				1717,
				1720,
				1723,
				1725,
				1729,
				1731,
				1794,
				1802,
				1805,
				1809,
				1812,
				1814,
				1817,
				1821,
				1823,
				1650,
				1660,
				1627,
				1750,
				1734,
				1798,
				1639,
				1674,
				1690,
				1664,
				1709
			]
		}
	]
}